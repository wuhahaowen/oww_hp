{"version":3,"file":"aether3d-engine.umd.js","sources":["../../Engine/core/ScriptBase.ts","../../Engine/core/PostProcessingEffectComposer.ts","../../Engine/events/EventEmitter.ts","../../Engine/core/PerformanceUtils.ts","../../Engine/controllers/PerformanceAnalyzerScript.ts","../../Engine/controllers/FPSDiagnosticTool.ts","../../Engine/core/OSUtils.ts","../../Engine/controllers/MouseInteractionScript.ts","../../Engine/core/Aether3d.ts","../../Engine/core/SceneManager.ts","../../Engine/core/RendererSystem.ts","../../Engine/core/EngineScripts.ts","../../Engine/controllers/MirrorReflectionScript.ts","../../Engine/controllers/OrbitControlsScript.ts","../../Engine/controllers/SceneLightingScript.ts","../../Engine/controllers/BloomEffectScript.ts","../../Engine/controllers/RectAreaLightScript.ts","../../node_modules/three/examples/jsm/utils/BufferGeometryUtils.js","../../node_modules/three/examples/jsm/loaders/GLTFLoader.js","../../node_modules/three/examples/jsm/loaders/DRACOLoader.js","../../Engine/controllers/GLBLoaderScript.ts","../../Engine/controllers/UVAnimationScript.ts","../../Engine/materials/AnimationMaterial.ts","../../Engine/materials/ShaderGlowMaterial.ts","../../Engine/materials/WindMaterial.ts","../../Engine/materials/RibbonMaterial.ts","../../Engine/math/Math.ts","../../Engine/controllers/Edit/DirectionalLightScript.ts","../../Engine/controllers/Edit/PointLightScript.ts"],"sourcesContent":["import { THREE } from \"./global\";\r\nimport type { IScript } from \"../interface\";\r\nimport type { Aether3d } from \"./Aether3d\";\r\nimport type { PostProcessingEffectComposer } from \"./PostProcessingEffectComposer\";\r\n\r\n/**\r\n * ScriptBase 类为所有脚本提供基础实现\r\n * 使脚本能够方便地访问渲染器中的基础数据\r\n */\r\nexport class ScriptBase implements IScript {\r\n    /**\r\n     * 脚本名称\r\n     */\r\n    public name?: string;\r\n\r\n    /**\r\n     * 脚本的唯一标识符\r\n     */\r\n    public uuid?: string;\r\n\r\n    /**\r\n     * 脚本附加到的宿主对象\r\n     */\r\n    public host: THREE.Scene | THREE.Object3D | THREE.WebGLRenderer | THREE.Camera = null!;\r\n\r\n    /**\r\n     * 渲染器实例的引用\r\n     * 通过这个引用，脚本可以访问场景、相机、渲染器等核心对象\r\n     */\r\n    protected renderer: Aether3d | null = null;\r\n\r\n    /**\r\n     * 场景对象的便捷访问\r\n     */\r\n    protected get scene(): THREE.Scene {\r\n        if (this.renderer) {\r\n            return this.renderer.scene;\r\n        }\r\n        throw new Error('Renderer not available');\r\n    }\r\n\r\n    /**\r\n     * 相机对象的便捷访问\r\n     */\r\n    protected get camera(): THREE.PerspectiveCamera {\r\n        if (this.renderer) {\r\n            return this.renderer.camera;\r\n        }\r\n        throw new Error('Renderer not available');\r\n    }\r\n\r\n    /**\r\n     * 渲染器对象的便捷访问\r\n     */\r\n    protected get webGLRenderer(): THREE.WebGLRenderer {\r\n        if (this.renderer) {\r\n            return this.renderer.renderer;\r\n        }\r\n        throw new Error('Renderer not available');\r\n    }\r\n\r\n    /**\r\n     * 后处理Composer的便捷访问\r\n     */\r\n    protected get postProcessingComposer(): PostProcessingEffectComposer | null {\r\n        if (this.renderer) {\r\n            return this.renderer.getPostProcessingComposer();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 检查对象是否可选择\r\n     * @param object 要检查的对象\r\n     * @returns 对象是否可选择\r\n     */\r\n    protected isObjectSelectable(object: THREE.Object3D): boolean {\r\n        // 默认情况下，所有对象都是可选择的\r\n        // 子类可以重写此方法以实现更复杂的选择逻辑\r\n        console.log(object.name)\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 设置渲染器引用\r\n     * @param renderer 渲染器实例\r\n     */\r\n    public setRenderer(renderer: Aether3d): void {\r\n        this.renderer = renderer;\r\n    }\r\n\r\n    /**\r\n     * 获取渲染器引用\r\n     * @returns 渲染器实例\r\n     */\r\n    public engine(): Aether3d | null {\r\n        return this.renderer;\r\n    }\r\n\r\n    /**\r\n     * 添加脚本\r\n     * @param script\r\n     */\r\n    public addScript(script: IScript): void{\r\n        if (this.renderer) {\r\n            this.renderer.addScript(script);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除脚本\r\n     * @param script\r\n     */\r\n    public removeScript(script: IScript): void {\r\n        if (this.renderer) {\r\n            this.renderer.removeScript(script);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当脚本实例被加载时调用\r\n     * 在 initialize 之前调用。用于初始化脚本自身，不依赖于其他对象\r\n     * 对应 Unity 的 Awake\r\n     */\r\n    public awake?(): void;\r\n\r\n    /**\r\n     * 当脚本变为启用和激活状态时调用\r\n     * 在 awake 之后，initialize 之前调用（如果脚本是启用的）\r\n     * 对应 Unity 的 OnEnable\r\n     */\r\n    public onEnable?(): void;\r\n\r\n    /**\r\n     * 脚本初始化时调用（在第一帧更新之前）\r\n     * 通常用于获取引用、设置初始状态等\r\n     * 对应 Unity 的 Start\r\n     */\r\n    public start?(): Promise<void> | void;\r\n\r\n    /**\r\n     * 每一帧更新时调用（在所有 start 调用之后）\r\n     * 用于实现脚本的主要逻辑，如动画、AI、输入响应等\r\n     * @param deltaTime 自上一帧以来经过的时间（秒）\r\n     */\r\n    public update?(deltaTime: number): void;\r\n\r\n    /**\r\n     * 每一帧在 update 调用之后调用\r\n     * 通常用于跟随逻辑（如相机跟随），确保在所有 update 逻辑执行完毕后进行\r\n     * @param deltaTime 自上一帧以来经过的时间（秒）\r\n     */\r\n    public lateUpdate?(deltaTime: number): void;\r\n\r\n    /**\r\n     * 固定时间步长更新\r\n     * 用于物理计算等需要固定时间步长的逻辑\r\n     * @param fixedTimeStep 固定时间步长\r\n     */\r\n    public fixedUpdate?(fixedTimeStep: number): void;\r\n\r\n    /**\r\n     * 在每一帧渲染前调用\r\n     */\r\n    public onPreRender?(): void;\r\n\r\n    /**\r\n     * 在每一帧渲染后调用\r\n     */\r\n    public onPostRender?(): void;\r\n\r\n    /**\r\n     * 重置窗口时调用\r\n     */\r\n    public onResize(): void {\r\n        // 默认实现为空\r\n    }\r\n\r\n    /**\r\n     * 当脚本变为禁用或非激活状态时调用\r\n     * 对应 Unity 的 OnDisable\r\n     */\r\n    public onDisable?(): void;\r\n\r\n    /**\r\n     * 脚本销毁时调用\r\n     * 用于清理资源、移除事件监听器等\r\n     * 对应 Unity 的 OnDestroy\r\n     */\r\n    public destroy?(): void;\r\n\r\n    /**\r\n     * 向场景中添加对象\r\n     * @param object 要添加的对象\r\n     */\r\n    protected addObject(object: THREE.Object3D): void {\r\n        this.scene.add(object);\r\n    }\r\n\r\n    /**\r\n     * 从场景中移除对象\r\n     * @param object 要移除的对象\r\n     */\r\n    protected removeObject(object: THREE.Object3D): void {\r\n        this.scene.remove(object);\r\n    }\r\n\r\n    /**\r\n     * 获取场景中的所有对象\r\n     * @returns 场景中的对象数组\r\n     */\r\n    protected getSceneObjects(): THREE.Object3D[] {\r\n        return this.scene.children;\r\n    }\r\n\r\n    /**\r\n     * 查找场景中的对象\r\n     * @param name 对象名称\r\n     * @returns 找到的对象或undefined\r\n     */\r\n    protected findObjectByName(name: string): THREE.Object3D | undefined {\r\n        return this.scene.getObjectByName(name);\r\n    }\r\n\r\n    /**\r\n     * 设置相机位置\r\n     * @param x X坐标\r\n     * @param y Y坐标\r\n     * @param z Z坐标\r\n     */\r\n    protected setCameraPosition(x: number, y: number, z: number): void {\r\n        this.camera.position.set(x, y, z);\r\n    }\r\n\r\n    /**\r\n     * 设置相机看向目标\r\n     * @param x X坐标\r\n     * @param y Y坐标\r\n     * @param z Z坐标\r\n     */\r\n    protected lookAt(x: number, y: number, z: number): void {\r\n        this.camera.lookAt(x, y, z);\r\n    }\r\n\r\n    /**\r\n     * 添加后处理通道\r\n     * @param pass 要添加的后处理通道\r\n     * @param beforeOutput 是否在输出通道之前插入\r\n     */\r\n    protected addPostProcessingPass(pass: any, beforeOutput: boolean = true): void {\r\n        if (this.renderer) {\r\n            this.renderer.addPostProcessingPass(pass, beforeOutput);\r\n        } else {\r\n            console.warn('[ScriptBase] Renderer not available for adding post-processing pass');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除后处理通道\r\n     * @param pass 要移除的后处理通道\r\n     */\r\n    protected removePostProcessingPass(pass: any): void {\r\n        if (this.renderer) {\r\n            this.renderer.removePostProcessingPass(pass);\r\n        } else {\r\n            console.warn('[ScriptBase] Renderer not available for removing post-processing pass');\r\n        }\r\n    }\r\n}\r\n","import { EffectComposer, RenderPass, OutputPass } from './global';\r\nimport type { Aether3d } from './Aether3d';\r\n\r\n/**\r\n * 统一的后处理渲染EffectComposer类\r\n * 提供了完整的后处理效果支持框架\r\n */\r\nexport class PostProcessingEffectComposer {\r\n    private composer: EffectComposer | null = null;\r\n    private renderPass: RenderPass | null = null;\r\n    private outputPass: OutputPass | null = null;\r\n\r\n    private renderer: Aether3d;\r\n    private isEnabled: boolean = false;\r\n\r\n    // 性能优化：添加设备性能检测缓存\r\n    private isHighPerformanceDeviceCached: boolean | null = null;\r\n\r\n    // 性能优化：缓存尺寸\r\n    private lastWidth: number = 0;\r\n    private lastHeight: number = 0;\r\n\r\n    constructor(renderer: Aether3d) {\r\n        this.renderer = renderer;\r\n        // 立即初始化Composer\r\n        this.init();\r\n    }\r\n\r\n    /**\r\n     * 检测是否为高性能设备\r\n     */\r\n    private isHighPerformanceDevice(): boolean {\r\n        if (this.isHighPerformanceDeviceCached !== null) {\r\n            return this.isHighPerformanceDeviceCached;\r\n        }\r\n        return false;\r\n        // // 检测设备性能\r\n        // const isHighPerformance = (\r\n        //     window.devicePixelRatio <= 2 &&\r\n        //     navigator.hardwareConcurrency >= 4 &&\r\n        //     !(navigator as any).connection?.saveData // 不在省电模式下\r\n        // );\r\n        //\r\n        // this.isHighPerformanceDeviceCached = isHighPerformance;\r\n        // return isHighPerformance;\r\n    }\r\n\r\n    /**\r\n     * 初始化EffectComposer\r\n     */\r\n    private init(): void {\r\n        try {\r\n            // 创建EffectComposer实例，根据设备性能调整采样率\r\n            this.composer = new EffectComposer(this.renderer.renderer);\r\n\r\n            // 根据设备性能调整采样率\r\n            const samples = this.isHighPerformanceDevice() ? 18 : 8;\r\n            this.composer.renderTarget1.samples = samples;\r\n            this.composer.renderTarget2.samples = samples;\r\n\r\n            // 创建基础渲染通道\r\n            this.renderPass = new RenderPass(this.renderer.scene, this.renderer.camera);\r\n            this.composer.addPass(this.renderPass);\r\n\r\n            // 创建输出通道\r\n            this.outputPass = new OutputPass();\r\n            this.composer.addPass(this.outputPass);\r\n\r\n            console.log('[PostProcessingEffectComposer] EffectComposer initialized successfully');\r\n        } catch (error) {\r\n            console.error('[PostProcessingEffectComposer] Failed to initialize EffectComposer:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启用后处理效果\r\n     */\r\n    public enable(): void {\r\n        this.isEnabled = true;\r\n        console.log('[PostProcessingEffectComposer] Post-processing enabled');\r\n    }\r\n\r\n    /**\r\n     * 禁用后处理效果\r\n     */\r\n    public disable(): void {\r\n        this.isEnabled = false;\r\n        console.log('[PostProcessingEffectComposer] Post-processing disabled');\r\n    }\r\n\r\n    /**\r\n     * 检查后处理是否启用\r\n     */\r\n    public isEnabledPostProcessing(): boolean {\r\n        return this.isEnabled && this.composer !== null;\r\n    }\r\n\r\n    /**\r\n     * 获取EffectComposer实例\r\n     */\r\n    public getComposer(): EffectComposer | null {\r\n        return this.composer;\r\n    }\r\n\r\n    public setPixelRatio(devicePixelRatio:number): void {\r\n        this.composer?.setPixelRatio(devicePixelRatio);\r\n    }\r\n\r\n    /**\r\n     * 添加通道到EffectComposer\r\n     * @param pass 要添加的通道\r\n     * @param beforeOutput 是否在输出通道之前插入（默认为true）\r\n     */\r\n    public addPass(pass: any, beforeOutput: boolean = true): void {\r\n        if (!this.composer) {\r\n            console.warn('[PostProcessingEffectComposer] Composer not initialized');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (beforeOutput && this.outputPass) {\r\n                // 在输出通道之前插入\r\n                const passes = this.composer.passes;\r\n                const outputPassIndex = passes.indexOf(this.outputPass);\r\n\r\n                if (outputPassIndex > 0) {\r\n                    passes.splice(outputPassIndex, 0, pass);\r\n                } else {\r\n                    this.composer.addPass(pass);\r\n                }\r\n            } else {\r\n                // 直接添加到末尾\r\n                this.composer.addPass(pass);\r\n            }\r\n\r\n            // 如果是后处理通道，设置抗锯齿\r\n            if (pass && typeof pass.setSize === 'function') {\r\n                pass.setSize(window.innerWidth, window.innerHeight);\r\n            }\r\n\r\n            console.log('[PostProcessingEffectComposer] Pass added successfully');\r\n        } catch (error) {\r\n            console.error('[PostProcessingEffectComposer] Failed to add pass:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除指定通道\r\n     * @param pass 要移除的通道\r\n     */\r\n    public removePass(pass: any): void {\r\n        if (!this.composer) return;\r\n\r\n        const index = this.composer.passes.indexOf(pass);\r\n        if (index !== -1) {\r\n            this.composer.passes.splice(index, 1);\r\n            console.log('[PostProcessingEffectComposer] Pass removed successfully');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取所有通道\r\n     */\r\n    public getPasses(): any[] {\r\n        if (!this.composer) return [];\r\n        return this.composer.passes;\r\n    }\r\n\r\n    /**\r\n     * 渲染场景（使用后处理效果）\r\n     */\r\n    public render(): void {\r\n        if (this.composer) {\r\n            this.composer.render();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新渲染器大小\r\n     */\r\n    public setSize(width: number, height: number): void {\r\n        // 添加尺寸变化检测，避免不必要的更新\r\n        if (this.lastWidth === width && this.lastHeight === height) {\r\n            return;\r\n        }\r\n\r\n        this.lastWidth = width;\r\n        this.lastHeight = height;\r\n\r\n        if (this.composer) {\r\n            this.composer.setSize(width, height);\r\n            // 更新所有通道的大小\r\n            for (const pass of this.composer.passes) {\r\n                if (pass && typeof pass.setSize === 'function') {\r\n                    pass.setSize(width, height);\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(`[PostProcessingEffectComposer] Size updated to ${width}x${height}`);\r\n    }\r\n\r\n    /**\r\n     * 销毁EffectComposer及相关资源\r\n     */\r\n    public dispose(): void {\r\n        if (this.composer) {\r\n            this.composer.passes.forEach(pass => {\r\n                if (pass && typeof pass.dispose === 'function') {\r\n                    pass.dispose();\r\n                }\r\n            });\r\n\r\n            this.composer = null;\r\n            this.renderPass = null;\r\n            this.outputPass = null;\r\n\r\n            this.isEnabled = false;\r\n\r\n            console.log('[PostProcessingEffectComposer] Disposed successfully');\r\n        }\r\n    }\r\n}\r\n","/**\r\n * 泛型事件发射器，支持类型安全的事件处理\r\n *\r\n * EventEmitter 是一个通用的事件系统实现，具有以下特点：\r\n * 1. 类型安全：通过泛型 EventMap 确保事件名称和数据类型的匹配\r\n * 2. 高性能：使用 Map 存储事件监听器，避免数组复制\r\n * 3. 灵活性：支持一次性监听器、移除监听器等常见功能\r\n * 4. 错误处理：事件处理函数中的异常不会影响其他监听器的执行\r\n *\r\n * 使用示例：\r\n * ```typescript\r\n * // 定义事件映射类型\r\n * interface MyEvents {\r\n *   'user-login': { userId: string; timestamp: number };\r\n *   'user-logout': { userId: string };\r\n * }\r\n *\r\n * // 创建事件发射器实例\r\n * const emitter = new EventEmitter<MyEvents>();\r\n *\r\n * // 注册事件监听器\r\n * emitter.on('user-login', (data) => {\r\n *   console.log(`User ${data.userId} logged in at ${data.timestamp}`);\r\n * });\r\n *\r\n * // 触发事件\r\n * emitter.emit('user-login', { userId: '123', timestamp: Date.now() });\r\n * ```\r\n */\r\nexport type EventCallback = (data?: unknown) => void;\r\n\r\nexport class EventEmitter<EventMap = Record<string, any>> {\r\n\r\n    /**\r\n     * 事件监听器列表\r\n     * @private\r\n     */\r\n    private events: Map<string, EventCallback[]> = new Map();\r\n\r\n    /**\r\n     * 注册事件监听器\r\n     *\r\n     * 添加一个回调函数到指定事件的监听器列表中，当事件被触发时会调用该回调函数\r\n     *\r\n     * @template K 事件名称类型，必须是字符串、数字或符号类型\r\n     * @param event 事件名称，用于标识要监听的事件类型\r\n     * @param callback 回调函数，当事件被触发时会被调用\r\n     *                 如果 EventMap 中定义了该事件，则回调函数参数类型会被自动推断\r\n     *                 否则使用通用的 EventCallback 类型\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * // 类型安全的事件监听\r\n     * emitter.on('user-login', (data) => {\r\n     *   // data 类型被自动推断为 { userId: string; timestamp: number }\r\n     *   console.log(`User ${data.userId} logged in`);\r\n     * });\r\n     *\r\n     * // 通用事件监听（未在 EventMap 中定义的事件）\r\n     * emitter.on('custom-event', (data) => {\r\n     *   // data 类型为 unknown，需要手动处理类型\r\n     *   console.log('Custom event triggered with data:', data);\r\n     * });\r\n     * ```\r\n     */\r\n    on<K extends string | number | symbol>(\r\n        event: K,\r\n        callback: K extends keyof EventMap ? (data: EventMap[K]) => void : EventCallback\r\n    ): void {\r\n        const eventKey = String(event);\r\n        if (!this.events.has(eventKey)) {\r\n            this.events.set(eventKey, []);\r\n        }\r\n        this.events.get(eventKey)!.push(callback as EventCallback);\r\n    }\r\n\r\n    /**\r\n     * 取消事件监听器\r\n     *\r\n     * 从指定事件的监听器列表中移除指定的回调函数\r\n     *\r\n     * @template K 事件名称类型，必须是字符串、数字或符号类型\r\n     * @param event 事件名称，用于标识要取消监听的事件类型\r\n     * @param callback 要移除的回调函数引用，必须与注册时的引用相同\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const handler = (data) => console.log(data);\r\n     * emitter.on('example-event', handler);\r\n     * // ... later\r\n     * emitter.off('example-event', handler);\r\n     * ```\r\n     */\r\n    off<K extends string | number | symbol>(\r\n        event: K,\r\n        callback: K extends keyof EventMap ? (data: EventMap[K]) => void : EventCallback\r\n    ): void {\r\n        const eventKey = String(event);\r\n        const callbacks = this.events.get(eventKey);\r\n        if (!callbacks) return;\r\n\r\n        const index = callbacks.indexOf(callback as EventCallback);\r\n        if (index !== -1) {\r\n            callbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 触发事件\r\n     *\r\n     * 调用指定事件的所有监听器回调函数，并传递数据参数\r\n     *\r\n     * @template K 事件名称类型，必须是字符串、数字或符号类型\r\n     * @param event 事件名称，用于标识要触发的事件类型\r\n     * @param data 可选的数据参数，会传递给所有监听器回调函数\r\n     *             如果 EventMap 中定义了该事件，则数据类型会被自动验证\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * // 触发带数据的事件\r\n     * emitter.emit('user-login', { userId: '123', timestamp: Date.now() });\r\n     *\r\n     * // 触发不带数据的事件\r\n     * emitter.emit('simple-event');\r\n     * ```\r\n     */\r\n    emit<K extends string | number | symbol>(\r\n        event: K,\r\n        data?: K extends keyof EventMap ? EventMap[K] : any\r\n    ): void {\r\n        const eventKey = String(event);\r\n        const callbacks = this.events.get(eventKey);\r\n        if (!callbacks) return;\r\n\r\n        // 使用迭代器避免数组复制，提升性能\r\n        // 逐个调用回调函数，避免因某个回调函数异常影响其他回调函数执行\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(data);\r\n            } catch (error) {\r\n                // 捕获并记录回调函数中的异常，防止影响其他监听器\r\n                console.error(`Error in event handler for ${eventKey}:`, error);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 一次性事件监听器\r\n     *\r\n     * 添加一个只会被调用一次的事件监听器，触发后会自动移除\r\n     *\r\n     * @template K 事件名称类型，必须是字符串、数字或符号类型\r\n     * @param event 事件名称，用于标识要监听的事件类型\r\n     * @param callback 回调函数，当事件被触发时会被调用一次，然后自动移除\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * emitter.once('app-started', () => {\r\n     *   console.log('Application started for the first time');\r\n     * });\r\n     * ```\r\n     */\r\n    once<K extends string | number | symbol>(\r\n        event: K,\r\n        callback: K extends keyof EventMap ? (data: EventMap[K]) => void : EventCallback\r\n    ): void {\r\n        // 创建一个包装函数，用于在调用后自动移除监听器\r\n        const onceCallback: EventCallback = (data) => {\r\n            // 移除监听器自身\r\n            this.off(event, onceCallback as any);\r\n            // 调用原始回调函数\r\n            callback(data as any);\r\n        };\r\n        // 注册包装后的监听器\r\n        this.on(event, onceCallback as any);\r\n    }\r\n\r\n    /**\r\n     * 清除所有事件监听器\r\n     *\r\n     * 移除所有事件的所有监听器，释放内存\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * emitter.clear(); // 移除所有事件监听器\r\n     * ```\r\n     */\r\n    clear(): void {\r\n        this.events.clear();\r\n    }\r\n}\r\n","import {THREE} from \"../core/global.ts\";\r\n\r\n/**\r\n * 对象池管理\r\n * 减少GC压力，提高性能\r\n */\r\nexport class ObjectPool<T> {\r\n    private pool: T[] = [];\r\n    private factory: () => T;\r\n    private reset: (obj: T) => void;\r\n    private maxSize: number;\r\n\r\n    constructor(factory: () => T, reset: (obj: T) => void, maxSize: number = 100) {\r\n        this.factory = factory;\r\n        this.reset = reset;\r\n        this.maxSize = maxSize;\r\n    }\r\n\r\n    /**\r\n     * 获取对象\r\n     */\r\n    acquire(): T {\r\n        return this.pool.pop() || this.factory();\r\n    }\r\n\r\n    /**\r\n     * 释放对象\r\n     */\r\n    release(obj: T): void {\r\n        if (this.pool.length < this.maxSize) {\r\n            this.reset(obj);\r\n            this.pool.push(obj);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清空对象池\r\n     */\r\n    clear(): void {\r\n        this.pool.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 获取池大小\r\n     */\r\n    get size(): number {\r\n        return this.pool.length;\r\n    }\r\n}\r\n\r\n/**\r\n * 节流函数\r\n * 限制函数执行频率\r\n */\r\nexport function throttle<T extends (...args: any[]) => any>(\r\n    func: T,\r\n    delay: number\r\n): (...args: any[]) => void {\r\n    let lastCall = 0;\r\n    return (...args: any[]) => {\r\n        const now = Date.now();\r\n        if (now - lastCall >= delay) {\r\n            lastCall = now;\r\n            func(...args);\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * 防抖函数\r\n * 延迟执行，避免频繁调用\r\n */\r\nexport function debounce<T extends (...args: any[]) => any>(\r\n    func: T,\r\n    delay: number\r\n): (...args: any[]) => void {\r\n    let timeoutId: number | null = null;\r\n    return (...args: any[]) => {\r\n        if (timeoutId) {\r\n            clearTimeout(timeoutId);\r\n        }\r\n        timeoutId = window.setTimeout(() => {\r\n            func(...args);\r\n        }, delay);\r\n    };\r\n}\r\n\r\n/**\r\n * 帧率限制器\r\n * 限制函数在指定帧率下执行\r\n */\r\nexport class FrameRateLimiter {\r\n    private lastCall = 0;\r\n    private frameInterval: number;\r\n\r\n    constructor(fps: number) {\r\n        this.frameInterval = 1000 / fps;\r\n    }\r\n\r\n    /**\r\n     * 检查是否可以执行\r\n     */\r\n    canExecute(): boolean {\r\n        const now = performance.now();\r\n        if (now - this.lastCall >= this.frameInterval) {\r\n            this.lastCall = now;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 执行函数（如果允许）\r\n     */\r\n    execute<T extends (...args: any[]) => any>(\r\n        func: T,\r\n        ...args: any[]\r\n    ): ReturnType<T> | null {\r\n        if (this.canExecute()) {\r\n            return func(...args);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * 内存使用监控\r\n */\r\nexport class MemoryMonitor {\r\n    private memoryHistory: number[] = [];\r\n    private maxHistoryLength = 100;\r\n\r\n    /**\r\n     * 获取当前内存使用情况\r\n     */\r\n    getMemoryUsage(): number {\r\n        if ('memory' in performance) {\r\n            return (performance as any).memory.usedJSHeapSize / 1024 / 1024; // MB\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 记录内存使用\r\n     */\r\n    recordMemoryUsage(): void {\r\n        const usage = this.getMemoryUsage();\r\n        this.memoryHistory.push(usage);\r\n\r\n        if (this.memoryHistory.length > this.maxHistoryLength) {\r\n            this.memoryHistory.shift();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取内存使用趋势\r\n     */\r\n    getMemoryTrend(): 'increasing' | 'decreasing' | 'stable' {\r\n        if (this.memoryHistory.length < 10) return 'stable';\r\n\r\n        const recent = this.memoryHistory.slice(-10);\r\n        const firstHalf = recent.slice(0, 5);\r\n        const secondHalf = recent.slice(5);\r\n\r\n        const firstAvg = firstHalf.reduce((a, b) => a + b, 0) / firstHalf.length;\r\n        const secondAvg = secondHalf.reduce((a, b) => a + b, 0) / secondHalf.length;\r\n\r\n        const diff = secondAvg - firstAvg;\r\n\r\n        if (diff > 1) return 'increasing';\r\n        if (diff < -1) return 'decreasing';\r\n        return 'stable';\r\n    }\r\n\r\n    /**\r\n     * 检测内存泄漏\r\n     */\r\n    detectMemoryLeak(): boolean {\r\n        const trend = this.getMemoryTrend();\r\n        const currentUsage = this.getMemoryUsage();\r\n\r\n        // 如果内存持续增长且超过100MB，可能存在泄漏\r\n        return trend === 'increasing' && currentUsage > 100;\r\n    }\r\n}\r\n\r\n/**\r\n * 性能分析器\r\n */\r\nexport class PerformanceProfiler {\r\n    private measurements: Map<string, number[]> = new Map();\r\n    private startTimes: Map<string, number> = new Map();\r\n\r\n    /**\r\n     * 开始测量\r\n     */\r\n    start(label: string): void {\r\n        this.startTimes.set(label, performance.now());\r\n    }\r\n\r\n    /**\r\n     * 结束测量\r\n     */\r\n    end(label: string): number {\r\n        const startTime = this.startTimes.get(label);\r\n        if (!startTime) {\r\n            console.warn(`[PerformanceProfiler] No start time found for label: ${label}`);\r\n            return 0;\r\n        }\r\n\r\n        const duration = performance.now() - startTime;\r\n        this.startTimes.delete(label);\r\n\r\n        if (!this.measurements.has(label)) {\r\n            this.measurements.set(label, []);\r\n        }\r\n        this.measurements.get(label)!.push(duration);\r\n\r\n        return duration;\r\n    }\r\n\r\n    /**\r\n     * 获取测量结果\r\n     */\r\n    getResults(label: string): {\r\n        count: number;\r\n        average: number;\r\n        min: number;\r\n        max: number;\r\n        total: number;\r\n    } | null {\r\n        const measurements = this.measurements.get(label);\r\n        if (!measurements || measurements.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        const count = measurements.length;\r\n        const total = measurements.reduce((a, b) => a + b, 0);\r\n        const average = total / count;\r\n        const min = Math.min(...measurements);\r\n        const max = Math.max(...measurements);\r\n\r\n        return { count, average, min, max, total };\r\n    }\r\n\r\n    /**\r\n     * 清除测量数据\r\n     */\r\n    clear(label?: string): void {\r\n        if (label) {\r\n            this.measurements.delete(label);\r\n            this.startTimes.delete(label);\r\n        } else {\r\n            this.measurements.clear();\r\n            this.startTimes.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取所有测量结果\r\n     */\r\n    getAllResults(): Record<string, {\r\n        count: number;\r\n        average: number;\r\n        min: number;\r\n        max: number;\r\n        total: number;\r\n    }> {\r\n        const results: Record<string, any> = {};\r\n\r\n        for (const [label] of this.measurements) {\r\n            const result = this.getResults(label);\r\n            if (result) {\r\n                results[label] = result;\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n}\r\n\r\n/**\r\n * 批量DOM更新器\r\n * 减少DOM操作次数\r\n */\r\nexport class BatchDOMUpdater {\r\n    private pendingUpdates = new Map<string, () => void>();\r\n    private updateScheduled = false;\r\n\r\n    /**\r\n     * 添加更新任务\r\n     */\r\n    scheduleUpdate(id: string, updateFn: () => void): void {\r\n        this.pendingUpdates.set(id, updateFn);\r\n\r\n        if (!this.updateScheduled) {\r\n            this.updateScheduled = true;\r\n            requestAnimationFrame(() => {\r\n                this.executeUpdates();\r\n                this.updateScheduled = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 执行所有待更新的任务\r\n     */\r\n    private executeUpdates(): void {\r\n        this.pendingUpdates.forEach(updateFn => {\r\n            try {\r\n                updateFn();\r\n            } catch (error) {\r\n                console.error('[BatchDOMUpdater] Update failed:', error);\r\n            }\r\n        });\r\n        this.pendingUpdates.clear();\r\n    }\r\n\r\n    /**\r\n     * 取消更新任务\r\n     */\r\n    cancelUpdate(id: string): void {\r\n        this.pendingUpdates.delete(id);\r\n    }\r\n\r\n    /**\r\n     * 清空所有更新任务\r\n     */\r\n    clear(): void {\r\n        this.pendingUpdates.clear();\r\n        this.updateScheduled = false;\r\n    }\r\n}\r\n\r\n/**\r\n * 缓存管理器\r\n * 提供简单的缓存功能\r\n */\r\nexport class CacheManager<K, V> {\r\n    private cache = new Map<K, { value: V; timestamp: number; ttl: number }>();\r\n    private maxSize: number;\r\n    private cleanupInterval: number | null = null;\r\n\r\n    constructor(maxSize: number = 100, cleanupIntervalMs: number = 60000) {\r\n        this.maxSize = maxSize;\r\n\r\n        // 定期清理过期缓存\r\n        this.cleanupInterval = window.setInterval(() => {\r\n            this.cleanup();\r\n        }, cleanupIntervalMs);\r\n    }\r\n\r\n    /**\r\n     * 设置缓存\r\n     */\r\n    set(key: K, value: V, ttl: number = 300000): void { // 默认5分钟\r\n        // 如果缓存已满，移除最旧的条目\r\n        if (this.cache.size >= this.maxSize) {\r\n            const oldestKey = this.cache.keys().next().value;\r\n            if (oldestKey !== undefined) {\r\n                this.cache.delete(oldestKey);\r\n            }\r\n        }\r\n\r\n        this.cache.set(key, {\r\n            value,\r\n            timestamp: Date.now(),\r\n            ttl\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获取缓存\r\n     */\r\n    get(key: K): V | undefined {\r\n        const item = this.cache.get(key);\r\n        if (!item) return undefined;\r\n\r\n        // 检查是否过期\r\n        if (Date.now() - item.timestamp > item.ttl) {\r\n            this.cache.delete(key);\r\n            return undefined;\r\n        }\r\n\r\n        return item.value;\r\n    }\r\n\r\n    /**\r\n     * 删除缓存\r\n     */\r\n    delete(key: K): boolean {\r\n        return this.cache.delete(key);\r\n    }\r\n\r\n    /**\r\n     * 清空缓存\r\n     */\r\n    clear(): void {\r\n        this.cache.clear();\r\n    }\r\n\r\n    /**\r\n     * 清理过期缓存\r\n     */\r\n    private cleanup(): void {\r\n        const now = Date.now();\r\n        for (const [key, item] of this.cache) {\r\n            if (now - item.timestamp > item.ttl) {\r\n                this.cache.delete(key);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁缓存管理器\r\n     */\r\n    destroy(): void {\r\n        if (this.cleanupInterval) {\r\n            clearInterval(this.cleanupInterval);\r\n            this.cleanupInterval = null;\r\n        }\r\n        this.clear();\r\n    }\r\n\r\n    /**\r\n     * 获取缓存统计\r\n     */\r\n    getStats(): {\r\n        size: number;\r\n        maxSize: number;\r\n        hitRate: number;\r\n    } {\r\n        return {\r\n            size: this.cache.size,\r\n            maxSize: this.maxSize,\r\n            hitRate: 0 // 可以扩展实现命中率统计\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * 设备性能检测器\r\n * 检测设备性能并提供优化建议\r\n */\r\nexport class DevicePerformanceDetector {\r\n    /**\r\n     * 检测是否为高性能设备\r\n     */\r\n    static isHighPerformanceDevice(): boolean {\r\n        // 检测设备性能\r\n        return (\r\n            window.devicePixelRatio <= 2 && \r\n            navigator.hardwareConcurrency >= 4 &&\r\n            !(navigator as any).connection?.saveData // 不在省电模式下\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * 获取设备性能等级\r\n     */\r\n    static getPerformanceLevel(): 'low' | 'medium' | 'high' {\r\n        if (this.isHighPerformanceDevice()) {\r\n            return 'high';\r\n        }\r\n        \r\n        if (window.devicePixelRatio <= 2 && navigator.hardwareConcurrency >= 2) {\r\n            return 'medium';\r\n        }\r\n        \r\n        return 'low';\r\n    }\r\n    \r\n    /**\r\n     * 根据设备性能获取优化建议\r\n     */\r\n    static getOptimizationRecommendations(): string[] {\r\n        const recommendations: string[] = [];\r\n        const level = this.getPerformanceLevel();\r\n        \r\n        switch (level) {\r\n            case 'low':\r\n                recommendations.push('降低纹理质量');\r\n                recommendations.push('减少后处理效果');\r\n                recommendations.push('降低渲染分辨率');\r\n                recommendations.push('禁用阴影');\r\n                break;\r\n            case 'medium':\r\n                recommendations.push('适度降低纹理质量');\r\n                recommendations.push('选择性启用后处理效果');\r\n                recommendations.push('适度降低渲染分辨率');\r\n                break;\r\n            case 'high':\r\n                recommendations.push('可启用高质量效果');\r\n                recommendations.push('可使用高分辨率纹理');\r\n                recommendations.push('可启用复杂后处理效果');\r\n                break;\r\n        }\r\n        \r\n        return recommendations;\r\n    }\r\n}\r\n\r\n/**\r\n * 渲染性能优化器\r\n * 提供渲染性能优化功能\r\n */\r\nexport class RenderPerformanceOptimizer {\r\n    private static instance: RenderPerformanceOptimizer | null = null;\r\n    private frameRateLimiter: FrameRateLimiter;\r\n    private isOptimizationEnabled: boolean = false;\r\n    \r\n    private constructor() {\r\n        this.frameRateLimiter = new FrameRateLimiter(60); // 限制为60FPS\r\n    }\r\n    \r\n    /**\r\n     * 获取单例实例\r\n     */\r\n    static getInstance(): RenderPerformanceOptimizer {\r\n        if (!this.instance) {\r\n            this.instance = new RenderPerformanceOptimizer();\r\n        }\r\n        return this.instance;\r\n    }\r\n    \r\n    /**\r\n     * 启用性能优化\r\n     */\r\n    enableOptimization(): void {\r\n        this.isOptimizationEnabled = true;\r\n    }\r\n    \r\n    /**\r\n     * 禁用性能优化\r\n     */\r\n    disableOptimization(): void {\r\n        this.isOptimizationEnabled = false;\r\n    }\r\n    \r\n    /**\r\n     * 优化渲染函数执行\r\n     */\r\n    optimizeRenderFunction<T extends (...args: any[]) => any>(\r\n        func: T,\r\n        ...args: any[]\r\n    ): ReturnType<T> | null {\r\n        if (!this.isOptimizationEnabled) {\r\n            return func(...args);\r\n        }\r\n        \r\n        return this.frameRateLimiter.execute(func, ...args);\r\n    }\r\n}\r\n\r\n/**\r\n * 帧率监控器\r\n * 实时监控和分析帧率性能\r\n */\r\nexport class FrameRateMonitor {\r\n    private frameCount: number = 0;\r\n    private lastTime: number = 0;\r\n    private currentFps: number = 0;\r\n    private fpsHistory: number[] = [];\r\n    private readonly historySize: number = 60;\r\n    private onFpsUpdate: ((fps: number) => void) | null = null;\r\n    private monitoring: boolean = false;\r\n    private frameId: number = 0;\r\n\r\n    constructor(onFpsUpdate?: (fps: number) => void) {\r\n        if (onFpsUpdate) {\r\n            this.onFpsUpdate = onFpsUpdate;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 开始监控\r\n     */\r\n    start(): void {\r\n        if (this.monitoring) return;\r\n        this.monitoring = true;\r\n        this.lastTime = performance.now();\r\n        this.frameId = requestAnimationFrame(this.update.bind(this));\r\n    }\r\n\r\n    /**\r\n     * 停止监控\r\n     */\r\n    stop(): void {\r\n        this.monitoring = false;\r\n        if (this.frameId) {\r\n            cancelAnimationFrame(this.frameId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新帧率\r\n     */\r\n    private update(timestamp: number): void {\r\n        if (!this.monitoring) return;\r\n\r\n        this.frameCount++;\r\n        const elapsed = timestamp - this.lastTime;\r\n\r\n        // 每秒更新一次FPS\r\n        if (elapsed >= 1000) {\r\n            this.currentFps = Math.round((this.frameCount * 1000) / elapsed);\r\n            \r\n            // 添加到历史记录\r\n            this.fpsHistory.push(this.currentFps);\r\n            if (this.fpsHistory.length > this.historySize) {\r\n                this.fpsHistory.shift();\r\n            }\r\n            \r\n            // 触发更新回调\r\n            if (this.onFpsUpdate) {\r\n                this.onFpsUpdate(this.currentFps);\r\n            }\r\n            \r\n            // 重置计数器\r\n            this.frameCount = 0;\r\n            this.lastTime = timestamp;\r\n        }\r\n\r\n        this.frameId = requestAnimationFrame(this.update.bind(this));\r\n    }\r\n\r\n    /**\r\n     * 获取当前FPS\r\n     */\r\n    getCurrentFps(): number {\r\n        return this.currentFps;\r\n    }\r\n\r\n    /**\r\n     * 获取平均FPS\r\n     */\r\n    getAverageFps(): number {\r\n        if (this.fpsHistory.length === 0) return 0;\r\n        const sum = this.fpsHistory.reduce((a, b) => a + b, 0);\r\n        return Math.round(sum / this.fpsHistory.length);\r\n    }\r\n\r\n    /**\r\n     * 获取FPS历史记录\r\n     */\r\n    getFpsHistory(): number[] {\r\n        return [...this.fpsHistory];\r\n    }\r\n\r\n    /**\r\n     * 获取FPS统计信息\r\n     */\r\n    getFpsStats(): { current: number; average: number; min: number; max: number } {\r\n        if (this.fpsHistory.length === 0) {\r\n            return { current: this.currentFps, average: 0, min: 0, max: 0 };\r\n        }\r\n        \r\n        const min = Math.min(...this.fpsHistory);\r\n        const max = Math.max(...this.fpsHistory);\r\n        const average = this.getAverageFps();\r\n        \r\n        return {\r\n            current: this.currentFps,\r\n            average,\r\n            min,\r\n            max\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * 性能分析器扩展\r\n * 添加更详细的性能分析功能\r\n */\r\nexport class DetailedPerformanceProfiler extends PerformanceProfiler {\r\n    private activeProfiles: Set<string> = new Set();\r\n    \r\n    /**\r\n     * 开始测量并标记为活跃\r\n     */\r\n    start(label: string): void {\r\n        super.start(label);\r\n        this.activeProfiles.add(label);\r\n    }\r\n    \r\n    /**\r\n     * 结束测量并移除活跃标记\r\n     */\r\n    end(label: string): number {\r\n        this.activeProfiles.delete(label);\r\n        return super.end(label);\r\n    }\r\n    \r\n    /**\r\n     * 获取活跃的性能分析标签\r\n     */\r\n    getActiveProfiles(): string[] {\r\n        return Array.from(this.activeProfiles);\r\n    }\r\n    \r\n    /**\r\n     * 重置所有测量数据\r\n     */\r\n    reset(): void {\r\n        this.activeProfiles.clear();\r\n        this.clear();\r\n    }\r\n}\r\n\r\n/**\r\n * 几何体优化器\r\n * 提供几何体优化功能\r\n */\r\nexport class GeometryOptimizer {\r\n    /**\r\n     * 合并几何体\r\n     */\r\n    static mergeGeometries(geometries: THREE.BufferGeometry[]): THREE.BufferGeometry | null {\r\n        if (!geometries || geometries.length === 0) {\r\n            console.warn('[GeometryOptimizer] 没有提供几何体进行合并');\r\n            return null;\r\n        }\r\n        \r\n        try {\r\n            // 这里需要导入BufferGeometryUtils，但在当前环境中可能不可用\r\n            // 暂时返回null，实际使用时需要正确导入\r\n            console.warn('[GeometryOptimizer] BufferGeometryUtils未导入，无法合并几何体');\r\n            return null;\r\n        } catch (error) {\r\n            console.error('[GeometryOptimizer] 合并几何体失败:', error);\r\n            return null;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 优化几何体属性\r\n     */\r\n    static optimizeGeometryAttributes(geometry: THREE.BufferGeometry): void {\r\n        // 确保几何体有必要的属性\r\n        if (!geometry.attributes.position) {\r\n            console.warn('[GeometryOptimizer] 几何体缺少位置属性');\r\n            return;\r\n        }\r\n        \r\n        // 计算边界框和包围球（如果不存在）\r\n        if (!geometry.boundingBox) {\r\n            geometry.computeBoundingBox();\r\n        }\r\n        if (!geometry.boundingSphere) {\r\n            geometry.computeBoundingSphere();\r\n        }\r\n        \r\n        // 优化索引\r\n        if (geometry.index && geometry.index.count > 0) {\r\n            // 可以在这里实现索引优化逻辑\r\n            console.log('[GeometryOptimizer] 几何体索引已存在，可考虑优化');\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 简化几何体\r\n     */\r\n    static simplifyGeometry(geometry: THREE.BufferGeometry, ratio: number = 0.5): THREE.BufferGeometry {\r\n        // 这是一个简化的实现，实际使用时可能需要更复杂的算法\r\n        console.log(`[GeometryOptimizer] 简化几何体，目标比率: ${ratio}`);\r\n        return geometry;\r\n    }\r\n}\r\n\r\n/**\r\n * 纹理优化器\r\n * 提供纹理优化功能\r\n */\r\nexport class TextureOptimizer {\r\n    private static textureCache: Map<string, THREE.Texture> = new Map();\r\n    \r\n    /**\r\n     * 压缩纹理\r\n     */\r\n    static compressTexture(texture: THREE.Texture, maxSize: number = 1024): THREE.Texture {\r\n        if (!texture.image) {\r\n            console.warn('[TextureOptimizer] 纹理没有图像数据');\r\n            return texture;\r\n        }\r\n        \r\n        // 检查纹理尺寸\r\n        const width = texture.image.width;\r\n        const height = texture.image.height;\r\n        \r\n        if (width <= maxSize && height <= maxSize) {\r\n            // 纹理尺寸已经在限制范围内\r\n            return texture;\r\n        }\r\n        \r\n        // 计算新的尺寸\r\n        const ratio = Math.min(maxSize / width, maxSize / height);\r\n        const newWidth = Math.floor(width * ratio);\r\n        const newHeight = Math.floor(height * ratio);\r\n        \r\n        console.log(`[TextureOptimizer] 压缩纹理从 ${width}x${height} 到 ${newWidth}x${newHeight}`);\r\n        \r\n        // 这里应该实现实际的纹理压缩逻辑\r\n        // 暂时只记录日志并返回原纹理\r\n        return texture;\r\n    }\r\n    \r\n    /**\r\n     * 缓存纹理\r\n     */\r\n    static cacheTexture(key: string, texture: THREE.Texture): void {\r\n        this.textureCache.set(key, texture);\r\n        console.log(`[TextureOptimizer] 纹理已缓存: ${key}`);\r\n    }\r\n    \r\n    /**\r\n     * 获取缓存的纹理\r\n     */\r\n    static getCachedTexture(key: string): THREE.Texture | undefined {\r\n        return this.textureCache.get(key);\r\n    }\r\n    \r\n    /**\r\n     * 清除纹理缓存\r\n     */\r\n    static clearCache(): void {\r\n        this.textureCache.clear();\r\n        console.log('[TextureOptimizer] 纹理缓存已清除');\r\n    }\r\n}\r\n\r\n/**\r\n * 渲染批处理器\r\n * 提供渲染批处理功能\r\n */\r\nexport class RenderBatcher {\r\n    private batches: Map<string, THREE.Object3D[]> = new Map();\r\n    private batchSize: number = 100;\r\n    \r\n    constructor(batchSize: number = 100) {\r\n        this.batchSize = batchSize;\r\n    }\r\n    \r\n    /**\r\n     * 添加对象到批处理\r\n     */\r\n    addObject(key: string, object: THREE.Object3D): void {\r\n        if (!this.batches.has(key)) {\r\n            this.batches.set(key, []);\r\n        }\r\n        \r\n        const batch = this.batches.get(key)!;\r\n        batch.push(object);\r\n        \r\n        // 如果批次已满，处理批次\r\n        if (batch.length >= this.batchSize) {\r\n            this.processBatch(key, batch);\r\n            batch.length = 0; // 清空批次\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * 处理批次\r\n     */\r\n    private processBatch(key: string, objects: THREE.Object3D[]): void {\r\n        console.log(`[RenderBatcher] 处理批次 ${key}，包含 ${objects.length} 个对象`);\r\n        // 这里可以实现实际的批处理逻辑\r\n    }\r\n    \r\n    /**\r\n     * 刷新所有批次\r\n     */\r\n    flush(): void {\r\n        for (const [key, batch] of this.batches) {\r\n            if (batch.length > 0) {\r\n                this.processBatch(key, batch);\r\n                batch.length = 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { ScriptBase } from \"../core/ScriptBase\";\r\nimport { THREE } from \"../core/global.ts\";\r\n\r\n/**\r\n * 性能分析脚本\r\n * 用于详细分析和诊断渲染性能问题\r\n */\r\nexport class PerformanceAnalyzerScript extends ScriptBase {\r\n    name = 'PerformanceAnalyzerScript';\r\n\r\n    // 性能数据收集\r\n    private frameCount: number = 0;\r\n    private lastAnalysisTime: number = 0;\r\n    private analysisInterval: number = 1000; // 每秒分析一次\r\n\r\n    // 对象统计\r\n    private objectCounts: Map<string, number> = new Map();\r\n\r\n    // 内存监控\r\n    private memoryUsage: number = 0;\r\n    private lastMemoryCheck: number = 0;\r\n    private memoryCheckInterval: number = 5000; // 每5秒检查一次内存\r\n\r\n    // 渲染统计\r\n    private drawCalls: number = 0;\r\n    private triangles: number = 0;\r\n    private points: number = 0;\r\n    private lines: number = 0;\r\n\r\n    // 脚本执行时间统计\r\n    private scriptExecutionTimes: Map<string, { total: number; count: number; }> = new Map();\r\n\r\n    // 是否启用详细分析\r\n    private detailedAnalysis: boolean = false;\r\n\r\n    constructor(options?: { detailedAnalysis?: boolean; analysisInterval?: number }) {\r\n        super();\r\n\r\n        if (options) {\r\n            this.detailedAnalysis = options.detailedAnalysis ?? false;\r\n            this.analysisInterval = options.analysisInterval ?? 1000;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当脚本被添加到渲染器时调用\r\n     */\r\n    public override awake(): void {\r\n        super.awake?.();\r\n    }\r\n\r\n    /**\r\n     * 当脚本变为启用和激活状态时调用\r\n     */\r\n    public override onEnable(): void {\r\n        super.onEnable?.();\r\n    }\r\n\r\n    /**\r\n     * 脚本初始化\r\n     */\r\n    public override async start(): Promise<void> {\r\n        super.start?.();\r\n        this.lastAnalysisTime = performance.now();\r\n    }\r\n\r\n    /**\r\n     * 每帧更新时调用\r\n     */\r\n    public override update(deltaTime: number): void {\r\n        super.update?.(deltaTime);\r\n\r\n        this.frameCount++;\r\n        const currentTime = performance.now();\r\n\r\n        // 定期分析性能\r\n        if (currentTime - this.lastAnalysisTime >= this.analysisInterval) {\r\n            this.lastAnalysisTime = currentTime;\r\n        }\r\n\r\n        // 定期内存检查\r\n        if (currentTime - this.lastMemoryCheck >= this.memoryCheckInterval) {\r\n            this.checkMemoryUsage();\r\n            this.lastMemoryCheck = currentTime;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 统计场景中的对象\r\n     */\r\n    private countObjects(): void {\r\n        this.objectCounts.clear();\r\n\r\n        if (!this.scene) return;\r\n\r\n        const countObject = (object: THREE.Object3D) => {\r\n            const type = object.type;\r\n            this.objectCounts.set(type, (this.objectCounts.get(type) || 0) + 1);\r\n\r\n            // 递归统计子对象\r\n            object.children.forEach(child => countObject(child));\r\n        };\r\n\r\n        this.scene.children.forEach(child => countObject(child));\r\n    }\r\n\r\n    /**\r\n     * 检查内存使用\r\n     */\r\n    private checkMemoryUsage(): void {\r\n        if ('memory' in performance) {\r\n            this.memoryUsage = (performance as any).memory.usedJSHeapSize / 1024 / 1024;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 记录脚本执行时间\r\n     */\r\n    public recordScriptExecution(scriptName: string, executionTime: number): void {\r\n        if (!this.scriptExecutionTimes.has(scriptName)) {\r\n            this.scriptExecutionTimes.set(scriptName, { total: 0, count: 0 });\r\n        }\r\n\r\n        const stats = this.scriptExecutionTimes.get(scriptName)!;\r\n        stats.total += executionTime;\r\n        stats.count++;\r\n    }\r\n\r\n    /**\r\n     * 重置统计数据\r\n     */\r\n    public resetStats(): void {\r\n        this.frameCount = 0;\r\n        this.objectCounts.clear();\r\n        this.scriptExecutionTimes.clear();\r\n    }\r\n\r\n    /**\r\n     * 获取详细的性能报告\r\n     */\r\n    public getDetailedReport(): any {\r\n        const report: any = {\r\n            timestamp: new Date().toISOString(),\r\n            objectCounts: Object.fromEntries(this.objectCounts),\r\n            memoryUsage: this.memoryUsage,\r\n            scriptExecutionTimes: {}\r\n        };\r\n\r\n        for (const [scriptName, stats] of this.scriptExecutionTimes) {\r\n            report.scriptExecutionTimes[scriptName] = {\r\n                averageTime: stats.total / stats.count,\r\n                totalTime: stats.total,\r\n                callCount: stats.count\r\n            };\r\n        }\r\n\r\n        if (this.renderer) {\r\n            const info = this.webGLRenderer.info;\r\n            report.renderStats = {\r\n                drawCalls: info.render.calls,\r\n                triangles: info.render.triangles,\r\n                points: info.render.points,\r\n                lines: info.render.lines,\r\n                programs: info.programs ? info.programs.length : 0\r\n            };\r\n        }\r\n\r\n        return report;\r\n    }\r\n\r\n    /**\r\n     * 脚本销毁时调用\r\n     */\r\n    public override destroy(): void {\r\n        super.destroy?.();\r\n    }\r\n}\r\n","/**\r\n * FPS诊断工具\r\n * 用于详细分析和诊断FPS低的问题\r\n */\r\nexport class FPSDiagnosticTool {\r\n    private renderer: any;\r\n    private diagnostics: Map<string, any> = new Map();\r\n    private isRunning: boolean = false;\r\n    private diagnosticInterval: number = 1000; // 每秒诊断一次\r\n    private intervalId: number | null = null;\r\n\r\n    constructor(renderer: any) {\r\n        this.renderer = renderer;\r\n    }\r\n\r\n    /**\r\n     * 开始诊断\r\n     */\r\n    public start(): void {\r\n        if (this.isRunning) return;\r\n\r\n        this.isRunning = true;\r\n        this.intervalId = window.setInterval(() => {\r\n        }, this.diagnosticInterval);\r\n    }\r\n\r\n    /**\r\n     * 停止诊断\r\n     */\r\n    public stop(): void {\r\n        if (!this.isRunning) return;\r\n\r\n        this.isRunning = false;\r\n        if (this.intervalId) {\r\n            clearInterval(this.intervalId);\r\n            this.intervalId = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取诊断报告\r\n     */\r\n    public getReport(): any {\r\n        const report: any = {\r\n            timestamp: new Date().toISOString(),\r\n            basicPerformance: {},\r\n            renderer: {},\r\n            scene: {},\r\n            scripts: {},\r\n            memory: {},\r\n            postProcessing: {}\r\n        };\r\n\r\n        // 收集基本性能数据\r\n        if (this.renderer && this.renderer.getPerformanceData) {\r\n            const perfData = this.renderer.getPerformanceData();\r\n            if (perfData) {\r\n                report.basicPerformance = perfData.fpsStats;\r\n            }\r\n        }\r\n\r\n        // 收集渲染器信息\r\n        if (this.renderer && this.renderer.renderer) {\r\n            const glInfo = this.renderer.renderer.info;\r\n            report.renderer = {\r\n                drawCalls: glInfo.render.calls,\r\n                triangles: glInfo.render.triangles,\r\n                points: glInfo.render.points,\r\n                lines: glInfo.render.lines,\r\n                textures: glInfo.textures,\r\n                geometries: glInfo.geometries,\r\n                programs: glInfo.programs?.length || 0\r\n            };\r\n        }\r\n\r\n        // 收集场景信息\r\n        if (this.renderer && this.renderer.scene) {\r\n            const scene = this.renderer.scene;\r\n            let totalObjects = 0;\r\n            let meshCount = 0;\r\n            let lightCount = 0;\r\n            let cameraCount = 0;\r\n\r\n            const countObjects = (object: any) => {\r\n                totalObjects++;\r\n                if (object.isMesh) meshCount++;\r\n                if (object.isLight) lightCount++;\r\n                if (object.isCamera) cameraCount++;\r\n                object.children.forEach((child: any) => countObjects(child));\r\n            };\r\n\r\n            scene.children.forEach((child: any) => countObjects(child));\r\n\r\n            report.scene = {\r\n                totalObjects,\r\n                meshes: meshCount,\r\n                lights: lightCount,\r\n                cameras: cameraCount\r\n            };\r\n        }\r\n\r\n        // 收集脚本信息\r\n        if (this.renderer && this.renderer.scripts) {\r\n            report.scripts = {\r\n                count: this.renderer.scripts.length,\r\n                types: this.renderer.scripts.map((s: any) => s.constructor.name)\r\n            };\r\n        }\r\n\r\n        // 收集内存信息\r\n        if ('memory' in performance) {\r\n            const memory = (performance as any).memory;\r\n            report.memory = {\r\n                used: memory.usedJSHeapSize,\r\n                total: memory.totalJSHeapSize,\r\n                limit: memory.jsHeapSizeLimit\r\n            };\r\n        }\r\n\r\n        return report;\r\n    }\r\n\r\n    /**\r\n     * 生成优化建议\r\n     */\r\n    public generateOptimizationSuggestions(): string[] {\r\n        const suggestions: string[] = [];\r\n\r\n        if (this.renderer) {\r\n            const perfData = this.renderer.getPerformanceData();\r\n            if (perfData && perfData.fpsStats.current < 30) {\r\n                suggestions.push('⚠️ FPS过低，建议进行性能优化');\r\n            }\r\n\r\n            // 检查绘制调用\r\n            if (this.renderer.renderer) {\r\n                const calls = this.renderer.renderer.info.render.calls;\r\n                if (calls > 1000) {\r\n                    suggestions.push('⚠️ 绘制调用过多，建议合并几何体或使用实例化渲染');\r\n                }\r\n            }\r\n\r\n            // 检查对象数量\r\n            if (this.renderer.scene) {\r\n                let totalObjects = 0;\r\n                const countObjects = (object: any) => {\r\n                    totalObjects++;\r\n                    object.children.forEach((child: any) => countObjects(child));\r\n                };\r\n                this.renderer.scene.children.forEach((child: any) => countObjects(child));\r\n\r\n                if (totalObjects > 1000) {\r\n                    suggestions.push('⚠️ 场景对象过多，建议使用对象池或按需加载');\r\n                }\r\n            }\r\n        }\r\n\r\n        if (suggestions.length === 0) {\r\n            suggestions.push('✅ 当前性能状况良好');\r\n        }\r\n\r\n        return suggestions;\r\n    }\r\n}\r\n","/**\r\n * 操作系统和浏览器检测工具\r\n * 提供各种平台和浏览器的检测功能\r\n */\r\n\r\nconst os = {\r\n    /**\r\n     * 检测是否为iPhone上的Safari浏览器\r\n     * @returns {boolean} 如果是iPhone上的Safari浏览器则返回true，否则返回false\r\n     */\r\n    isIphoneSafari(): boolean {\r\n        // 检查是否在浏览器环境中运行\r\n        if (typeof window === 'undefined' || !window.navigator) {\r\n            return false;\r\n        }\r\n\r\n        const userAgent = window.navigator.userAgent;\r\n        const isIphone = /iPhone/i.test(userAgent);\r\n        const isSafari = /Safari/i.test(userAgent) && !/Chrome/i.test(userAgent);\r\n\r\n        return isIphone && isSafari;\r\n    },\r\n\r\n    /**\r\n     * 检测是否为Android设备\r\n     * @returns {boolean} 如果是Android设备则返回true，否则返回false\r\n     */\r\n    isAndroid(): boolean {\r\n        if (typeof window === 'undefined' || !window.navigator) {\r\n            return false;\r\n        }\r\n\r\n        return /Android/i.test(window.navigator.userAgent);\r\n    },\r\n\r\n    /**\r\n     * 检测是否为iOS设备\r\n     * @returns {boolean} 如果是iOS设备则返回true，否则返回false\r\n     */\r\n    isIOS(): boolean {\r\n        if (typeof window === 'undefined' || !window.navigator) {\r\n            return false;\r\n        }\r\n\r\n        return /iPad|iPhone|iPod/.test(window.navigator.userAgent);\r\n    },\r\n\r\n    /**\r\n     * 检测是否为移动设备\r\n     * @returns {boolean} 如果是移动设备则返回true，否则返回false\r\n     */\r\n    isMobile(): boolean {\r\n        if (typeof window === 'undefined' || !window.navigator) {\r\n            return false;\r\n        }\r\n\r\n        return this.isIOS() || this.isAndroid();\r\n    },\r\n\r\n    /**\r\n     * 检测是否为桌面设备\r\n     * @returns {boolean} 如果是桌面设备则返回true，否则返回false\r\n     */\r\n    isDesktop(): boolean {\r\n        return !this.isMobile();\r\n    },\r\n\r\n    /**\r\n     * 获取操作系统名称\r\n     * @returns {string} 操作系统名称\r\n     */\r\n    getOSName(): string {\r\n        if (typeof window === 'undefined' || !window.navigator) {\r\n            return 'unknown';\r\n        }\r\n\r\n        const userAgent = window.navigator.userAgent;\r\n\r\n        if (this.isIOS()) {\r\n            return 'iOS';\r\n        } else if (this.isAndroid()) {\r\n            return 'Android';\r\n        } else if (/Windows/i.test(userAgent)) {\r\n            return 'Windows';\r\n        } else if (/Mac/i.test(userAgent)) {\r\n            return 'MacOS';\r\n        } else if (/Linux/i.test(userAgent)) {\r\n            return 'Linux';\r\n        }\r\n\r\n        return 'unknown';\r\n    },\r\n\r\n    /**\r\n     * 检测是否为Safari浏览器\r\n     * @returns {boolean} 如果是Safari浏览器则返回true，否则返回false\r\n     */\r\n    isSafari(): boolean {\r\n        if (typeof window === 'undefined' || !window.navigator) {\r\n            return false;\r\n        }\r\n\r\n        const userAgent = window.navigator.userAgent;\r\n        return /Safari/i.test(userAgent) && !/Chrome/i.test(userAgent);\r\n    },\r\n\r\n    /**\r\n     * 检测是否为Chrome浏览器\r\n     * @returns {boolean} 如果是Chrome浏览器则返回true，否则返回false\r\n     */\r\n    isChrome(): boolean {\r\n        if (typeof window === 'undefined' || !window.navigator) {\r\n            return false;\r\n        }\r\n\r\n        return /Chrome/i.test(window.navigator.userAgent);\r\n    },\r\n\r\n    /**\r\n     * 检测是否为Firefox浏览器\r\n     * @returns {boolean} 如果是Firefox浏览器则返回true，否则返回false\r\n     */\r\n    isFirefox(): boolean {\r\n        if (typeof window === 'undefined' || !window.navigator) {\r\n            return false;\r\n        }\r\n\r\n        return /Firefox/i.test(window.navigator.userAgent);\r\n    }\r\n};\r\n\r\nexport { os };\r\n","import { THREE } from \"../core/global.ts\";\r\nimport { ScriptBase } from \"../core/ScriptBase\";\r\nimport { ObjectPool } from \"../core\";\r\n\r\n/**\r\n * 鼠标交互配置接口\r\n * 定义鼠标交互的所有可配置参数，支持多种交互模式\r\n */\r\nexport interface MouseInteractionConfig {\r\n    /** 交互模式：'hover'(悬停) | 'click'(点击) | 'both'(两者皆支持) */\r\n    interactionMode?: 'hover' | 'click' | 'both';\r\n    /** 是否启用鼠标交互功能 */\r\n    enabled?: boolean;\r\n    /** 鼠标悬停延迟（毫秒），用于避免频繁触发悬停事件 */\r\n    hoverDelay?: number;\r\n    /** 是否显示鼠标悬停提示（预留功能） */\r\n    showTooltip?: boolean;\r\n    /** 可交互的对象层级掩码 */\r\n    layerMask?: number;\r\n    /** 要排除的对象名称数组 */\r\n    excludeObjects?: string[];\r\n    /** 要排除的对象类型数组 */\r\n    excludeTypes?: string[];\r\n    /** 性能优化：射线检测频率（毫秒），默认为16ms（约60FPS） */\r\n    raycastInterval?: number;\r\n}\r\n\r\nexport class MouseInteractionScript extends ScriptBase {\r\n    name = 'MouseInteractionScript';\r\n\r\n    /** 鼠标交互的配置参数 */\r\n    private config: Required<MouseInteractionConfig>;\r\n\r\n    /** 射线投射器，用于检测鼠标与3D对象的交叉 */\r\n    private raycaster: THREE.Raycaster;\r\n\r\n    /** 鼠标在屏幕上的标准化坐标（-1到1范围） */\r\n    private mouse: THREE.Vector2;\r\n\r\n    /** 当前鼠标悬停的对象，只能有一个 */\r\n    private hoveredObject: THREE.Object3D | null = null;\r\n\r\n    /** 当前被选中的对象数组，支持多选 */\r\n    private selectedObjects: THREE.Object3D[] = [];\r\n\r\n    /** 悬停延迟的定时器ID，用于实现悬停延迟 */\r\n    private hoverTimeout: number = 0;\r\n\r\n    // 事件回调函数数组，支持多个回调\r\n    private onObjectSelectedCallbacks: Array<(object: THREE.Object3D | null) => void> = [];\r\n    private onObjectHoveredCallbacks: Array<(object: THREE.Object3D | null) => void> = [];\r\n    private onObjectDeselectedCallbacks: Array<(object: THREE.Object3D | null) => void> = [];\r\n\r\n    // 性能优化：添加时间戳用于节流\r\n    private lastHoverCheck: number = 0;\r\n    private lastClickCheck: number = 0;\r\n\r\n    // 性能优化：添加对象池\r\n    private vector2Pool: ObjectPool<THREE.Vector2>;\r\n    private intersectionPool: ObjectPool<THREE.Intersection[]>;\r\n\r\n    // 性能优化：射线检测控制\r\n    private raycastTimer: number = 0;\r\n\r\n    constructor(options?: MouseInteractionConfig) {\r\n        super();\r\n\r\n        // 合并默认配置和用户配置\r\n        this.config = {\r\n            interactionMode: 'hover',     // 默认使用悬停模式，提供最直观的交互体验\r\n            enabled: true,                // 默认启用交互功能\r\n            hoverDelay: 0,                // 默认无延迟，立即响应\r\n            showTooltip: false,           // 默认不显示提示（预留功能）\r\n            layerMask: 0xFFFFFFFF,        // 默认所有层级都可以交互\r\n            excludeObjects: [],           // 默认不排除任何对象\r\n            excludeTypes: [],             // 默认不排除任何对象类型\r\n            raycastInterval: 16,          // 默认射线检测间隔16ms（约60FPS）\r\n            ...options                    // 覆盖用户指定的配置\r\n        };\r\n\r\n        // 初始化射线投射器和鼠标坐标\r\n        this.raycaster = new THREE.Raycaster();\r\n        this.mouse = new THREE.Vector2();\r\n\r\n        // 设置射线投射器的精度参数，提高检测准确性\r\n        this.raycaster.params.Line = { threshold: 0.01 };      // 线条检测阈值\r\n        this.raycaster.params.Points = { threshold: 0.01 };    // 点检测阈值\r\n\r\n        // 初始化对象池\r\n        this.vector2Pool = new ObjectPool<THREE.Vector2>(\r\n            () => new THREE.Vector2(),\r\n            (vec) => vec.set(0, 0)\r\n        );\r\n\r\n        this.intersectionPool = new ObjectPool<THREE.Intersection[]>(\r\n            () => [],\r\n            (arr) => arr.length = 0\r\n        );\r\n\r\n        // 初始化节流的鼠标移动处理函数\r\n        this.throttledOnMouseMove = this.throttle(this.onMouseMove.bind(this), this.config.raycastInterval);\r\n    }\r\n\r\n    /**\r\n     * 节流函数\r\n     */\r\n    private throttle<T extends (...args: any[]) => any>(\r\n        func: T,\r\n        delay: number\r\n    ): (...args: any[]) => void {\r\n        let lastCall = 0;\r\n        return (...args: any[]) => {\r\n            const now = Date.now();\r\n            if (now - lastCall >= delay) {\r\n                lastCall = now;\r\n                func(...args);\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 节流的鼠标移动处理函数\r\n     */\r\n    private throttledOnMouseMove: ((event: MouseEvent) => void) | null = null;\r\n\r\n    public override async start(): Promise<void> {\r\n        super.start?.();\r\n        this.setupEventListeners();\r\n    }\r\n\r\n    /**\r\n     * 每帧更新 - 处理持续性的交互检测\r\n     *\r\n     * 主要负责在悬停模式下处理鼠标悬停检测，\r\n     * 点击模式下由事件监听器直接处理\r\n     *\r\n     * @param deltaTime - 上一帧到当前帧的时间间隔（秒）\r\n     */\r\n    public override update(deltaTime: number): void {\r\n        const startTime = performance.now();\r\n        super.update?.(deltaTime);\r\n\r\n        if (!this.config.enabled) return;\r\n\r\n        // 在悬停模式下处理鼠标悬停逻辑\r\n        if (this.config.interactionMode === 'hover' || this.config.interactionMode === 'both') {\r\n            this.handleMouseHover();\r\n        }\r\n\r\n        // 性能分析：记录脚本执行时间\r\n        const executionTime = performance.now() - startTime;\r\n        if (this.renderer && (this.renderer as any).performanceAnalyzer) {\r\n            (this.renderer as any).performanceAnalyzer.recordScriptExecution('MouseInteractionScript', executionTime);\r\n        }\r\n    }\r\n\r\n    public override onResize(): void {\r\n        super.onResize();\r\n    }\r\n\r\n    /**\r\n     * 脚本禁用\r\n     */\r\n    public override onDisable(): void {\r\n        super.onDisable?.();\r\n        this.clearAllInteractions();\r\n        this.removeEventListeners();\r\n    }\r\n\r\n    /**\r\n     * 脚本销毁\r\n     */\r\n    public override destroy(): void {\r\n        super.destroy?.();\r\n        this.removeEventListeners();\r\n        this.clearAllInteractions();\r\n        // 清理悬停延迟定时器\r\n        if (this.hoverTimeout) {\r\n            clearTimeout(this.hoverTimeout);\r\n            this.hoverTimeout = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置对象选择事件回调\r\n     * @param callback 回调函数\r\n     */\r\n    public setOnObjectSelectedCallback(callback: (object: THREE.Object3D | null) => void): void {\r\n        this.onObjectSelectedCallbacks = [callback];\r\n    }\r\n\r\n    /**\r\n     * 添加对象选择事件回调\r\n     * @param callback 回调函数\r\n     */\r\n    public addOnObjectSelectedCallback(callback: (object: THREE.Object3D | null) => void): void {\r\n        this.onObjectSelectedCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * 移除对象选择事件回调\r\n     * @param callback 回调函数\r\n     */\r\n    public removeOnObjectSelectedCallback(callback: (object: THREE.Object3D | null) => void): void {\r\n        const index = this.onObjectSelectedCallbacks.indexOf(callback);\r\n        if (index > -1) {\r\n            this.onObjectSelectedCallbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置对象取消选择事件回调\r\n     * @param callback 回调函数\r\n     */\r\n    public setOnObjectDeselectedCallback(callback: (object: THREE.Object3D | null) => void): void {\r\n        this.onObjectDeselectedCallbacks = [callback];\r\n    }\r\n\r\n    /**\r\n     * 添加对象取消选择事件回调\r\n     * @param callback 回调函数\r\n     */\r\n    public addOnObjectDeselectedCallback(callback: (object: THREE.Object3D | null) => void): void {\r\n        this.onObjectDeselectedCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * 移除对象取消选择事件回调\r\n     * @param callback 回调函数\r\n     */\r\n    public removeOnObjectDeselectedCallback(callback: (object: THREE.Object3D | null) => void): void {\r\n        const index = this.onObjectDeselectedCallbacks.indexOf(callback);\r\n        if (index > -1) {\r\n            this.onObjectDeselectedCallbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置对象悬停事件回调\r\n     * @param callback 回调函数\r\n     */\r\n    public setOnObjectHoveredCallback(callback: (object: THREE.Object3D | null) => void): void {\r\n        this.onObjectHoveredCallbacks = [callback];\r\n    }\r\n\r\n    /**\r\n     * 添加对象悬停事件回调\r\n     * @param callback 回调函数\r\n     */\r\n    public addOnObjectHoveredCallback(callback: (object: THREE.Object3D | null) => void): void {\r\n        this.onObjectHoveredCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * 移除对象悬停事件回调\r\n     * @param callback 回调函数\r\n     */\r\n    public removeOnObjectHoveredCallback(callback: (object: THREE.Object3D | null) => void): void {\r\n        const index = this.onObjectHoveredCallbacks.indexOf(callback);\r\n        if (index > -1) {\r\n            this.onObjectHoveredCallbacks.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置可交互的层级掩码\r\n     * @param mask 层级掩码\r\n     */\r\n    public setLayerMask(mask: number): void {\r\n        this.config.layerMask = mask;\r\n    }\r\n\r\n    /**\r\n     * 添加要排除的对象名称\r\n     * @param objectName 对象名称\r\n     */\r\n    public addExcludedObject(objectName: string): void {\r\n        if (!this.config.excludeObjects.includes(objectName)) {\r\n            this.config.excludeObjects.push(objectName);\r\n        }\r\n    }\r\n\r\n    public addExcludedObjects(objectName: string[]): void {\r\n        for (const name of objectName) {\r\n            this.addExcludedObject(name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除排除的对象名称\r\n     * @param objectName 对象名称\r\n     */\r\n    public removeExcludedObject(objectName: string): void {\r\n        const index = this.config.excludeObjects.indexOf(objectName);\r\n        if (index > -1) {\r\n            this.config.excludeObjects.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置要排除的对象类型\r\n     * @param types 对象类型数组\r\n     */\r\n    public setExcludedTypes(types: string[]): void {\r\n        this.config.excludeTypes = [...types];\r\n    }\r\n\r\n    /**\r\n     * 检查对象是否可以交互\r\n     * @param object 要检查的对象\r\n     * @returns 是否可以交互\r\n     */\r\n    private isObjectInteractable(object: THREE.Object3D): boolean {\r\n        // 检查对象是否存在\r\n        if (!object) {\r\n            return false;\r\n        }\r\n\r\n        // 检查对象是否可见\r\n        if (!object.visible) {\r\n            return false;\r\n        }\r\n\r\n        // 检查层级掩码\r\n        if (object.layers && (object.layers.mask & this.config.layerMask) === 0) {\r\n            return false;\r\n        }\r\n\r\n        // 检查对象名称排除列表\r\n        if (this.config.excludeObjects.includes(object.name)) {\r\n            return false;\r\n        }\r\n\r\n        // 检查对象类型排除列表\r\n        const objectType = object.type;\r\n        if (this.config.excludeTypes.includes(objectType)) {\r\n            return false;\r\n        }\r\n\r\n        // 检查对象是否为Mesh且具有材质\r\n        if (object instanceof THREE.Mesh) {\r\n            // 检查材质是否存在\r\n            if (!object.material) {\r\n                return false;\r\n            }\r\n\r\n            // 如果材质是数组，检查每个材质\r\n            if (Array.isArray(object.material)) {\r\n                for (const mat of object.material) {\r\n                    if (!mat) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 过滤可交互的对象\r\n     * @param intersects 射线检测结果\r\n     * @returns 过滤后的对象数组\r\n     */\r\n    private filterInteractableObjects(intersects: THREE.Intersection[]): THREE.Intersection[] {\r\n        return intersects.filter(intersect => {\r\n            // 检查交集对象是否存在\r\n            if (!intersect.object) {\r\n                return false;\r\n            }\r\n\r\n            // 检查对象是否可以交互\r\n            return this.isObjectInteractable(intersect.object);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置事件监听器\r\n     */\r\n    private setupEventListeners(): void {\r\n        try {\r\n            const canvas = this.webGLRenderer.domElement;\r\n\r\n            if (this.config.interactionMode === 'hover' || this.config.interactionMode === 'both') {\r\n                if (this.throttledOnMouseMove) {\r\n                    canvas.addEventListener('mousemove', this.throttledOnMouseMove);\r\n                }\r\n            }\r\n\r\n            if (this.config.interactionMode === 'click' || this.config.interactionMode === 'both') {\r\n                canvas.addEventListener('click', this.onClickHandler);\r\n                // 添加触摸事件支持\r\n                canvas.addEventListener('touchstart', this.onTouchStartHandler);\r\n            }\r\n\r\n            // 添加触摸移动和结束事件监听器，用于更好的触摸体验\r\n            canvas.addEventListener('touchmove', this.onTouchMoveHandler);\r\n            canvas.addEventListener('touchend', this.onTouchEndHandler);\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 设置事件监听器时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除事件监听器\r\n     */\r\n    private removeEventListeners(): void {\r\n        try {\r\n            const canvas = this.webGLRenderer.domElement;\r\n\r\n            if (this.throttledOnMouseMove) {\r\n                canvas.removeEventListener('mousemove', this.throttledOnMouseMove);\r\n            }\r\n            canvas.removeEventListener('click', this.onClickHandler);\r\n            // 移除触摸事件监听器\r\n            canvas.removeEventListener('touchstart', this.onTouchStartHandler);\r\n            canvas.removeEventListener('touchmove', this.onTouchMoveHandler);\r\n            canvas.removeEventListener('touchend', this.onTouchEndHandler);\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 移除事件监听器时出错:', error);\r\n        }\r\n    }\r\n\r\n    // 事件处理函数的包装器，用于确保正确的this绑定\r\n    private onMouseMoveHandler = (event: MouseEvent) => {\r\n        this.onMouseMove(event);\r\n    };\r\n\r\n    private onClickHandler = (event: MouseEvent) => {\r\n        this.onClick(event);\r\n    };\r\n\r\n    private onTouchStartHandler = (event: TouchEvent) => {\r\n        this.onTouchStart(event);\r\n    };\r\n\r\n    private onTouchMoveHandler = (event: TouchEvent) => {\r\n        // 触摸移动事件处理，可以用于拖拽等操作\r\n        event.preventDefault(); // 阻止默认行为\r\n    };\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    private onTouchEndHandler = (event: TouchEvent) => {\r\n        // 触摸结束事件处理\r\n    };\r\n\r\n    // ===========================================\r\n    // 鼠标事件处理方法\r\n    // ===========================================\r\n    private onMouseMove(event: MouseEvent): void {\r\n        try {\r\n            const rect = this.webGLRenderer.domElement.getBoundingClientRect();\r\n\r\n            // 从对象池获取Vector2对象\r\n            const mouse = this.vector2Pool.acquire();\r\n            mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\r\n            mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n\r\n            this.mouse.copy(mouse);\r\n\r\n            // 释放对象回对象池\r\n            this.vector2Pool.release(mouse);\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 处理鼠标移动事件时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 触摸开始事件处理器\r\n     *\r\n     * 处理触摸事件，实现与鼠标点击相同的功能\r\n     *\r\n     * @param event - 触摸事件对象\r\n     */\r\n    private onTouchStart(event: TouchEvent): void {\r\n        try {\r\n            // 只有当event具有preventDefault方法时才调用\r\n            if (event && typeof event.preventDefault === 'function') {\r\n                event.preventDefault();\r\n            }\r\n\r\n            // 使用第一个触摸点\r\n            if (event.touches.length > 0) {\r\n                const touch = event.touches[0];\r\n                const mouseEvent = {\r\n                    clientX: touch.clientX,\r\n                    clientY: touch.clientY\r\n                } as MouseEvent;\r\n\r\n                // 复用点击处理逻辑\r\n                this.onClick(mouseEvent);\r\n            }\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 处理触摸事件时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 点击事件处理器\r\n     *\r\n     * 处理鼠标点击事件，实现对象的选择和取消选择。\r\n     * 支持多选模式：再次点击已选中的对象可以取消选择。\r\n     * 点击空白区域将清除所有选择。\r\n     *\r\n     * @param event - 鼠标点击事件对象\r\n     */\r\n    private onClick(event: MouseEvent): void {\r\n        try {\r\n            // 性能优化：节流点击事件\r\n            const now = performance.now();\r\n            if (now - this.lastClickCheck < this.config.raycastInterval) {\r\n                return;\r\n            }\r\n            this.lastClickCheck = now;\r\n\r\n            // 只有当event具有preventDefault方法时才调用\r\n            if (event && typeof event.preventDefault === 'function') {\r\n                event.preventDefault();\r\n            }\r\n\r\n            // 计算鼠标位置\r\n            const canvas = this.webGLRenderer.domElement;\r\n            const rect = canvas.getBoundingClientRect();\r\n\r\n            // 从对象池获取Vector2对象\r\n            const mouse = this.vector2Pool.acquire();\r\n            mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\r\n            mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\r\n\r\n            this.raycaster.setFromCamera(mouse, this.camera);\r\n\r\n            // 从对象池获取交集数组\r\n            const intersects = this.intersectionPool.acquire();\r\n            this.raycaster.intersectObjects(this.scene.children, true, intersects);\r\n\r\n            // 过滤可交互的对象\r\n            const interactableIntersects = this.filterInteractableObjects(intersects);\r\n\r\n            if (interactableIntersects.length > 0) {\r\n                const selectedObject = interactableIntersects[0].object;\r\n\r\n                // 检查是否是Mesh对象\r\n                if (selectedObject && (selectedObject as any).isMesh) {\r\n                    this.selectObject(selectedObject);\r\n                }\r\n            } else {\r\n                // 点击空白处，清除选择\r\n                this.clearSelection();\r\n            }\r\n\r\n            // 释放对象回对象池\r\n            this.vector2Pool.release(mouse);\r\n            this.intersectionPool.release(intersects);\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 处理点击事件时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 处理鼠标悬停检测\r\n     *\r\n     * 在每帧更新中调用，使用射线投射检测鼠标下方的对象。\r\n     * 如果检测到新对象，将触发悬停效果；\r\n     * 如果鼠标移出所有对象，将清除悬停效果。\r\n     *\r\n     * 注意：该方法仅在 hover 或 both 模式下在 update() 中被调用\r\n     */\r\n    private handleMouseHover(): void {\r\n        try {\r\n            // 性能优化：添加节流机制\r\n            const now = performance.now();\r\n            if (now - this.lastHoverCheck < this.config.raycastInterval) {\r\n                return;\r\n            }\r\n            this.lastHoverCheck = now;\r\n\r\n            // 从对象池获取交集数组\r\n            const intersects = this.intersectionPool.acquire();\r\n            this.raycaster.setFromCamera(this.mouse, this.camera);\r\n            this.raycaster.intersectObjects(this.scene.children, true, intersects);\r\n\r\n            // 过滤可交互的对象\r\n            const interactableIntersects = this.filterInteractableObjects(intersects);\r\n\r\n            if (interactableIntersects.length > 0 && (interactableIntersects[0].object as any).isMesh) {\r\n                const hoveredObject = interactableIntersects[0].object;\r\n\r\n                // 如果悬停到新对象\r\n                if (this.hoveredObject !== hoveredObject) {\r\n                    this.hoverObject(hoveredObject);\r\n                }\r\n            } else {\r\n                // 鼠标移出所有对象\r\n                if (this.hoveredObject) {\r\n                    this.clearHover();\r\n                }\r\n            }\r\n\r\n            // 释放对象回对象池\r\n            this.intersectionPool.release(intersects);\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 处理鼠标悬停检测时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 悬停对象\r\n     */\r\n    private hoverObject(object: THREE.Object3D): void {\r\n        try {\r\n            // 清除之前的悬停\r\n            this.clearHover();\r\n\r\n            this.hoveredObject = object;\r\n\r\n            // 触发所有对象悬停事件\r\n            for (const callback of this.onObjectHoveredCallbacks) {\r\n                callback(object);\r\n            }\r\n\r\n            // 应用悬停延迟\r\n            if (this.config.hoverDelay > 0) {\r\n                this.hoverTimeout = window.setTimeout(() => {\r\n                }, this.config.hoverDelay);\r\n            }\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 处理对象悬停时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清除悬停\r\n     */\r\n    private clearHover(): void {\r\n        try {\r\n            if (this.hoverTimeout) {\r\n                clearTimeout(this.hoverTimeout);\r\n                this.hoverTimeout = 0;\r\n            }\r\n\r\n            this.hoveredObject = null;\r\n\r\n            // 触发所有对象悬停清除事件\r\n            for (const callback of this.onObjectHoveredCallbacks) {\r\n                callback(null);\r\n            }\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 清除悬停效果时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 选择对象\r\n     */\r\n    protected selectObject(object: THREE.Object3D | null): void {\r\n        try {\r\n            // 检查对象是否可以交互\r\n            if (!object || !this.isObjectInteractable(object)) {\r\n                return;\r\n            }\r\n\r\n            let deselectedObject: THREE.Object3D | null = null;\r\n\r\n            // 如果对象已被选中，则取消选择\r\n            const index = this.selectedObjects.indexOf(object);\r\n            if (index > -1) {\r\n                this.selectedObjects.splice(index, 1);\r\n                deselectedObject = object;\r\n            } else {\r\n                // 添加到选中列表\r\n                this.selectedObjects.push(object);\r\n            }\r\n\r\n            // 触发对象选择事件（选择或取消选择）\r\n            for (const callback of this.onObjectSelectedCallbacks) {\r\n                callback(deselectedObject ? null : object);\r\n            }\r\n\r\n            // 如果是取消选择，触发取消选择事件\r\n            if (deselectedObject) {\r\n                for (const callback of this.onObjectDeselectedCallbacks) {\r\n                    callback(deselectedObject);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 处理对象选择时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清除选择\r\n     */\r\n    private clearSelection(): void {\r\n        try {\r\n            const deselectedObjects = [...this.selectedObjects];\r\n            this.selectedObjects = [];\r\n            \r\n            // 触发所有对象的取消选择事件\r\n            for (const deselectedObject of deselectedObjects) {\r\n                for (const callback of this.onObjectDeselectedCallbacks) {\r\n                    callback(deselectedObject);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 清除选择时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清除所有交互\r\n     */\r\n    private clearAllInteractions(): void {\r\n        try {\r\n            this.clearHover();\r\n            this.clearSelection();\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 清除所有交互时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取当前悬停的对象\r\n     */\r\n    public getHoveredObject(): THREE.Object3D | null {\r\n        return this.hoveredObject;\r\n    }\r\n\r\n    /**\r\n     * 获取当前选中的对象列表\r\n     */\r\n    public getSelectedObjects(): THREE.Object3D[] {\r\n        return [...this.selectedObjects];\r\n    }\r\n\r\n    /**\r\n     * 设置交互模式\r\n     */\r\n    public setInteractionMode(mode: 'hover' | 'click' | 'both'): void {\r\n        try {\r\n            this.config.interactionMode = mode;\r\n\r\n            // 重新初始化节流函数\r\n            this.throttledOnMouseMove = this.throttle(this.onMouseMove.bind(this), this.config.raycastInterval);\r\n\r\n            // 重新设置事件监听器\r\n            this.removeEventListeners();\r\n            this.setupEventListeners();\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 设置交互模式时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启用/禁用交互\r\n     */\r\n    public setEnabled(enabled: boolean): void {\r\n        try {\r\n            this.config.enabled = enabled;\r\n\r\n            if (!enabled) {\r\n                this.clearAllInteractions();\r\n            }\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 启用/禁用交互时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取当前配置\r\n     */\r\n    public getConfig(): MouseInteractionConfig {\r\n        return { ...this.config };\r\n    }\r\n\r\n    /**\r\n     * 更新配置\r\n     */\r\n    public updateConfig(newConfig: Partial<MouseInteractionConfig>): void {\r\n        try {\r\n            const oldRaycastInterval = this.config.raycastInterval;\r\n            this.config = { ...this.config, ...newConfig };\r\n\r\n            // 如果射线检测间隔改变，更新节流函数\r\n            if (newConfig.raycastInterval !== undefined && newConfig.raycastInterval !== oldRaycastInterval) {\r\n                this.throttledOnMouseMove = this.throttle(this.onMouseMove.bind(this), this.config.raycastInterval);\r\n            }\r\n        } catch (error) {\r\n            console.error('[MouseInteractionScript] 更新配置时出错:', error);\r\n        }\r\n    }\r\n}","import type { IScript } from \"../interface\";\r\nimport type { Viewport } from \"../interface/Viewport\";\r\nimport { ScriptBase } from \"./ScriptBase\";\r\nimport { PostProcessingEffectComposer } from \"./PostProcessingEffectComposer\";\r\nimport { EventEmitter } from \"../events\";\r\nimport {THREE} from \"../core/global.ts\";\r\nimport { FrameRateMonitor, DetailedPerformanceProfiler, ObjectPool, BatchDOMUpdater } from \"./PerformanceUtils\";\r\nimport { PerformanceAnalyzerScript } from \"../controllers/PerformanceAnalyzerScript\";\r\nimport { FPSDiagnosticTool } from \"../controllers/FPSDiagnosticTool\";\r\nimport { MouseInteractionScript } from \"../controllers/MouseInteractionScript\";\r\n\r\n// 定义 Aether3D 引擎事件映射\r\nexport interface Aether3dEvents {\r\n    // 渲染事件\r\n    'render:start': { timestamp: number };\r\n    'render:stop': { timestamp: number };\r\n    'render:frame': { deltaTime: number; timestamp: number };\r\n\r\n    // 脚本事件\r\n    'script:added': { script: IScript };\r\n    'script:removed': { script: IScript };\r\n\r\n    // 场景事件\r\n    'scene:resize': { width: number; height: number };\r\n\r\n    // 后处理事件\r\n    'postprocessing:enabled': Record<string, never>; // 空对象的正确类型\r\n    'postprocessing:disabled': Record<string, never>; // 空对象的正确类型\r\n\r\n    // 性能事件\r\n    'performance:fps': { fps: number };\r\n    'performance:drop': { currentFps: number; previousFps: number };\r\n\r\n    // 鼠标交互事件\r\n    'mouse:objectSelected': { object: THREE.Object3D | null };\r\n    'mouse:objectHovered': { object: THREE.Object3D | null };\r\n    'mouse:objectDeselected': { object: THREE.Object3D | null };\r\n}\r\n\r\nexport class Aether3d extends EventEmitter<Aether3dEvents> {\r\n    private canvas: HTMLCanvasElement;\r\n    private config: Viewport;\r\n\r\n    public renderer: THREE.WebGLRenderer;\r\n    public scene: THREE.Scene;\r\n    public camera: THREE.PerspectiveCamera;\r\n\r\n    /**\r\n     * 鼠标交互脚本实例\r\n     */\r\n    private mouseInteractionScript: MouseInteractionScript | null = null;\r\n\r\n    /**\r\n     * 鼠标交互回调函数\r\n     */\r\n    private onObjectSelectedCallback: ((object: THREE.Object3D | null) => void) | null = null;\r\n    private onObjectHoveredCallback: ((object: THREE.Object3D | null) => void) | null = null;\r\n    private onObjectDeselectedCallback: ((object: THREE.Object3D | null) => void) | null = null;\r\n\r\n    /**\r\n     * 后处理效果Composer\r\n     * @private\r\n     */\r\n    private postProcessingComposer: PostProcessingEffectComposer | null = null;\r\n    private usePostProcessing: boolean = false;\r\n\r\n    /**\r\n     * 脚本管理\r\n     * @private\r\n     */\r\n    private scripts: IScript[] = [];\r\n    private startedScripts: Set<IScript> = new Set();\r\n\r\n    /**\r\n     * 渲染循环\r\n     * @private\r\n     */\r\n    private isRendering: boolean = false;\r\n    private lastTime: number = 0;\r\n    private frameId: number = 0;\r\n\r\n    /**\r\n     * 性能监控\r\n     * @private\r\n     */\r\n    private frameCount: number = 0;\r\n    private lastFpsUpdate: number = 0;\r\n\r\n    // 性能优化：添加设备性能检测缓存\r\n    private isHighPerformanceDeviceCached: boolean | null = null;\r\n\r\n    // 性能优化：缓存上次尺寸\r\n    private lastWidth: number = 0;\r\n    private lastHeight: number = 0;\r\n\r\n    // 帧率监控和性能分析\r\n    private frameRateMonitor: FrameRateMonitor;\r\n    private performanceProfiler: DetailedPerformanceProfiler;\r\n    private lastFps: number = 60;\r\n\r\n    // 性能优化：帧率限制\r\n    private targetFps: number = 60;\r\n    private frameInterval: number = 1000 / 60;\r\n    private lastFrameTime: number = 0;\r\n\r\n    // 性能优化：渲染跳过机制\r\n    private skipRenderCount: number = 0;\r\n    private maxSkipFrames: number = 2; // 最多跳过2帧\r\n\r\n    // 性能分析器\r\n    public performanceAnalyzer: PerformanceAnalyzerScript | null = null;\r\n\r\n    // FPS诊断工具\r\n    private fpsDiagnosticTool: FPSDiagnosticTool | null = null;\r\n\r\n    // 对象池优化：用于事件对象复用\r\n    private eventObjectPool: ObjectPool<{ deltaTime: number; timestamp: number }>;\r\n    private fpsEventObjectPool: ObjectPool<{ fps: number }>;\r\n    private performanceDropObjectPool: ObjectPool<{ currentFps: number; previousFps: number }>;\r\n\r\n    // 批量DOM更新器\r\n    private batchDOMUpdater: BatchDOMUpdater;\r\n\r\n    // 批处理优化：脚本方法调用批处理\r\n    private scriptMethodBatch: Array<{ script: IScript; method: keyof IScript; arg?: any }> = [];\r\n\r\n    // 渲染批处理优化\r\n    private renderBatchSize: number = 100;\r\n    private objectUpdateQueue: THREE.Object3D[] = [];\r\n\r\n    /**\r\n     * 事件处理\r\n     * @private\r\n     */\r\n    private onWindowResize: () => void;\r\n\r\n    constructor(config: Viewport) {\r\n        // 必须首先调用 super()\r\n        super();\r\n\r\n        this.config = config;\r\n        this.canvas = config.element;\r\n        this.usePostProcessing = config.enablePostProcessing;\r\n        this.renderer = new THREE.WebGLRenderer({\r\n            canvas: this.canvas,\r\n            antialias: this.config.antialias,       //抗锯齿\r\n            alpha: this.config.alpha,               //透明通道\r\n            powerPreference:\"low-power\",\r\n            stencil: true,                          //模板缓冲区\r\n            depth: true,\r\n            logarithmicDepthBuffer: this.config.enableLogarithmicDepthBuffer ?? true\r\n        });\r\n        this.renderer.shadowMap.enabled = true;\r\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n        this.renderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n        this.renderer.toneMappingExposure = 1.0;\r\n        this.scene = new THREE.Scene();\r\n        this.scene.background = config.backgroundColor ? new THREE.Color(config.backgroundColor) : null;\r\n        this.camera = new THREE.PerspectiveCamera(\r\n            75,\r\n            this.config.aspect,\r\n            0.1,\r\n            1000\r\n        );\r\n\r\n        // 初始化鼠标交互脚本（如果配置了）\r\n        if (config.mouseInteraction) {\r\n            this.mouseInteractionScript = new MouseInteractionScript(config.mouseInteraction);\r\n            // 设置鼠标交互回调函数\r\n            this.setupMouseInteractionCallbacks();\r\n            this.addScript(this.mouseInteractionScript);\r\n        }\r\n\r\n        //初始化后处理效果Composer（如果启用）\r\n        if (this.usePostProcessing) {\r\n            this.postProcessingComposer = new PostProcessingEffectComposer(this);\r\n        }\r\n\r\n        // 设置初始大小\r\n        this.updateRendererSize();\r\n\r\n        // 设置事件处理\r\n        this.onWindowResize = this.handleWindowResize.bind(this);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n\r\n        // 初始化性能监控\r\n        this.frameRateMonitor = new FrameRateMonitor((fps) => {\r\n            // 使用对象池获取事件对象\r\n            const fpsEvent = this.fpsEventObjectPool.acquire();\r\n            fpsEvent.fps = fps;\r\n            this.emit('performance:fps', fpsEvent);\r\n            // 释放事件对象回对象池\r\n            this.fpsEventObjectPool.release(fpsEvent);\r\n\r\n            // 检测性能下降\r\n            if (this.lastFps > 30 && fps < 20) {\r\n                // 使用对象池获取性能下降事件对象\r\n                const dropEvent = this.performanceDropObjectPool.acquire();\r\n                dropEvent.currentFps = fps;\r\n                dropEvent.previousFps = this.lastFps;\r\n                this.emit('performance:drop', dropEvent);\r\n                // 释放事件对象回对象池\r\n                this.performanceDropObjectPool.release(dropEvent);\r\n            }\r\n            this.lastFps = fps;\r\n        });\r\n\r\n        this.performanceProfiler = new DetailedPerformanceProfiler();\r\n\r\n        // 创建性能分析器（如果启用性能监控）\r\n        if (config.enablePerformanceMonitoring) {\r\n            this.performanceAnalyzer = new PerformanceAnalyzerScript({\r\n                detailedAnalysis: true,\r\n                analysisInterval: 1000\r\n            });\r\n            this.addScript(this.performanceAnalyzer);\r\n        }\r\n\r\n        // 创建FPS诊断工具（如果启用性能监控）\r\n        if (config.enablePerformanceMonitoring) {\r\n            this.fpsDiagnosticTool = new FPSDiagnosticTool(this);\r\n            this.fpsDiagnosticTool.start();\r\n        }\r\n\r\n        // 初始化对象池\r\n        this.eventObjectPool = new ObjectPool(\r\n            () => ({ deltaTime: 0, timestamp: 0 }),\r\n            (obj) => { obj.deltaTime = 0; obj.timestamp = 0; },\r\n            50\r\n        );\r\n\r\n        this.fpsEventObjectPool = new ObjectPool(\r\n            () => ({ fps: 0 }),\r\n            (obj) => { obj.fps = 0; },\r\n            50\r\n        );\r\n\r\n        this.performanceDropObjectPool = new ObjectPool(\r\n            () => ({ currentFps: 0, previousFps: 0 }),\r\n            (obj) => { obj.currentFps = 0; obj.previousFps = 0; },\r\n            20\r\n        );\r\n\r\n        // 初始化批量DOM更新器\r\n        this.batchDOMUpdater = new BatchDOMUpdater();\r\n    }\r\n\r\n    /**\r\n     * 检测是否为高性能设备\r\n     */\r\n    private isHighPerformanceDevice(): boolean {\r\n        if (this.isHighPerformanceDeviceCached !== null) {\r\n            return this.isHighPerformanceDeviceCached;\r\n        }\r\n\r\n        // 检测设备性能\r\n        // const isHighPerformance = (\r\n        //     window.devicePixelRatio <= 2 &&\r\n        //     navigator.hardwareConcurrency >= 4 &&\r\n        //     !(navigator as any).connection?.saveData // 不在省电模式下\r\n        // );\r\n        //\r\n        // this.isHighPerformanceDeviceCached = isHighPerformance;\r\n        // return isHighPerformance;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 更新渲染器大小\r\n     */\r\n    private updateRendererSize(): void {\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n\r\n        // 性能优化：只有在尺寸真正改变时才更新\r\n        if (this.lastWidth === width && this.lastHeight === height) {\r\n            return;\r\n        }\r\n\r\n        this.lastWidth = width;\r\n        this.lastHeight = height;\r\n\r\n        // 更新配置中的大小值\r\n        this.config.dpr.set(width, height);\r\n        this.config.aspect = width / height;\r\n\r\n        this.renderer.setSize(width, height);\r\n\r\n        // 根据设备性能设置像素比率\r\n        let dpr: number;\r\n        if (this.isHighPerformanceDevice()) {\r\n            dpr = Math.min(2, window.devicePixelRatio);\r\n        } else {\r\n            dpr = Math.min(1.5, window.devicePixelRatio);\r\n        }\r\n\r\n        // 只在像素比率真正改变时才更新\r\n        if (this.renderer.getPixelRatio() !== dpr) {\r\n            this.renderer.setPixelRatio(dpr);\r\n        }\r\n\r\n        // 启用各种 WebGL 扩展以提高渲染质量\r\n        this.renderer.shadowMap.enabled = true;\r\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n        this.renderer.toneMapping = THREE.ACESFilmicToneMapping;\r\n        this.renderer.toneMappingExposure = 0.85;\r\n\r\n        // 更新相机宽高比\r\n        this.camera.aspect = this.config.aspect;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    /**\r\n     * 处理窗口大小调整\r\n     * @private\r\n     */\r\n    private handleWindowResize(): void {\r\n        this.updateRendererSize();\r\n        this.emit('scene:resize', {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 启动渲染循环\r\n     */\r\n    public start(): void {\r\n        if (this.isRendering) return;\r\n\r\n        this.isRendering = true;\r\n        this.lastTime = performance.now();\r\n        this.lastFrameTime = this.lastTime;\r\n        this.frameId = requestAnimationFrame(this.renderLoop.bind(this));\r\n\r\n        // 启动帧率监控\r\n        this.frameRateMonitor.start();\r\n\r\n        // 触发渲染开始事件\r\n        this.emit('render:start', { timestamp: this.lastTime });\r\n    }\r\n\r\n    /**\r\n     * 停止渲染循环\r\n     */\r\n    public stop(): void {\r\n        if (!this.isRendering) return;\r\n\r\n        this.isRendering = false;\r\n        if (this.frameId) {\r\n            cancelAnimationFrame(this.frameId);\r\n            this.frameId = 0;\r\n        }\r\n\r\n        // 停止帧率监控\r\n        this.frameRateMonitor.stop();\r\n\r\n        // 触发渲染停止事件\r\n        this.emit('render:stop', { timestamp: performance.now() });\r\n    }\r\n\r\n    /**\r\n     * 渲染循环\r\n     */\r\n    private renderLoop(time: number): void {\r\n        if (!this.isRendering) return;\r\n\r\n        // 性能优化：帧率限制\r\n        const elapsed = time - this.lastFrameTime;\r\n        if (elapsed < this.frameInterval) {\r\n            // 如果时间不够，跳过这一帧\r\n            this.skipRenderCount++;\r\n            if (this.skipRenderCount <= this.maxSkipFrames) {\r\n                this.frameId = requestAnimationFrame(this.renderLoop.bind(this));\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.skipRenderCount = 0;\r\n        this.lastFrameTime = time;\r\n\r\n        const deltaTime = Math.min((time - this.lastTime) / 1000, 0.016);\r\n        this.lastTime = time;\r\n        this.updateFpsCounter(time);\r\n\r\n        // 使用对象池获取事件对象\r\n        const frameEvent = this.eventObjectPool.acquire();\r\n        frameEvent.deltaTime = deltaTime;\r\n        frameEvent.timestamp = time;\r\n        this.emit('render:frame', frameEvent);\r\n        // 释放事件对象回对象池\r\n        this.eventObjectPool.release(frameEvent);\r\n\r\n        // 性能分析：开始帧渲染分析\r\n        this.performanceProfiler.start('frameRender');\r\n\r\n        this.fixedUpdate(1/60);\r\n\r\n        // 批处理脚本方法调用\r\n        this.callScriptMethodBatched('onPreRender');\r\n        this.updateScripts(deltaTime);\r\n        this.callScriptMethodBatched('lateUpdate', deltaTime);\r\n\r\n        // 批处理渲染调用\r\n        this.batchRender();\r\n\r\n        this.callScriptMethodBatched('onPostRender');\r\n\r\n        // 性能分析：结束帧渲染分析\r\n        this.performanceProfiler.end('frameRender');\r\n\r\n        // 性能优化：使用批量DOM更新器更新Stats\r\n        this.batchDOMUpdater.scheduleUpdate('stats', () => {\r\n        });\r\n        this.frameId = requestAnimationFrame(this.renderLoop.bind(this));\r\n    }\r\n\r\n    /**\r\n     * 更新FPS计数器\r\n     * @param time 当前时间戳\r\n     */\r\n    private updateFpsCounter(time: number): void {\r\n        this.frameCount++;\r\n\r\n        // 每秒更新一次FPS\r\n        if (time - this.lastFpsUpdate >= 1000) {\r\n            const fps = Math.round((this.frameCount * 1000) / (time - this.lastFpsUpdate));\r\n\r\n            // 使用对象池获取事件对象\r\n            const fpsEvent = this.fpsEventObjectPool.acquire();\r\n            fpsEvent.fps = fps;\r\n            this.emit('performance:fps', fpsEvent);\r\n            // 释放事件对象回对象池\r\n            this.fpsEventObjectPool.release(fpsEvent);\r\n\r\n            this.frameCount = 0;\r\n            this.lastFpsUpdate = time;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 固定时间步长更新\r\n     */\r\n    private fixedUpdate(fixedTimeStep: number): void {\r\n        // 使用批处理调用脚本方法\r\n        this.callScriptMethodBatched('fixedUpdate', fixedTimeStep);\r\n    }\r\n\r\n    /**\r\n     * 更新脚本\r\n     */\r\n    private updateScripts(deltaTime: number): void {\r\n        // 性能优化：只更新活跃脚本\r\n        const scriptsToUpdate: IScript[] = [];\r\n\r\n        for (const script of this.scripts) {\r\n            // 缓存方法引用以提高性能\r\n            const startMethod = script.start;\r\n            const updateMethod = script.update;\r\n\r\n            // 检查脚本是否已启动，如果没有则调用start方法\r\n            if (!this.startedScripts.has(script) && startMethod) {\r\n                try {\r\n                    const result = startMethod.call(script);\r\n                    if (result instanceof Promise) {\r\n                        result.then(() => {\r\n                            this.startedScripts.add(script);\r\n                        }).catch(error => {\r\n                            console.error(`Error in script start method:`, error);\r\n                        });\r\n                    } else {\r\n                        this.startedScripts.add(script);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(`Error in script start method:`, error);\r\n                }\r\n            }\r\n\r\n            // 收集需要更新的脚本\r\n            if (updateMethod && this.startedScripts.has(script)) {\r\n                scriptsToUpdate.push(script);\r\n            }\r\n        }\r\n\r\n        // 批处理执行所有脚本更新\r\n        for (const script of scriptsToUpdate) {\r\n            try {\r\n                // 性能分析：开始脚本更新分析\r\n                this.performanceProfiler.start(`script:${script.name || 'unnamed'}`);\r\n                script.update!.call(script, deltaTime);\r\n                // 性能分析：结束脚本更新分析\r\n                this.performanceProfiler.end(`script:${script.name || 'unnamed'}`);\r\n            } catch (error) {\r\n                console.error(`Error in script update method:`, error);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 批处理调用脚本的指定方法\r\n     */\r\n    private callScriptMethodBatched(method: keyof IScript, arg?: any): void {\r\n        // 清空之前的批处理队列\r\n        this.scriptMethodBatch.length = 0;\r\n\r\n        // 将所有脚本方法调用添加到批处理队列\r\n        for (const script of this.scripts) {\r\n            const scriptMethod = script[method];\r\n            if (scriptMethod && typeof scriptMethod === 'function') {\r\n                this.scriptMethodBatch.push({ script, method, arg });\r\n            }\r\n        }\r\n\r\n        // 批处理执行所有方法调用\r\n        for (const item of this.scriptMethodBatch) {\r\n            try {\r\n                // 性能分析：开始方法调用分析\r\n                this.performanceProfiler.start(`script:${item.script.name || 'unnamed'}:${item.method}`);\r\n                if (item.arg !== undefined) {\r\n                    (item.script[item.method] as (...args: any[]) => void).call(item.script, item.arg);\r\n                } else {\r\n                    (item.script[item.method] as () => void).call(item.script);\r\n                }\r\n                // 性能分析：结束方法调用分析\r\n                this.performanceProfiler.end(`script:${item.script.name || 'unnamed'}:${item.method}`);\r\n            } catch (error) {\r\n                console.error(`Error in script ${item.method} method:`, error);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 批处理渲染调用\r\n     */\r\n    private batchRender(): void {\r\n        if (this.usePostProcessing && this.postProcessingComposer) {\r\n            this.postProcessingComposer.render();\r\n        } else {\r\n            this.renderer.render(this.scene, this.camera);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 批处理对象更新\r\n     * @param objects 要更新的对象数组\r\n     * @param updateFn 更新函数\r\n     * @param deltaTime\r\n     */\r\n    public batchUpdateObjects<T extends THREE.Object3D>(\r\n        objects: T[],\r\n        updateFn: (object: T, deltaTime: number) => void,\r\n        deltaTime: number\r\n    ): void {\r\n        // 分批处理对象更新，避免阻塞主线程\r\n        for (let i = 0; i < objects.length; i += this.renderBatchSize) {\r\n            const batch = objects.slice(i, Math.min(i + this.renderBatchSize, objects.length));\r\n\r\n            // 使用requestAnimationFrame确保在下一帧执行\r\n            requestAnimationFrame(() => {\r\n                for (const object of batch) {\r\n                    updateFn(object, deltaTime);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加对象到更新队列\r\n     * @param object 要更新的对象\r\n     */\r\n    public queueObjectUpdate(object: THREE.Object3D): void {\r\n        this.objectUpdateQueue.push(object);\r\n    }\r\n\r\n    /**\r\n     * 批处理队列中的对象更新\r\n     * @param updateFn 更新函数\r\n     * @param deltaTime 帧时间\r\n     */\r\n    public processObjectUpdateQueue(\r\n        updateFn: (object: THREE.Object3D, deltaTime: number) => void,\r\n        deltaTime: number\r\n    ): void {\r\n        this.batchUpdateObjects(this.objectUpdateQueue, updateFn, deltaTime);\r\n        // 清空队列\r\n        this.objectUpdateQueue.length = 0;\r\n    }\r\n\r\n    public disableSelection(modelName: string): void {\r\n        this.mouseInteractionScript?.addExcludedObject(modelName);\r\n    }\r\n\r\n    public disableSelections(modelName: string[]): void {\r\n        modelName.forEach(name => {\r\n            this.mouseInteractionScript?.addExcludedObject(name);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 添加脚本\r\n     */\r\n    public addScript(script: IScript): void {\r\n        script.host = this.scene;\r\n        if (script instanceof ScriptBase) {\r\n            script.setRenderer(this);\r\n        }\r\n        if (script.awake) {\r\n            try {\r\n                script.awake.call(script);\r\n            } catch (error) {\r\n                console.error('Error in script awake method:', error);\r\n            }\r\n        }\r\n        if (script.onEnable) {\r\n            try {\r\n                script.onEnable.call(script);\r\n            } catch (error) {\r\n                console.error('Error in script onEnable method:', error);\r\n            }\r\n        }\r\n        this.scripts.push(script);\r\n        this.emit('script:added', { script });\r\n    }\r\n\r\n    /**\r\n     * 移除脚本\r\n     */\r\n    public removeScript(script: IScript): void {\r\n        if (script.onDisable) {\r\n            try {\r\n                script.onDisable.call(script);\r\n            } catch (error) {\r\n                console.error('Error in script onDisable method:', error);\r\n            }\r\n        }\r\n        if (script.destroy) {\r\n            try {\r\n                script.destroy.call(script);\r\n            } catch (error) {\r\n                console.error('Error in script destroy method:', error);\r\n            }\r\n        }\r\n        this.startedScripts.delete(script);\r\n        const index = this.scripts.indexOf(script);\r\n        if (index !== -1) {\r\n            this.scripts.splice(index, 1);\r\n        }\r\n        this.emit('script:removed', { script });\r\n    }\r\n\r\n    /**\r\n     * 获取渲染器大小\r\n     */\r\n    public getSize(): THREE.Vector2 {\r\n        return new THREE.Vector2(\r\n            this.renderer.domElement.width,\r\n            this.renderer.domElement.height\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 设置像素比率\r\n     */\r\n    public setPixelRatio(value: number): void {\r\n        this.renderer.setPixelRatio(value);\r\n    }\r\n\r\n    /**\r\n     * 设置大小\r\n     */\r\n    public setSize(rect: THREE.Vector2): void {\r\n        this.renderer.setSize(rect.x, rect.y);\r\n    }\r\n\r\n    /**\r\n     * 重新调整大小\r\n     */\r\n    public resize(): void {\r\n        this.handleWindowResize();\r\n    }\r\n\r\n    /**\r\n     * 启用后处理效果\r\n     */\r\n    public enablePostProcessing(): void {\r\n        if (!this.postProcessingComposer) {\r\n            this.postProcessingComposer = new PostProcessingEffectComposer(this);\r\n        }\r\n        this.usePostProcessing = true;\r\n        this.postProcessingComposer.enable();\r\n        this.postProcessingComposer.setPixelRatio( window.devicePixelRatio );\r\n        this.emit('postprocessing:enabled', {});\r\n    }\r\n\r\n    /**\r\n     * 禁用后处理效果\r\n     */\r\n    public disablePostProcessing(): void {\r\n        this.usePostProcessing = false;\r\n        if (this.postProcessingComposer) {\r\n            this.postProcessingComposer.disable();\r\n        }\r\n        this.emit('postprocessing:disabled', {});\r\n    }\r\n\r\n    /**\r\n     * 检查是否启用了后处理\r\n     */\r\n    public isPostProcessingEnabled(): boolean {\r\n        return this.usePostProcessing && this.postProcessingComposer !== null;\r\n    }\r\n\r\n    /**\r\n     * 获取后处理效果Composer实例\r\n     */\r\n    public getPostProcessingComposer(): PostProcessingEffectComposer | null {\r\n        return this.postProcessingComposer;\r\n    }\r\n\r\n    /**\r\n     * 直接向后处理Composer添加通道\r\n     * @param pass 要添加的通道\r\n     * @param beforeOutput 是否在输出通道之前插入\r\n     */\r\n    public addPostProcessingPass(pass: any, beforeOutput: boolean = true): void {\r\n        if (this.postProcessingComposer) {\r\n            this.postProcessingComposer.addPass(pass, beforeOutput);\r\n        } else {\r\n            console.warn('[Aether3d] Post-processing composer not available. Enable post-processing first.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从后处理Composer中移除通道\r\n     * @param pass 要移除的通道\r\n     */\r\n    public removePostProcessingPass(pass: any): void {\r\n        if (this.postProcessingComposer) {\r\n            this.postProcessingComposer.removePass(pass);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁渲染器\r\n     */\r\n    public dispose(): void {\r\n        // 停止渲染循环\r\n        this.stop();\r\n\r\n        // 移除事件监听器\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n\r\n        // 销毁所有脚本\r\n        for (const script of this.scripts) {\r\n            this.removeScript(script);\r\n        }\r\n\r\n        // 清空脚本列表\r\n        this.scripts = [];\r\n        this.startedScripts.clear();\r\n\r\n        // 销毁后处理效果Composer\r\n        if (this.postProcessingComposer) {\r\n            this.postProcessingComposer.dispose();\r\n            this.postProcessingComposer = null;\r\n        }\r\n\r\n        // 销毁渲染器\r\n        this.renderer.dispose();\r\n\r\n        // 清除所有事件监听器\r\n        this.clear();\r\n\r\n        // 重置性能分析器\r\n        this.performanceProfiler.reset();\r\n\r\n        // 清理对象池\r\n        (this.eventObjectPool as any).clear?.();\r\n        (this.fpsEventObjectPool as any).clear?.();\r\n        (this.performanceDropObjectPool as any).clear?.();\r\n\r\n        // 清理批量DOM更新器\r\n        this.batchDOMUpdater.clear();\r\n\r\n        // 清空对象更新队列\r\n        this.objectUpdateQueue.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 获取性能分析数据\r\n     */\r\n    public getPerformanceData() {\r\n        return {\r\n            fpsStats: this.frameRateMonitor.getFpsStats(),\r\n            profileData: this.performanceProfiler.getAllResults()\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 设置目标帧率\r\n     */\r\n    public setTargetFps(fps: number): void {\r\n        this.targetFps = fps;\r\n        this.frameInterval = 1000 / fps;\r\n    }\r\n\r\n    /**\r\n     * 设置对象选择回调函数\r\n     * @param callback 回调函数\r\n     */\r\n    public setOnObjectSelectedCallback(callback: (object: THREE.Object3D | null) => void): void {\r\n        this.onObjectSelectedCallback = callback;\r\n        \r\n        // 如果鼠标交互脚本已经存在，重新设置回调\r\n        if (this.mouseInteractionScript) {\r\n            this.mouseInteractionScript.setOnObjectSelectedCallback(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置对象取消选择回调函数\r\n     * @param callback 回调函数\r\n     */\r\n    public setOnObjectDeselectedCallback(callback: (object: THREE.Object3D | null) => void): void {\r\n        this.onObjectDeselectedCallback = callback;\r\n        \r\n        // 如果鼠标交互脚本已经存在，重新设置回调\r\n        if (this.mouseInteractionScript) {\r\n            this.mouseInteractionScript.setOnObjectDeselectedCallback(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置对象悬停回调函数\r\n     * @param callback 回调函数\r\n     */\r\n    public setOnObjectHoveredCallback(callback: (object: THREE.Object3D | null) => void): void {\r\n        this.onObjectHoveredCallback = callback;\r\n        \r\n        // 如果鼠标交互脚本已经存在，重新设置回调\r\n        if (this.mouseInteractionScript) {\r\n            this.mouseInteractionScript.setOnObjectHoveredCallback(callback);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取鼠标交互脚本实例\r\n     */\r\n    public getMouseInteractionScript(): MouseInteractionScript | null {\r\n        return this.mouseInteractionScript;\r\n    }\r\n\r\n    /**\r\n     * 设置鼠标交互配置\r\n     */\r\n    public setMouseInteractionConfig(config: Partial<import(\"../controllers/MouseInteractionScript\").MouseInteractionConfig>): void {\r\n        if (this.mouseInteractionScript) {\r\n            this.mouseInteractionScript.updateConfig(config);\r\n        } else {\r\n            // 如果还没有鼠标交互脚本，则创建一个\r\n            this.mouseInteractionScript = new MouseInteractionScript(config);\r\n            // 设置鼠标交互回调函数\r\n            this.setupMouseInteractionCallbacks();\r\n            this.addScript(this.mouseInteractionScript);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 运行FPS诊断\r\n     */\r\n    public runFPSDiagnostics(): any {\r\n        if (this.fpsDiagnosticTool) {\r\n            return this.fpsDiagnosticTool.getReport();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取优化建议\r\n     */\r\n    public getOptimizationSuggestions(): string[] {\r\n        if (this.fpsDiagnosticTool) {\r\n            return this.fpsDiagnosticTool.generateOptimizationSuggestions();\r\n        }\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * 设置鼠标交互回调函数\r\n     */\r\n    private setupMouseInteractionCallbacks(): void {\r\n        if (this.mouseInteractionScript) {\r\n            // 添加对象选择回调\r\n            this.mouseInteractionScript.addOnObjectSelectedCallback((object: THREE.Object3D | null) => {\r\n                // 触发引擎级别的鼠标选择事件\r\n                this.emit('mouse:objectSelected', { object });\r\n                \r\n                // 调用外部设置的回调函数（如果有的话）\r\n                if (this.onObjectSelectedCallback) {\r\n                    this.onObjectSelectedCallback(object);\r\n                }\r\n            });\r\n\r\n            // 添加对象取消选择回调\r\n            this.mouseInteractionScript.addOnObjectDeselectedCallback((object: THREE.Object3D | null) => {\r\n                // 触发引擎级别的鼠标取消选择事件\r\n                this.emit('mouse:objectDeselected', { object });\r\n                \r\n                // 调用外部设置的回调函数（如果有的话）\r\n                if (this.onObjectDeselectedCallback) {\r\n                    this.onObjectDeselectedCallback(object);\r\n                }\r\n            });\r\n\r\n            // 添加对象悬停回调\r\n            this.mouseInteractionScript.addOnObjectHoveredCallback((object: THREE.Object3D | null) => {\r\n                // 触发引擎级别的鼠标悬停事件\r\n                this.emit('mouse:objectHovered', { object });\r\n                \r\n                // 调用外部设置的回调函数（如果有的话）\r\n                if (this.onObjectHoveredCallback) {\r\n                    this.onObjectHoveredCallback(object);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { THREE } from './global';\r\nimport {globalRenderer} from \"./RendererSystem.ts\";\r\nimport type {SceneData} from \"../interface/SceneData.ts\";\r\n\r\nfunction createCamera(name: string, aspect: number): THREE.PerspectiveCamera {\r\n    const camera = new THREE.PerspectiveCamera(75, aspect, 0.1, 1000);\r\n    camera.name = name;\r\n    return camera;\r\n}\r\n\r\nexport class SceneManager {\r\n    private static scenes: Map<string, SceneData> = new Map();\r\n    private static activeSceneName: string = '';\r\n\r\n    static addScene(name: string, sceneData:SceneData): void {\r\n        if (this.scenes.has(sceneData.name)) {\r\n            throw new Error(`Scene '${sceneData.name}' already exists`);\r\n        }\r\n        this.scenes.set(sceneData.name, sceneData);\r\n    }\r\n\r\n    static getSceneData(name: string): SceneData {\r\n        if (!this.has(name)) {\r\n            // 如果场景不存在，创建一个新的场景\r\n            const scene = new THREE.Scene();\r\n            scene.name = name;\r\n            const sceneData: SceneData = {\r\n                name: name,\r\n                scene: scene,\r\n                camera: createCamera(name + 'Camera', window.innerWidth / window.innerHeight),\r\n                scripts: [],\r\n                objectScripts: new Map(),\r\n                startedScripts: new Set()\r\n            };\r\n            this.addScene(name, sceneData);\r\n            return sceneData;\r\n        }\r\n        return this.scenes.get(name)!;\r\n    }\r\n\r\n    static getScene(name: string): THREE.Scene {\r\n        if (!this.has(name)) {\r\n            throw new Error(`Scene '${name}' not found`);\r\n        }\r\n        return this.scenes.get(name)!.scene;\r\n    }\r\n\r\n    static has(name: string): boolean {\r\n        return this.scenes.has(name);\r\n    }\r\n\r\n    static setActive(name: string): SceneData {\r\n        if (!this.has(name)) {\r\n            throw new Error(`Scene '${name}' not found`);\r\n        }\r\n        this.activeSceneName = name;\r\n        globalRenderer.sceneData = this.scenes.get(name)!;\r\n        globalRenderer.scene = globalRenderer.sceneData.scene;\r\n        globalRenderer.camera =globalRenderer.sceneData.camera;\r\n        return globalRenderer.sceneData;\r\n    }\r\n\r\n    static setActiveScene(index: number): SceneData {\r\n        if (index < 0 || index >= this.scenes.size) {\r\n            throw new Error(`Invalid scene index: ${index}`);\r\n        }\r\n        this.activeSceneName = Array.from(this.scenes.keys())[index];\r\n        globalRenderer.sceneData = Array.from(this.scenes.values())[index]!;\r\n        globalRenderer.scene = globalRenderer.sceneData.scene;\r\n        globalRenderer.camera =globalRenderer.sceneData.camera;\r\n        return globalRenderer.sceneData;\r\n    }\r\n\r\n    static removeScene(name: string): void {\r\n        if (!this.has(name)) {\r\n            throw new Error(`Scene '${name}' not found`);\r\n        }\r\n        this.scenes.delete(name);\r\n    }\r\n\r\n    static destroy(): void {\r\n        this.scenes.clear();\r\n        this.activeSceneName = '';\r\n    }\r\n}\r\n","import { EffectComposer, RenderPass, OutputPass, THREE } from './global';\r\nimport { SceneManager } from \"./SceneManager\";\r\nimport type {SceneData} from \"../interface/SceneData.ts\";\r\n\r\n/**\r\n * 定义全局渲染变量\r\n */\r\nexport const globalRenderer: {\r\n    renderer: THREE.WebGLRenderer | null,\r\n    scene: THREE.Scene | null,\r\n    sceneData: SceneData | null,\r\n    camera: THREE.PerspectiveCamera | null,\r\n    frame: number,\r\n    frameId: number,\r\n    contextLost: boolean,\r\n    enablePostProcessing: boolean,\r\n    composer: EffectComposer | null,\r\n    renderPass: RenderPass | null,\r\n    outputPass: OutputPass | null,\r\n} = {\r\n    renderer: null,\r\n    scene: null,\r\n    sceneData: null,\r\n    camera: null,\r\n    frame: 0,\r\n    frameId: 0,\r\n    contextLost: false,\r\n    enablePostProcessing: false,\r\n    composer: null,\r\n    renderPass: null,\r\n    outputPass: null\r\n};\r\n\r\n/**\r\n * 检查全局渲染器是否已完全初始化\r\n * @returns 如果所有必需的组件都存在则返回 true，否则返回 false\r\n */\r\nexport function isGlobalRendererReady(): boolean {\r\n    return !!globalRenderer.scene && !!globalRenderer.camera && !!globalRenderer.renderer;\r\n}\r\n/**\r\n * 创建新场景\r\n * @param name 场景名称\r\n * @returns 创建的场景实例\r\n */\r\nexport function createScene(name: string):THREE.Scene {\r\n    if (SceneManager.has(name))\r\n    {\r\n        return SceneManager.getScene(name);\r\n    }\r\n    const scene = new THREE.Scene();\r\n    scene.name = name;\r\n    const sceneData:SceneData = {\r\n        name: name,\r\n        scene: scene,\r\n        camera: createCamera(name + 'Camera', window.innerWidth/window.innerHeight),\r\n        scripts: [],\r\n        objectScripts: new Map(),\r\n        startedScripts: new Set()\r\n    };\r\n    SceneManager.addScene(name,sceneData);\r\n    return scene;\r\n}\r\n\r\n/**\r\n * 渲染场景\r\n */\r\nexport function render(): void {\r\n    if (!globalRenderer.renderer || !globalRenderer.scene || !globalRenderer.camera) return;\r\n    if (globalRenderer.enablePostProcessing && globalRenderer.composer) {\r\n        globalRenderer.composer.render();\r\n    } else {\r\n        globalRenderer.renderer.render(globalRenderer.scene, globalRenderer.camera);\r\n    }\r\n}\r\n\r\n/**\r\n * 创建透视相机\r\n * @param name\r\n * @param aspectRatio\r\n */\r\nexport function createCamera(name: string, aspectRatio: number): THREE.PerspectiveCamera {\r\n    const camera = new THREE.PerspectiveCamera(75, aspectRatio, 0.1, 1000);\r\n    camera.name = name;\r\n    return camera;\r\n}\r\n\r\n/**\r\n * 创建后处理效果\r\n */\r\nexport function createPostprocessing(): void {\r\n    if (!globalRenderer.renderer || !globalRenderer.scene || !globalRenderer.camera) return;\r\n    globalRenderer.composer = new EffectComposer(globalRenderer.renderer);\r\n    globalRenderer.renderPass = new RenderPass(globalRenderer.scene, globalRenderer.camera);\r\n}\r\n\r\n/**\r\n * 设置 WebGL 上下文事件处理程序\r\n */\r\nexport function setupContextEvents(): void {\r\n    if (!globalRenderer.renderer) return;\r\n    const canvas = globalRenderer.renderer.domElement;\r\n    canvas.addEventListener('webglcontextlost', (event: Event) => {\r\n        event.preventDefault();\r\n        globalRenderer.contextLost = true;\r\n        console.warn('[WebGLRendererAdapter] WebGL context lost - 暂停渲染流程');\r\n    }, false);\r\n    canvas.addEventListener('webglcontextrestored', () => {\r\n        globalRenderer.contextLost = false;\r\n        console.info('[WebGLRendererAdapter] WebGL context restored - 重新初始化资源');\r\n    }, false);\r\n}\r\n","import type {IScript} from \"../interface\";\r\nimport {THREE} from \"./global\";\r\nimport {SceneManager} from \"./SceneManager\";\r\n\r\n/**\r\n * 为场景或场景中的对象添加脚本\r\n * @param sceneName 场景名称\r\n * @param script 当scriptOrObject是对象时，这是要添加的脚本\r\n */\r\nexport function addScript(sceneName: string, script: IScript): void;\r\n\r\n/**\r\n * 为场景或场景中的对象添加脚本\r\n * @param sceneName 场景名称\r\n * @param object 脚本对象\r\n * @param script 脚本\r\n */\r\nexport function addScript(sceneName: string, object: THREE.Object3D, script: IScript): void;\r\nexport function addScript(sceneName: string, scriptOrObject: IScript | THREE.Object3D, script?: IScript): void {\r\n    if (!SceneManager.has(sceneName)) {\r\n        throw new Error(`Scene '${sceneName}' not found`);\r\n    }\r\n\r\n    const sceneData = SceneManager.getSceneData(sceneName);\r\n\r\n    // 如果第二个参数是 THREE.Object3D，则为对象添加脚本\r\n    if (scriptOrObject instanceof THREE.Object3D) {\r\n        if (!script) {\r\n            throw new Error('Script parameter is required when adding script to an object');\r\n        }\r\n\r\n        if (!sceneData.objectScripts.has(scriptOrObject)) {\r\n            sceneData.objectScripts.set(scriptOrObject, []);\r\n        }\r\n        sceneData.objectScripts.get(scriptOrObject)!.push(script);\r\n    }\r\n    // 否则为场景添加脚本\r\n    else {\r\n        sceneData.scripts.push(scriptOrObject as IScript);\r\n    }\r\n}\r\n\r\n/**\r\n * 移除场景或场景中的对象脚本\r\n * @param sceneName 场景名称\r\n * @param script 当scriptOrObject是对象时，这是要移除的脚本\r\n */\r\nexport function removeScript(sceneName: string, script: IScript): void;\r\n\r\n/**\r\n * 移除场景或场景中的对象脚本\r\n * @param sceneName 场景名称\r\n * @param object 脚本对象\r\n * @param script 脚本\r\n */\r\nexport function removeScript(sceneName: string, object: THREE.Object3D, script: IScript): void;\r\nexport function removeScript(sceneName: string, scriptOrObject: IScript | THREE.Object3D, script?: IScript): void {\r\n    if (!SceneManager.has(sceneName)) {\r\n        throw new Error(`Scene '${sceneName}' not found`);\r\n    }\r\n    const sceneData = SceneManager.getSceneData(sceneName);\r\n\r\n    // 如果第二个参数是 THREE.Object3D，则从对象中移除脚本\r\n    if (scriptOrObject instanceof THREE.Object3D) {\r\n        if (!script) {\r\n            throw new Error('Script parameter is required when removing script from an object');\r\n        }\r\n\r\n        // 检查对象是否有脚本\r\n        if (!sceneData.objectScripts.has(scriptOrObject)) {\r\n            throw new Error(`Object does not have any scripts`);\r\n        }\r\n\r\n        const scripts = sceneData.objectScripts.get(scriptOrObject)!;\r\n        const scriptIndex = scripts.indexOf(script);\r\n        \r\n        if (scriptIndex === -1) {\r\n            throw new Error(`Script not found on object`);\r\n        }\r\n\r\n        // 调用脚本的 destroy 方法进行清理\r\n        if (typeof script.destroy === 'function') {\r\n            try {\r\n                script.destroy();\r\n            } catch (error) {\r\n                console.warn('Error during script destroy:', error);\r\n            }\r\n        }\r\n\r\n        // 从数组中移除脚本\r\n        scripts.splice(scriptIndex, 1);\r\n\r\n        // 如果对象没有更多脚本，删除映射\r\n        if (scripts.length === 0) {\r\n            sceneData.objectScripts.delete(scriptOrObject);\r\n        }\r\n    }\r\n    // 否则从场景中移除脚本\r\n    else {\r\n        const scriptIndex = sceneData.scripts.indexOf(scriptOrObject as IScript);\r\n        \r\n        if (scriptIndex === -1) {\r\n            throw new Error(`Script not found in scene`);\r\n        }\r\n\r\n        const script = sceneData.scripts[scriptIndex];\r\n        \r\n        // 调用脚本的 destroy 方法进行清理\r\n        if (typeof script.destroy === 'function') {\r\n            try {\r\n                script.destroy();\r\n            } catch (error) {\r\n                console.warn('Error during script destroy:', error);\r\n            }\r\n        }\r\n\r\n        // 从数组中移除脚本\r\n        sceneData.scripts.splice(scriptIndex, 1);\r\n    }\r\n}\r\n","import { ScriptBase } from \"../core/ScriptBase\";\r\nimport { Reflector, THREE, HorizontalBlurShader, VerticalBlurShader } from '../core/global';\r\n\r\n/**\r\n * 镜面反射效果脚本 - 支持从清晰到模糊的渐变效果\r\n * 实现基于平面反射的镜面效果，支持中心清晰边缘模糊的渐变反射\r\n */\r\nexport class MirrorReflectionScript extends ScriptBase {\r\n    // 镜面反射参数\r\n    private clipBias: number = 0.003;\r\n    private textureWidth: number = 1024; // 提高默认分辨率以获得更好效果\r\n    private textureHeight: number = 1024;\r\n    private color: number = 0x7f7f7f;\r\n    private opacity: number = 1.0;\r\n    private blurStrength: number = 0.0; // 默认不模糊\r\n    private blurRadius: number = 5; // 模糊半径\r\n    private gradientBlur: boolean = false; // 默认不启用渐变模糊\r\n    private blurCenter: THREE.Vector2 = new THREE.Vector2(0.5, 0.5); // 模糊中心点(归一化坐标)\r\n\r\n    // 反射器\r\n    private reflector: Reflector | null = null;\r\n    private geometry: THREE.BufferGeometry | null = null;\r\n    private reflectorObject: Reflector | null = null; // 修复类型为Reflector\r\n\r\n    // 模糊效果相关\r\n    private blurRenderTarget1: THREE.WebGLRenderTarget | null = null;\r\n    private blurRenderTarget2: THREE.WebGLRenderTarget | null = null;\r\n    private blurPlane: THREE.Mesh | null = null;\r\n    private blurMaterial1: THREE.ShaderMaterial | null = null;\r\n    private blurMaterial2: THREE.ShaderMaterial | null = null;\r\n    private needsBlurUpdate: boolean = false;\r\n\r\n    constructor(options?: {\r\n        clipBias?: number;\r\n        textureWidth?: number;\r\n        textureHeight?: number;\r\n        color?: number;\r\n        opacity?: number;\r\n        blurStrength?: number;\r\n        blurRadius?: number;\r\n        gradientBlur?: boolean;\r\n        blurCenter?: THREE.Vector2;\r\n    }) {\r\n        super();\r\n        this.name = \"MirrorReflectionScript\";\r\n\r\n        if (options) {\r\n            // 修复参数赋值\r\n            if (options.clipBias !== undefined) this.clipBias = options.clipBias;\r\n            if (options.textureWidth !== undefined) this.textureWidth = options.textureWidth;\r\n            if (options.textureHeight !== undefined) this.textureHeight = options.textureHeight;\r\n            if (options.color !== undefined) this.color = options.color;\r\n            if (options.opacity !== undefined) this.opacity = options.opacity;\r\n            if (options.blurStrength !== undefined) this.blurStrength = options.blurStrength;\r\n            if (options.blurRadius !== undefined) this.blurRadius = options.blurRadius;\r\n            if (options.gradientBlur !== undefined) this.gradientBlur = options.gradientBlur;\r\n            // 添加对options.blurCenter的null检查\r\n            if (options.blurCenter !== undefined) this.blurCenter.copy(options.blurCenter);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启动脚本时调用\r\n     */\r\n    public start(): void {\r\n        // this.createReflector();\r\n        // this.createBlurComponents();\r\n    }\r\n\r\n    public meshReflector(geometry:THREE.BufferGeometry): void {\r\n        try {\r\n            // 修复条件检查\r\n            if (this.renderer) {\r\n                this.geometry = geometry;\r\n                // 添加对this.geometry的null检查\r\n                if (this.geometry) {\r\n                    this.reflector = new Reflector(this.geometry, {\r\n                        clipBias: this.clipBias,\r\n                        textureWidth: this.textureWidth,\r\n                        textureHeight: this.textureHeight,\r\n                        color: new THREE.Color(this.color)\r\n                    });\r\n\r\n                    // Reflector本身就是一个Mesh对象\r\n                    this.reflectorObject = this.reflector;\r\n                    this.reflectorObject.position.set(0, 0, 0);\r\n                    // this.reflectorObject.rotation.x = -Math.PI / 2;\r\n                    this.reflectorObject.visible = true;\r\n                    this.reflectorObject.name = 'Reflection';\r\n\r\n                    // 设置材质属性\r\n                    // 添加对this.reflectorObject.material的null检查\r\n                    if (this.reflectorObject && this.reflectorObject.material) {\r\n                        const material = this.reflectorObject.material;\r\n                        if (Array.isArray(material)) {\r\n                            material.forEach(mat => {\r\n                                if (mat instanceof THREE.MeshBasicMaterial || mat instanceof THREE.ShaderMaterial) {\r\n                                    mat.transparent = true;\r\n                                    mat.opacity = this.opacity;\r\n                                }\r\n                            });\r\n                        } else {\r\n                            if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.ShaderMaterial) {\r\n                                material.transparent = true;\r\n                                material.opacity = this.opacity;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 添加到场景\r\n                    // 添加对this.scene的null检查\r\n                    if (this.scene) {\r\n                        this.scene.add(this.reflectorObject);\r\n                    }\r\n                    console.log('[MirrorReflectionScript] Gradient blur mirror reflector created successfully');\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('[MirrorReflectionScript] Failed to create mirror reflector:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建镜面反射器 - 修改为支持渐变模糊\r\n     */\r\n    private createReflector(): void {\r\n        try {\r\n            // 修复条件检查\r\n            if (this.renderer) {\r\n                this.geometry = new THREE.PlaneGeometry(1000, 1000);\r\n\r\n                // 添加对this.geometry的null检查\r\n                if (this.geometry) {\r\n                    this.reflector = new Reflector(this.geometry, {\r\n                        clipBias: this.clipBias,\r\n                        textureWidth: this.textureWidth,\r\n                        textureHeight: this.textureHeight,\r\n                        color: new THREE.Color(this.color)\r\n                    });\r\n\r\n                    // Reflector本身就是一个Mesh对象\r\n                    this.reflectorObject = this.reflector;\r\n                    this.reflectorObject.position.set(0, 0, 0);\r\n                    this.reflectorObject.rotation.x = -Math.PI / 2;\r\n                    this.reflectorObject.visible = true;\r\n                    this.reflectorObject.name = 'Reflection';\r\n\r\n                    // 设置材质属性\r\n                    // 添加对this.reflectorObject.material的null检查\r\n                    if (this.reflectorObject && this.reflectorObject.material) {\r\n                        const material = this.reflectorObject.material;\r\n                        if (Array.isArray(material)) {\r\n                            material.forEach(mat => {\r\n                                if (mat instanceof THREE.MeshBasicMaterial || mat instanceof THREE.ShaderMaterial) {\r\n                                    mat.transparent = true;\r\n                                    mat.opacity = this.opacity;\r\n                                }\r\n                            });\r\n                        } else {\r\n                            if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.ShaderMaterial) {\r\n                                material.transparent = true;\r\n                                material.opacity = this.opacity;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 添加到场景\r\n                    // 添加对this.scene的null检查\r\n                    if (this.scene) {\r\n                        this.scene.add(this.reflectorObject);\r\n                    }\r\n                    console.log('[MirrorReflectionScript] Gradient blur mirror reflector created successfully');\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('[MirrorReflectionScript] Failed to create mirror reflector:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建模糊效果组件\r\n     */\r\n    public createBlurComponents(): void {\r\n        if (!this.renderer) return;\r\n\r\n        // 创建渲染目标\r\n        this.blurRenderTarget1 = new THREE.WebGLRenderTarget(this.textureWidth, this.textureHeight);\r\n        this.blurRenderTarget2 = new THREE.WebGLRenderTarget(this.textureWidth, this.textureHeight);\r\n\r\n        // 创建模糊着色器材质\r\n        this.blurMaterial1 = new THREE.ShaderMaterial({\r\n            name: 'HorizontalBlurMaterial',\r\n            uniforms: {\r\n                tDiffuse: { value: null },\r\n                h: { value: this.blurRadius / this.textureWidth }\r\n            },\r\n            vertexShader: HorizontalBlurShader.vertexShader,\r\n            fragmentShader: HorizontalBlurShader.fragmentShader\r\n        });\r\n\r\n        this.blurMaterial2 = new THREE.ShaderMaterial({\r\n            name: 'VerticalBlurMaterial',\r\n            uniforms: {\r\n                tDiffuse: { value: null },\r\n                v: { value: this.blurRadius / this.textureHeight }\r\n            },\r\n            vertexShader: VerticalBlurShader.vertexShader,\r\n            fragmentShader: VerticalBlurShader.fragmentShader\r\n        });\r\n\r\n        // 创建用于应用模糊效果的平面\r\n        const blurPlaneGeometry = new THREE.PlaneGeometry(2, 2);\r\n        this.blurPlane = new THREE.Mesh(blurPlaneGeometry, this.blurMaterial1);\r\n        this.blurPlane.visible = false;\r\n    }\r\n\r\n    /**\r\n     * 应用模糊效果\r\n     */\r\n    private applyBlur(renderer: THREE.WebGLRenderer): void {\r\n        if (!this.reflector || !this.blurRenderTarget1 || !this.blurRenderTarget2 ||\r\n            !this.blurMaterial1 || !this.blurMaterial2 || !this.blurPlane) {\r\n            return;\r\n        }\r\n\r\n        // 如果模糊强度为0，直接使用原始反射纹理\r\n        if (this.blurStrength <= 0) {\r\n            // 恢复原始纹理\r\n            if (this.reflector.material) {\r\n                const material = this.reflector.material as THREE.ShaderMaterial;\r\n                if (material.uniforms && material.uniforms.tDiffuse) {\r\n                    material.uniforms.tDiffuse.value = this.reflector.getRenderTarget().texture;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        // 获取反射器的渲染目标纹理\r\n        const reflectorTexture = this.reflector.getRenderTarget().texture;\r\n\r\n        // 水平模糊\r\n        this.blurMaterial1.uniforms.tDiffuse.value = reflectorTexture;\r\n        this.blurMaterial1.uniforms.h.value = this.blurRadius / this.textureWidth * this.blurStrength;\r\n\r\n        renderer.setRenderTarget(this.blurRenderTarget1);\r\n        renderer.render(this.blurPlane, this.camera);\r\n\r\n        // 垂直模糊\r\n        this.blurMaterial2.uniforms.tDiffuse.value = this.blurRenderTarget1.texture;\r\n        this.blurMaterial2.uniforms.v.value = this.blurRadius / this.textureHeight * this.blurStrength;\r\n\r\n        renderer.setRenderTarget(this.blurRenderTarget2);\r\n        renderer.render(this.blurPlane, this.camera);\r\n\r\n        // 将模糊后的纹理应用到反射器材质\r\n        if (this.reflector.material) {\r\n            const material = this.reflector.material as THREE.ShaderMaterial;\r\n            if (material.uniforms && material.uniforms.tDiffuse) {\r\n                material.uniforms.tDiffuse.value = this.blurRenderTarget2.texture;\r\n            }\r\n        }\r\n\r\n        this.needsBlurUpdate = false;\r\n    }\r\n\r\n    /**\r\n     * 更新镜面反射参数 - 添加模糊参数支持\r\n     */\r\n    public updateParameters(options: {\r\n        clipBias?: number;\r\n        textureWidth?: number;\r\n        textureHeight?: number;\r\n        color?: number;\r\n        opacity?: number;\r\n        blurStrength?: number;\r\n        blurRadius?: number;\r\n        gradientBlur?: boolean;\r\n        blurCenter?: THREE.Vector2;\r\n    }): void {\r\n        let needsRecreate = false;\r\n\r\n        // 检查是否需要重新创建反射器\r\n        if (options.textureWidth !== undefined && options.textureWidth !== this.textureWidth) {\r\n            this.textureWidth = options.textureWidth;\r\n            needsRecreate = true;\r\n        }\r\n        if (options.textureHeight !== undefined && options.textureHeight !== this.textureHeight) {\r\n            this.textureHeight = options.textureHeight;\r\n            needsRecreate = true;\r\n        }\r\n\r\n        // 更新其他参数\r\n        if (options.clipBias !== undefined) this.clipBias = options.clipBias;\r\n        if (options.color !== undefined) this.color = options.color;\r\n        if (options.opacity !== undefined) this.opacity = options.opacity;\r\n        if (options.blurStrength !== undefined) {\r\n            this.blurStrength = options.blurStrength;\r\n            this.needsBlurUpdate = true;\r\n        }\r\n        if (options.blurRadius !== undefined) {\r\n            this.blurRadius = options.blurRadius;\r\n            this.needsBlurUpdate = true;\r\n        }\r\n        if (options.gradientBlur !== undefined) this.gradientBlur = options.gradientBlur;\r\n        if (options.blurCenter !== undefined) this.blurCenter.copy(options.blurCenter);\r\n\r\n        // 如果需要重新创建反射器\r\n        if (needsRecreate) {\r\n            this.dispose();\r\n            this.createReflector();\r\n            this.createBlurComponents();\r\n        } else {\r\n            // 更新现有反射器的参数\r\n            this.updateReflectorParameters();\r\n            // 更新模糊参数\r\n            this.updateBlurParameters();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新模糊参数\r\n     */\r\n    private updateBlurParameters(): void {\r\n        if (this.blurMaterial1 && this.blurMaterial2) {\r\n            this.blurMaterial1.uniforms.h.value = this.blurRadius / this.textureWidth * this.blurStrength;\r\n            this.blurMaterial2.uniforms.v.value = this.blurRadius / this.textureHeight * this.blurStrength;\r\n            this.needsBlurUpdate = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新反射器参数\r\n     */\r\n    private updateReflectorParameters(): void {\r\n        // 添加对this.reflectorObject和this.reflectorObject.material的null检查\r\n        if (!this.reflectorObject || !this.reflectorObject.material) return;\r\n\r\n        const material = this.reflectorObject.material;\r\n        if (Array.isArray(material)) {\r\n            material.forEach(mat => {\r\n                if (mat instanceof THREE.MeshBasicMaterial || mat instanceof THREE.ShaderMaterial) {\r\n                    mat.transparent = true;\r\n                    mat.opacity = this.opacity;\r\n                }\r\n            });\r\n        } else {\r\n            if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.ShaderMaterial) {\r\n                material.transparent = true;\r\n                material.opacity = this.opacity;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置模糊强度\r\n     */\r\n    public setBlurStrength(strength: number): void {\r\n        this.blurStrength = Math.max(0, Math.min(1, strength)); // 限制在0-1范围内\r\n        this.needsBlurUpdate = true;\r\n        this.updateBlurParameters();\r\n        console.log(`[MirrorReflectionScript] Blur strength set to: ${this.blurStrength}`);\r\n    }\r\n\r\n    /**\r\n     * 设置模糊半径\r\n     */\r\n    public setBlurRadius(radius: number): void {\r\n        this.blurRadius = Math.max(0, radius); // 确保半径不为负数\r\n        this.needsBlurUpdate = true;\r\n        this.updateBlurParameters();\r\n        console.log(`[MirrorReflectionScript] Blur radius set to: ${this.blurRadius}`);\r\n    }\r\n\r\n    /**\r\n     * 设置渐变模糊中心点\r\n     */\r\n    public setBlurCenter(x: number, y: number): void {\r\n        this.blurCenter.set(x, y);\r\n        console.log(`[MirrorReflectionScript] Blur center set to: (${x}, ${y})`);\r\n    }\r\n\r\n    /**\r\n     * 启用或禁用渐变模糊\r\n     */\r\n    public setGradientBlurEnabled(enabled: boolean): void {\r\n        this.gradientBlur = enabled;\r\n        this.needsBlurUpdate = true;\r\n        console.log(`[MirrorReflectionScript] Gradient blur ${enabled ? 'enabled' : 'disabled'}`);\r\n    }\r\n\r\n    /**\r\n     * 设置反射透明度\r\n     */\r\n    public setOpacity(opacity: number): void {\r\n        this.opacity = opacity;\r\n        this.updateReflectorParameters();\r\n    }\r\n\r\n    /**\r\n     * 设置反射颜色\r\n     */\r\n    public setColor(color: number): void {\r\n        this.color = color;\r\n        // 更新反射器的颜色\r\n        if (this.reflector && this.reflector.material) {\r\n            const material = this.reflector.material;\r\n            if (!Array.isArray(material) &&\r\n                (material as any).uniforms &&\r\n                (material as any).uniforms.color) {\r\n                (material as any).uniforms.color.value = new THREE.Color(color);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取反射器对象\r\n     */\r\n    public getReflectorObject(): Reflector | null {\r\n        return this.reflectorObject;\r\n    }\r\n\r\n    /**\r\n     * 更新函数 - 每帧调用\r\n     */\r\n    public update(): void {\r\n        // 可以在这里添加每帧更新的逻辑\r\n    }\r\n\r\n    /**\r\n     * 渲染前调用 - 应用模糊效果\r\n     */\r\n    public onPreRender(): void {\r\n        // 在渲染前应用模糊效果\r\n        if (this.renderer && this.needsBlurUpdate) {\r\n            this.applyBlur(this.renderer.renderer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理资源\r\n     */\r\n    public dispose(): void {\r\n        // 添加对this.reflectorObject和this.scene的null检查\r\n        if (this.reflectorObject && this.scene) {\r\n            this.scene.remove(this.reflectorObject);\r\n        }\r\n\r\n        // 添加对this.geometry的null检查\r\n        if (this.geometry) {\r\n            this.geometry.dispose();\r\n        }\r\n\r\n        // 添加对this.reflector的null检查\r\n        if (this.reflector && typeof this.reflector.dispose === 'function') {\r\n            this.reflector.dispose();\r\n        }\r\n\r\n        // 清理模糊相关资源\r\n        if (this.blurRenderTarget1) {\r\n            this.blurRenderTarget1.dispose();\r\n        }\r\n        if (this.blurRenderTarget2) {\r\n            this.blurRenderTarget2.dispose();\r\n        }\r\n        if (this.blurMaterial1) {\r\n            this.blurMaterial1.dispose();\r\n        }\r\n        if (this.blurMaterial2) {\r\n            this.blurMaterial2.dispose();\r\n        }\r\n        if (this.blurPlane) {\r\n            this.blurPlane.geometry.dispose();\r\n        }\r\n\r\n        this.reflector = null;\r\n        this.reflectorObject = null;\r\n        this.geometry = null;\r\n        this.blurRenderTarget1 = null;\r\n        this.blurRenderTarget2 = null;\r\n        this.blurPlane = null;\r\n        this.blurMaterial1 = null;\r\n        this.blurMaterial2 = null;\r\n    }\r\n}\r\n","import { THREE,TWEEN} from \"../core/global.ts\";\r\nimport { ScriptBase } from \"../core/ScriptBase\";\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\n\r\n/**\r\n * OrbitControls配置接口\r\n * 定义轨道控制器的所有可配置参数\r\n */\r\nexport interface OrbitControlsConfig {\r\n    /** 是否启用阻尼 */\r\n    enableDamping?: boolean;\r\n    /** 阻尼系数 */\r\n    dampingFactor?: number;\r\n    /** 是否启用缩放 */\r\n    enableZoom?: boolean;\r\n    /** 缩放速度 */\r\n    zoomSpeed?: number;\r\n    /** 是否启用平移 */\r\n    enablePan?: boolean;\r\n    /** 平移速度 */\r\n    panSpeed?: number;\r\n    /** 是否启用旋转 */\r\n    enableRotate?: boolean;\r\n    /** 旋转速度 */\r\n    rotateSpeed?: number;\r\n    /** 是否自动旋转 */\r\n    autoRotate?: boolean;\r\n    /** 自动旋转速度 */\r\n    autoRotateSpeed?: number;\r\n    /** 最小距离 */\r\n    minDistance?: number;\r\n    /** 最大距离 */\r\n    maxDistance?: number;\r\n    /** 最小极角 */\r\n    minPolarAngle?: number;\r\n    /** 最大极角 */\r\n    maxPolarAngle?: number;\r\n    /** 最小方位角 */\r\n    minAzimuthAngle?: number;\r\n    /** 最大方位角 */\r\n    maxAzimuthAngle?: number;\r\n    /** 目标位置 */\r\n    target?: THREE.Vector3;\r\n}\r\n\r\n/**\r\n * 聚焦选项扩展接口\r\n */\r\nexport interface FocusOptions {\r\n    /** 聚焦动画持续时间（毫秒） */\r\n    duration?: number;\r\n    /** 相机距离目标的距离 */\r\n    distance?: number;\r\n    /** 相机的方向（相对于目标的偏移） */\r\n    direction?: THREE.Vector3;\r\n    /** 是否使用平滑动画 */\r\n    smooth?: boolean;\r\n    /** 动画缓动函数类型 */\r\n    easing?: 'linear' | 'easeInOut' | 'easeIn' | 'easeOut';\r\n    /** 完成回调 */\r\n    onComplete?: () => void;\r\n    /** 聚焦模式 */\r\n    mode?: 'center' | 'front' | 'back' | 'top' | 'bottom' | 'left' | 'right';\r\n    /** 偏移量 */\r\n    offset?: THREE.Vector3;\r\n}\r\n\r\n/**\r\n * 预设配置类型\r\n */\r\nexport type PresetName = 'smooth' | 'responsive' | 'presentation' | 'cinema' | 'gaming';\r\n\r\n\r\nexport class OrbitControlsScript extends ScriptBase {\r\n    name = 'OrbitControlsScript';\r\n    /** OrbitControls配置参数 */\r\n    private config: Required<OrbitControlsConfig>;\r\n\r\n    /** Three.js OrbitControls实例 */\r\n    private orbitControls: OrbitControls | null = null;\r\n\r\n    /** 相机引用 */\r\n    private cameraRef: THREE.Camera | null = null;\r\n\r\n    /** 渲染器引用 */\r\n    private rendererRef: THREE.WebGLRenderer | null = null;\r\n\r\n    /** 是否启用状态 */\r\n    private _enabled = true;\r\n\r\n    /** 动画相关 */\r\n    private isAnimating = false;\r\n\r\n    private tween:  TWEEN.Tween | null = null;\r\n\r\n    private tweenBack:  TWEEN.Tween | null = null;\r\n\r\n    private lodPosition: THREE.Vector3 | null = null;\r\n\r\n    /** 预设配置 */\r\n    private presets: Record<PresetName, Partial<OrbitControlsConfig>> = {\r\n        smooth: {\r\n            enableDamping: true,\r\n            dampingFactor: 0.12,\r\n            rotateSpeed: 0.3,\r\n            panSpeed: 1.5,\r\n            zoomSpeed: 0.8\r\n        },\r\n        responsive: {\r\n            enableDamping: true,\r\n            dampingFactor: 0.06,\r\n            rotateSpeed: 0.5,\r\n            panSpeed: 2.5,\r\n            zoomSpeed: 1.2\r\n        },\r\n        presentation: {\r\n            autoRotate: true,\r\n            autoRotateSpeed: 1.0,\r\n            enableDamping: true,\r\n            dampingFactor: 0.08,\r\n            rotateSpeed: 0.4,\r\n            panSpeed: 1.8\r\n        },\r\n        cinema: {\r\n            enableDamping: true,\r\n            dampingFactor: 0.15,\r\n            rotateSpeed: 0.2,\r\n            autoRotateSpeed: 0.5,\r\n            minPolarAngle: Math.PI / 6,\r\n            maxPolarAngle: Math.PI * 5 / 6,\r\n            panSpeed: 1.2\r\n        },\r\n        gaming: {\r\n            enableDamping: true,\r\n            dampingFactor: 0.04,\r\n            rotateSpeed: 0.8,\r\n            panSpeed: 3.5,\r\n            zoomSpeed: 1.5,\r\n            autoRotateSpeed: 2.0\r\n        }\r\n    };\r\n\r\n    /**\r\n     * 构造函数 - 初始化OrbitControls脚本\r\n     *\r\n     * @param options - 可选的配置参数\r\n     */\r\n    constructor(options?: OrbitControlsConfig) {\r\n        super();\r\n        // 合并默认配置和用户配置\r\n        this.config = {\r\n            enableDamping: true,\r\n            dampingFactor: 0.08,\r\n            enableZoom: true,\r\n            zoomSpeed: 1.0,\r\n            enablePan: true,\r\n            panSpeed: 2.0,\r\n            enableRotate: true,\r\n            rotateSpeed: 0.5,\r\n            autoRotate: false,\r\n            autoRotateSpeed: 2.0,\r\n            minDistance: 1,\r\n            maxDistance: 100,\r\n            minPolarAngle: 0,\r\n            maxPolarAngle: Math.PI,\r\n            minAzimuthAngle: -Infinity,\r\n            maxAzimuthAngle: Infinity,\r\n            target: new THREE.Vector3(0, 0, 0),\r\n            ...options\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 脚本启用\r\n     */\r\n    public override onEnable(): void {\r\n        super.onEnable?.();\r\n        if (this.orbitControls) {\r\n            this.orbitControls.enabled = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 脚本初始化 - 核心初始化逻辑\r\n     *\r\n     * 主要任务：\r\n     * 1. 获取场景、相机和渲染器的引用\r\n     * 2. 创建和配置OrbitControls\r\n     * 3. 设置事件监听器\r\n     *\r\n     * @returns Promise<void> - 异步初始化完成的Promise\r\n     */\r\n    public override async start(): Promise<void> {\r\n        super.start?.();\r\n        // 获取相机和渲染器\r\n        try {\r\n            this.cameraRef = this.camera;  // 通过getter获取相机\r\n            this.rendererRef = this.webGLRenderer;  // 通过getter获取渲染器\r\n            // 只有当lodPosition还没有被设置时，才将其初始化为相机的当前位置\r\n            if (!this.lodPosition && this.cameraRef) {\r\n                this.lodPosition = this.cameraRef.position.clone();\r\n            }\r\n        } catch (error) {\r\n            console.warn('[OrbitControlsScript] 无法直接获取相机或渲染器:', error);\r\n        }\r\n\r\n        if (!this.cameraRef || !this.rendererRef) {\r\n            console.warn('[OrbitControlsScript] 无法获取相机或渲染器，将在后续自动检测');\r\n        } else {\r\n            // 创建OrbitControls\r\n            this.createOrbitControls();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 每帧更新 - 更新OrbitControls\r\n     *\r\n     * @param deltaTime - 上一帧到当前帧的时间间隔（秒）\r\n     */\r\n    public override update(deltaTime: number): void {\r\n        super.update?.(deltaTime);\r\n        // 如果相机或渲染器还未获取，尝试重新获取\r\n        if (!this.cameraRef || !this.rendererRef) {\r\n            this.tryAutoSetup();\r\n        }\r\n\r\n        // 更新OrbitControls\r\n        if (this.orbitControls && this._enabled) {\r\n            this.orbitControls.update();\r\n        }\r\n\r\n        // 更新TWEEN动画\r\n        this.tween?.update();\r\n        this.tweenBack?.update();\r\n    }\r\n\r\n    public override onResize(): void {\r\n        super.onResize();\r\n    }\r\n\r\n    /**\r\n     * 脚本禁用\r\n     */\r\n    public override onDisable(): void {\r\n        super.onDisable?.();\r\n        if (this.orbitControls) {\r\n            this.orbitControls.enabled = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 脚本销毁 - 清理所有资源\r\n     */\r\n    public override destroy(): void {\r\n        super.destroy?.();\r\n        // 停止所有动画\r\n        this.stopAnimation();\r\n\r\n        // 销毁OrbitControls\r\n        if (this.orbitControls) {\r\n            this.orbitControls.dispose();\r\n            this.orbitControls = null;\r\n        }\r\n    }\r\n\r\n    // ===========================================\r\n    // 私有方法\r\n    // ===========================================\r\n\r\n    /**\r\n     * 尝试自动设置相机和渲染器\r\n     */\r\n    private tryAutoSetup(): void {\r\n        try {\r\n            if (!this.cameraRef) {\r\n                this.cameraRef = this.camera;  // 通过getter获取相机\r\n            }\r\n\r\n            if (!this.rendererRef) {\r\n                this.rendererRef = this.webGLRenderer;  // 通过getter获取渲染器\r\n            }\r\n\r\n            // 如果都获取到了，创建OrbitControls\r\n            if (this.cameraRef && this.rendererRef && !this.orbitControls) {\r\n                this.createOrbitControls();\r\n            }\r\n        } catch (error) {\r\n            // 静默处理，避免在每次更新时都打印错误\r\n            console.warn('[OrbitControlsScript] 自动设置相机和渲染器时出错:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建OrbitControls\r\n     */\r\n    private createOrbitControls(): void {\r\n        if (!this.cameraRef || !this.rendererRef) {\r\n            console.warn('[OrbitControlsScript] 相机或渲染器不可用');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // 销毁旧的控制器\r\n            if (this.orbitControls) {\r\n                this.orbitControls.dispose();\r\n            }\r\n\r\n            // 创建新的OrbitControls\r\n            this.orbitControls = new OrbitControls(this.cameraRef, this.rendererRef.domElement);\r\n\r\n            // 应用配置\r\n            this.applyConfig();\r\n        } catch (error) {\r\n            console.error('[OrbitControlsScript] 创建OrbitControls失败:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 应用配置到OrbitControls\r\n     */\r\n    private applyConfig(): void {\r\n        if (!this.orbitControls) return;\r\n\r\n        const controls = this.orbitControls;\r\n        const config = this.config;\r\n\r\n        // 基本设置\r\n        controls.enableDamping = config.enableDamping;\r\n        controls.dampingFactor = config.dampingFactor;\r\n        controls.enableZoom = config.enableZoom;\r\n        controls.zoomSpeed = config.zoomSpeed;\r\n        controls.enablePan = config.enablePan;\r\n        controls.panSpeed = config.panSpeed;\r\n        controls.enableRotate = config.enableRotate;\r\n        controls.rotateSpeed = config.rotateSpeed;\r\n        controls.autoRotate = config.autoRotate;\r\n        controls.autoRotateSpeed = config.autoRotateSpeed;\r\n\r\n        // 距离限制\r\n        controls.minDistance = config.minDistance;\r\n        controls.maxDistance = config.maxDistance;\r\n\r\n        // 角度限制\r\n        controls.minPolarAngle = config.minPolarAngle;\r\n        controls.maxPolarAngle = config.maxPolarAngle;\r\n        controls.minAzimuthAngle = config.minAzimuthAngle;\r\n        controls.maxAzimuthAngle = config.maxAzimuthAngle;\r\n\r\n        // 目标位置\r\n        controls.target.copy(config.target);\r\n        controls.update();\r\n    }\r\n\r\n    /**\r\n     * 停止当前动画\r\n     */\r\n    stopAnimation(): void {\r\n        if (this.tween) {\r\n            this.tween.stop();\r\n            this.tween = null;\r\n        }\r\n        if (this.tweenBack) {\r\n            this.tweenBack.stop();\r\n            this.tweenBack = null;\r\n        }\r\n        this.isAnimating = false;\r\n    }\r\n\r\n    /**\r\n     * 动画到指定位置和目标\r\n     */\r\n    private animateToPosition(targetPosition: THREE.Vector3,targetCenter: THREE.Vector3,options: Required<FocusOptions>): void {\r\n        if (!this.cameraRef || !this.orbitControls) return;\r\n        this.stopAnimation();\r\n        this.isAnimating = true;\r\n        const startPosition = this.cameraRef.position.clone();\r\n        const startTarget = this.orbitControls.target.clone();\r\n        this.tween = new TWEEN.Tween({\r\n          x: startPosition.x,\r\n          y: startPosition.y,\r\n          z: startPosition.z,\r\n          targetX: startTarget.x,\r\n          targetY: startTarget.y,\r\n          targetZ: startTarget.z\r\n        })\r\n          .to({\r\n            x: targetPosition.x,\r\n            y: targetPosition.y,\r\n            z: targetPosition.z,\r\n            targetX: targetCenter.x,\r\n            targetY: targetCenter.y,\r\n            targetZ: targetCenter.z\r\n          }, options.duration)\r\n          .easing(this.getTweenEasing(options.easing))\r\n          .onUpdate((object) => {\r\n            this.cameraRef!.position.set(object.x, object.y, object.z);\r\n            this.orbitControls!.target.set(object.targetX, object.targetY, object.targetZ);\r\n            this.orbitControls!.update();\r\n          })\r\n          .onComplete(() => {\r\n            this.isAnimating = false;\r\n            this.config.target.copy(targetCenter);\r\n            options.onComplete();\r\n          });\r\n\r\n        this.tween.start();\r\n    }\r\n\r\n    private getTweenEasing(easing: FocusOptions['easing']): (amount: number) => number {\r\n        switch (easing) {\r\n          case 'linear':\r\n            return TWEEN.Easing.Linear.None;\r\n          case 'easeIn':\r\n            return TWEEN.Easing.Quadratic.In;\r\n          case 'easeOut':\r\n            return TWEEN.Easing.Quadratic.Out;\r\n          case 'easeInOut':\r\n            return TWEEN.Easing.Quadratic.InOut;\r\n          default:\r\n            return TWEEN.Easing.Quadratic.InOut;\r\n        }\r\n    }\r\n\r\n    private calculateBoundingBox(object: THREE.Object3D): THREE.Box3 {\r\n        const box = new THREE.Box3();\r\n\r\n        // 遍历所有子对象来计算包围盒\r\n        object.traverse((child) => {\r\n            if ((child as THREE.Mesh).isMesh) {\r\n                const mesh = child as THREE.Mesh;\r\n                if (mesh.geometry) {\r\n                    // 更新矩阵\r\n                    mesh.updateWorldMatrix(true, false);\r\n                    const geometry = mesh.geometry;\r\n                    if (geometry.boundingBox) {\r\n                        box.union(geometry.boundingBox.clone().applyMatrix4(mesh.matrixWorld));\r\n                    } else {\r\n                        const boundingBox = new THREE.Box3().setFromObject(mesh);\r\n                        box.union(boundingBox);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // 如果没有找到网格对象，回退到原始对象\r\n        if (box.isEmpty()) {\r\n            box.setFromObject(object);\r\n        }\r\n\r\n        return box;\r\n    }\r\n\r\n    enable(): void {\r\n        this._enabled = true;\r\n        if (this.orbitControls) {\r\n            this.orbitControls.enabled = true;\r\n        }\r\n    }\r\n\r\n    disable(): void {\r\n        this._enabled = false;\r\n        if (this.orbitControls) {\r\n            this.orbitControls.enabled = false;\r\n        }\r\n    }\r\n\r\n    reset(): void {\r\n        if (this.orbitControls) {\r\n            this.orbitControls.reset();\r\n        }\r\n    }\r\n\r\n    updateConfig(newConfig: Partial<OrbitControlsConfig>): void {\r\n        Object.assign(this.config, newConfig);\r\n        this.applyConfig();\r\n    }\r\n\r\n    getConfig(): OrbitControlsConfig {\r\n        return { ...this.config };\r\n    }\r\n\r\n    applyPreset(presetName: PresetName): void {\r\n        const preset = this.presets[presetName];\r\n        if (preset) {\r\n            this.updateConfig(preset);\r\n        } else {\r\n            console.warn(`[OrbitControlsScript] 未知的预设: ${presetName}`);\r\n        }\r\n    }\r\n\r\n    getPresets(): PresetName[] {\r\n        return Object.keys(this.presets) as PresetName[];\r\n    }\r\n\r\n    backLodPosition(targetPosition?: THREE.Vector3, options?: FocusOptions): void {\r\n        // 如果没有提供目标位置，则使用存储的lodPosition\r\n        const positionToUse = targetPosition || this.lodPosition;\r\n\r\n        if (positionToUse && this.cameraRef && this.orbitControls) {\r\n            // 合并默认选项和用户提供的选项\r\n            const focusOptions: FocusOptions = {\r\n                duration: 1000,\r\n                distance: 10,\r\n                direction: new THREE.Vector3(1, 1, 1).normalize(),\r\n                smooth: true,\r\n                easing: 'easeInOut',\r\n                onComplete: () => {},\r\n                mode: 'center',\r\n                offset: new THREE.Vector3(0, 0, 0),\r\n                ...options\r\n            };\r\n\r\n            // 停止当前动画\r\n            this.stopAnimation();\r\n            this.isAnimating = true;\r\n\r\n            // 获取当前位置和目标\r\n            const startPosition = this.cameraRef.position.clone();\r\n            const startTarget = this.orbitControls.target.clone();\r\n\r\n            // 计算目标位置和目标点\r\n            const targetPositionVec = positionToUse.clone();\r\n            // 将目标点设置为原点(0, 0, 0)，与Canvas3D.tsx中设置的一致\r\n            const targetCenter = new THREE.Vector3(0, 0, 0);\r\n\r\n            this.tweenBack = new TWEEN.Tween({\r\n              x: startPosition.x,\r\n              y: startPosition.y,\r\n              z: startPosition.z,\r\n              targetX: startTarget.x,\r\n              targetY: startTarget.y,\r\n              targetZ: startTarget.z\r\n            })\r\n              .to({\r\n                x: targetPositionVec.x,\r\n                y: targetPositionVec.y,\r\n                z: targetPositionVec.z,\r\n                targetX: targetCenter.x,\r\n                targetY: targetCenter.y,\r\n                targetZ: targetCenter.z\r\n              }, focusOptions.duration)\r\n              .easing(this.getTweenEasing(focusOptions.easing))\r\n              .onUpdate((object) => {\r\n                this.cameraRef!.position.set(object.x, object.y, object.z);\r\n                this.orbitControls!.target.set(object.targetX, object.targetY, object.targetZ);\r\n                this.orbitControls!.update();\r\n              })\r\n              .onComplete(() => {\r\n                this.isAnimating = false;\r\n                this.config.target.copy(targetCenter);\r\n                focusOptions.onComplete?.();\r\n              });\r\n\r\n            this.tweenBack.start();\r\n        } else {\r\n            console.warn('[OrbitControlsScript] 无法退回指定位置，缺少必要参数');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 聚焦到指定对象\r\n     *\r\n     * @param object - 要聚焦的3D对象\r\n     * @param options - 聚焦选项\r\n     */\r\n    focusOnObject(object: THREE.Object3D, options: FocusOptions = {}): void {\r\n        if (!this.cameraRef || !this.orbitControls) {\r\n            console.warn('[OrbitControlsScript] 相机或控制器不可用');\r\n            return;\r\n        }\r\n        const defaultOptions: Required<FocusOptions> = {\r\n            duration: 1000,\r\n            distance: 10,\r\n            direction: new THREE.Vector3(1, 1, 1).normalize(),\r\n            smooth: true,\r\n            easing: 'easeInOut',\r\n            onComplete: () => {},\r\n            mode: 'center',\r\n            offset: new THREE.Vector3(0, 0, 0)\r\n        };\r\n\r\n        const finalOptions = { ...defaultOptions, ...options };\r\n\r\n        // 计算对象的包围盒和中心点\r\n        const boundingBox = this.calculateBoundingBox(object);\r\n        const center = boundingBox.getCenter(new THREE.Vector3());\r\n        const size = boundingBox.getSize(new THREE.Vector3());\r\n\r\n        // 根据模式计算相机位置\r\n        let targetPosition: THREE.Vector3;\r\n        const cameraOffset = finalOptions.offset || new THREE.Vector3(0, 0, 0);\r\n\r\n        // 计算合适的距离，确保对象完整显示在视图中\r\n        const maxDim = Math.max(size.x, size.y, size.z);\r\n        const fov = (this.cameraRef as THREE.PerspectiveCamera).fov || 50;\r\n        const autoDistance = maxDim / (2 * Math.tan(THREE.MathUtils.degToRad(fov) / 2)) * 1.5;\r\n        const targetDistance = finalOptions.distance === 10 ? autoDistance : finalOptions.distance;\r\n\r\n        switch (finalOptions.mode) {\r\n            case 'front':\r\n                targetPosition = center.clone().add(new THREE.Vector3(0, 0, 1).multiplyScalar(targetDistance)).add(cameraOffset);\r\n                break;\r\n            case 'back':\r\n                targetPosition = center.clone().add(new THREE.Vector3(0, 0, -1).multiplyScalar(targetDistance)).add(cameraOffset);\r\n                break;\r\n            case 'top':\r\n                targetPosition = center.clone().add(new THREE.Vector3(0, 1, 0).multiplyScalar(targetDistance)).add(cameraOffset);\r\n                break;\r\n            case 'bottom':\r\n                targetPosition = center.clone().add(new THREE.Vector3(0, -1, 0).multiplyScalar(targetDistance)).add(cameraOffset);\r\n                break;\r\n            case 'left':\r\n                targetPosition = center.clone().add(new THREE.Vector3(-1, 0, 0).multiplyScalar(targetDistance)).add(cameraOffset);\r\n                break;\r\n            case 'right':\r\n                targetPosition = center.clone().add(new THREE.Vector3(1, 0, 0).multiplyScalar(targetDistance)).add(cameraOffset);\r\n                break;\r\n            case 'center':\r\n            default:\r\n                targetPosition = center.clone().add(\r\n                    finalOptions.direction.clone().multiplyScalar(targetDistance)\r\n                ).add(cameraOffset);\r\n                break;\r\n        }\r\n        if (!finalOptions.smooth) {\r\n            this.cameraRef.position.copy(targetPosition);\r\n            this.orbitControls.target.copy(center);\r\n            this.orbitControls.update();\r\n            finalOptions.onComplete();\r\n            return;\r\n        }\r\n        this.animateToPosition(targetPosition, center, finalOptions);\r\n    }\r\n\r\n    /**\r\n     * 获取当前相机位置\r\n     */\r\n    getCameraPosition(): THREE.Vector3 | null {\r\n        return this.cameraRef ? this.cameraRef.position.clone() : null;\r\n    }\r\n\r\n    /**\r\n     * 获取当前目标位置\r\n     */\r\n    getTargetPosition(): THREE.Vector3 | null {\r\n        return this.orbitControls ? this.orbitControls.target.clone() : null;\r\n    }\r\n\r\n    /**\r\n     * 获取当前是否正在执行动画\r\n     */\r\n    getIsAnimating(): boolean {\r\n        return this.isAnimating;\r\n    }\r\n\r\n    /**\r\n     * 获取控制器是否启用\r\n     */\r\n    getEnabled(): boolean {\r\n        return this._enabled && this.orbitControls !== null;\r\n    }\r\n\r\n    getControls(): OrbitControls | null {\r\n        return this.orbitControls;\r\n    }\r\n\r\n    /**\r\n     * 设置默认位置\r\n     * @param position - 要设置为默认位置的向量\r\n     */\r\n    setDefaultPosition(position: THREE.Vector3): void {\r\n        this.lodPosition = position.clone();\r\n    }\r\n\r\n    /**\r\n     * 获取默认位置\r\n     */\r\n    getDefaultPosition(): THREE.Vector3 | null {\r\n        return this.lodPosition ? this.lodPosition.clone() : null;\r\n    }\r\n\r\n    /**\r\n     * 更新相机初始位置为当前相机位置\r\n     */\r\n    updateInitialPosition(): void {\r\n        if (this.cameraRef) {\r\n            this.lodPosition = this.cameraRef.position.clone();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置默认相机位置和目标点\r\n     * @param position 相机位置\r\n     * @param target 相机目标点\r\n     */\r\n    setDefaultCameraPosition(position: THREE.Vector3, target: THREE.Vector3): void {\r\n        this.lodPosition = position.clone();\r\n        this.config.target = target.clone();\r\n        if (this.orbitControls) {\r\n            this.orbitControls.target.copy(target);\r\n            this.orbitControls.update();\r\n        }\r\n    }\r\n}\r\n","import { ScriptBase } from \"../core/ScriptBase\";\r\nimport { THREE, CSS2DObject } from \"../core/global.ts\";\r\n\r\n/**\r\n * 场景灯光配置接口\r\n */\r\nexport interface SceneLightingConfig {\r\n    /** 是否启用环境光 */\r\n    enableAmbientLight?: boolean;\r\n    /** 环境光颜色 */\r\n    ambientLightColor?: number;\r\n    /** 环境光地面颜色 */\r\n    ambientLightGroundColor?: number;\r\n    /** 环境光强度 */\r\n    ambientLightIntensity?: number;\r\n    \r\n    /** 是否启用聚光灯 */\r\n    enableSpotLight?: boolean;\r\n    /** 聚光灯颜色 */\r\n    spotLightColor?: number;\r\n    /** 聚光灯强度 */\r\n    spotLightIntensity?: number;\r\n    /** 聚光灯位置 */\r\n    spotLightPosition?: [number, number, number];\r\n    /** 聚光灯目标位置 */\r\n    spotLightTarget?: [number, number, number];\r\n    /** 聚光灯角度 */\r\n    spotLightAngle?: number;\r\n    /** 聚光灯半影 */\r\n    spotLightPenumbra?: number;\r\n    /** 聚光灯衰减 */\r\n    spotLightDecay?: number;\r\n    /** 聚光灯距离 */\r\n    spotLightDistance?: number;\r\n    /** 聚光灯贴图 */\r\n    spotLightMap?: string;\r\n    \r\n    /** 聚光灯阴影设置 */\r\n    spotLightShadow?: {\r\n        enabled?: boolean;\r\n        mapSizeWidth?: number;\r\n        mapSizeHeight?: number;\r\n        cameraNear?: number;\r\n        cameraFar?: number;\r\n        focus?: number;\r\n    };\r\n    \r\n    /** 是否显示灯光辅助器 */\r\n    showLightHelpers?: boolean;\r\n    \r\n    /** 是否显示标签 */\r\n    showLabels?: boolean;\r\n    /** 标签文本 */\r\n    labelContent?: string;\r\n    /** 标签是否可点击 */\r\n    clickableLabels?: boolean;\r\n}\r\n\r\n/**\r\n * 场景灯光脚本类\r\n * 用于在场景中添加和控制环境光和聚光灯\r\n */\r\nexport class SceneLightingScript extends ScriptBase {\r\n    name = 'SceneLightingScript';\r\n\r\n    // 灯光相关属性\r\n    private config: Required<SceneLightingConfig>;\r\n    private ambientLight: THREE.HemisphereLight | null = null;\r\n    private spotLight: THREE.SpotLight | null = null;\r\n    private spotLightHelper: THREE.SpotLightHelper | null = null;\r\n    private textures: { [key: string]: THREE.Texture | null } = { none: null };\r\n    private label: CSS2DObject | null = null;\r\n    private labelElement: HTMLElement | null = null;\r\n    private isLightEnabled: boolean = true;\r\n\r\n    constructor(options?: SceneLightingConfig) {\r\n        super();\r\n\r\n        this.config = {\r\n            enableAmbientLight: true,\r\n            ambientLightColor: 0xffffff,\r\n            ambientLightGroundColor: 0x8d8d8d,\r\n            ambientLightIntensity: 4,\r\n            \r\n            enableSpotLight: true,\r\n            spotLightColor: 0xffffff,\r\n            spotLightIntensity: 100,\r\n            spotLightPosition: [2.5, 5, 2.5],\r\n            spotLightTarget: [0, 0, 0],  // 默认聚焦在地面中心\r\n            spotLightAngle: Math.PI / 2,\r\n            spotLightPenumbra: 1,\r\n            spotLightDecay: 2,\r\n            spotLightDistance: 0,\r\n            spotLightMap: 'colors.jpg',\r\n            \r\n            spotLightShadow: {\r\n                enabled: true,\r\n                mapSizeWidth: 2024,\r\n                mapSizeHeight: 2024,\r\n                cameraNear: 1,\r\n                cameraFar: 0,\r\n                focus: 0\r\n            },\r\n            \r\n            showLightHelpers: true,\r\n            showLabels: true,\r\n            labelContent: '灯光',\r\n            clickableLabels: true,\r\n            ...options\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 脚本初始化时调用\r\n     */\r\n    public override start(): void {\r\n        super.start?.();\r\n        \r\n        // 加载纹理\r\n        this.loadTextures();\r\n        \r\n        // 创建环境光\r\n        if (this.config.enableAmbientLight) {\r\n            this.createAmbientLight();\r\n        }\r\n        \r\n        // 创建聚光灯\r\n        if (this.config.enableSpotLight) {\r\n            this.createSpotLight();\r\n        }\r\n        \r\n        // 创建标签\r\n        if (this.config.showLabels) {\r\n            this.createLabel();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 每帧更新时调用\r\n     */\r\n    public override update(deltaTime: number): void {\r\n        super.update?.(deltaTime);\r\n        \r\n        // 更新灯光辅助器\r\n        if (this.spotLightHelper) {\r\n            this.spotLightHelper.update();\r\n        }\r\n        \r\n        // 更新标签位置\r\n        if (this.label && this.spotLight) {\r\n            this.label.position.copy(this.spotLight.position);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载纹理\r\n     */\r\n    private loadTextures(): void {\r\n        try {\r\n            const loader = new THREE.TextureLoader().setPath('/textures/');\r\n            const filenames = ['colors.png','disturb.jpg','uv_grid_opengl.jpg'];\r\n\r\n            for (let i = 0; i < filenames.length; i++) {\r\n                const filename = filenames[i];\r\n                const texture = loader.load(filename);\r\n                texture.minFilter = THREE.LinearFilter;\r\n                texture.magFilter = THREE.LinearFilter;\r\n                texture.generateMipmaps = false;\r\n                texture.colorSpace = THREE.SRGBColorSpace;\r\n                this.textures[filename] = texture;\r\n            }\r\n        } catch (error) {\r\n            console.error('[SceneLightingScript] 加载纹理失败:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建环境光\r\n     */\r\n    private createAmbientLight(): void {\r\n        try {\r\n            if (this.scene) {\r\n                this.ambientLight = new THREE.HemisphereLight(\r\n                    this.config.ambientLightColor,\r\n                    this.config.ambientLightGroundColor,\r\n                    this.config.ambientLightIntensity\r\n                );\r\n                this.scene.add(this.ambientLight);\r\n            }\r\n        } catch (error) {\r\n            console.error('[SceneLightingScript] 创建环境光失败:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建聚光灯\r\n     */\r\n    private createSpotLight(): void {\r\n        try {\r\n            if (this.scene) {\r\n                this.spotLight = new THREE.SpotLight(\r\n                    this.config.spotLightColor,\r\n                    this.config.spotLightIntensity\r\n                );\r\n                \r\n                // 设置位置\r\n                this.spotLight.position.set(\r\n                    this.config.spotLightPosition[0],\r\n                    this.config.spotLightPosition[1],\r\n                    this.config.spotLightPosition[2]\r\n                );\r\n                \r\n                // 设置聚光灯参数\r\n                this.spotLight.angle = this.config.spotLightAngle;\r\n                this.spotLight.penumbra = this.config.spotLightPenumbra;\r\n                this.spotLight.decay = this.config.spotLightDecay;\r\n                this.spotLight.distance = this.config.spotLightDistance;\r\n                \r\n                // 设置聚光灯贴图\r\n                if (this.config.spotLightMap && this.textures[this.config.spotLightMap]) {\r\n                    this.spotLight.map = this.textures[this.config.spotLightMap];\r\n                }\r\n                \r\n                // 设置阴影\r\n                if (this.config.spotLightShadow?.enabled) {\r\n                    this.spotLight.castShadow = true;\r\n                    this.spotLight.shadow.mapSize.width = this.config.spotLightShadow.mapSizeWidth || 2024;\r\n                    this.spotLight.shadow.mapSize.height = this.config.spotLightShadow.mapSizeHeight || 2024;\r\n                    this.spotLight.shadow.camera.near = this.config.spotLightShadow.cameraNear || 1;\r\n                    this.spotLight.shadow.camera.far = this.config.spotLightShadow.cameraFar || 0;\r\n                    this.spotLight.shadow.focus = this.config.spotLightShadow.focus || 0;\r\n                }\r\n                \r\n                // 添加目标对象，使灯光面向指定位置\r\n                const targetObject = new THREE.Object3D();\r\n                targetObject.position.set(\r\n                    this.config.spotLightTarget[0],\r\n                    this.config.spotLightTarget[1],\r\n                    this.config.spotLightTarget[2]\r\n                );\r\n                this.scene.add(targetObject);\r\n                this.spotLight.target = targetObject;\r\n                \r\n                this.scene.add(this.spotLight);\r\n                \r\n                // 创建灯光辅助器\r\n                if (this.config.showLightHelpers && this.spotLight) {\r\n                    this.spotLightHelper = new THREE.SpotLightHelper(this.spotLight);\r\n                    this.scene.add(this.spotLightHelper);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('[SceneLightingScript] 创建聚光灯失败:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建标签\r\n     */\r\n    private createLabel(): void {\r\n        try {\r\n            if (this.spotLight && this.scene) {\r\n                // 创建标签元素\r\n                this.labelElement = document.createElement('div');\r\n                this.labelElement.className = 'scene-light-label';\r\n                this.labelElement.textContent = this.config.labelContent || '灯光';\r\n                this.labelElement.style.padding = '8px 12px';\r\n                this.labelElement.style.background = 'rgba(0, 0, 0, 0.85)';\r\n                this.labelElement.style.color = '#ffffff';\r\n                this.labelElement.style.borderRadius = '8px';\r\n                this.labelElement.style.fontSize = '14px';\r\n                this.labelElement.style.fontFamily = 'Arial, \"Microsoft YaHei\", sans-serif';\r\n                this.labelElement.style.fontWeight = '500';\r\n                this.labelElement.style.whiteSpace = 'nowrap';\r\n                this.labelElement.style.userSelect = 'none';\r\n                this.labelElement.style.border = '1px solid rgba(255, 255, 255, 0.15)';\r\n                this.labelElement.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.4)';\r\n                this.labelElement.style.backdropFilter = 'blur(8px)';\r\n                this.labelElement.style.pointerEvents = this.config.clickableLabels ? 'auto' : 'none';\r\n                this.labelElement.style.zIndex = '1000';\r\n                this.labelElement.style.cursor = this.config.clickableLabels ? 'pointer' : 'default';\r\n\r\n                // 添加悬停效果\r\n                if (this.config.clickableLabels) {\r\n                    this.labelElement.addEventListener('mouseenter', () => {\r\n                        this.labelElement!.style.transform = 'scale(1.05)';\r\n                        this.labelElement!.style.boxShadow = '0 6px 16px rgba(0, 0, 0, 0.5)';\r\n                    });\r\n\r\n                    this.labelElement.addEventListener('mouseleave', () => {\r\n                        this.labelElement!.style.transform = 'scale(1)';\r\n                        this.labelElement!.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.4)';\r\n                    });\r\n\r\n                    // 添加点击事件\r\n                    this.labelElement.addEventListener('click', (event) => {\r\n                        event.stopPropagation();\r\n                        this.toggleLight();\r\n                    });\r\n                }\r\n\r\n                // 创建CSS2DObject\r\n                this.label = new CSS2DObject(this.labelElement);\r\n                this.label.position.copy(this.spotLight.position);\r\n                \r\n                // 将标签添加到场景中\r\n                this.scene.add(this.label);\r\n            }\r\n        } catch (error) {\r\n            console.error('[SceneLightingScript] 创建标签失败:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新环境光配置\r\n     */\r\n    public updateAmbientLightConfig(newConfig: Partial<{\r\n        color: number;\r\n        groundColor: number;\r\n        intensity: number;\r\n    }>): void {\r\n        if (!this.ambientLight) return;\r\n        \r\n        if (newConfig.color !== undefined) {\r\n            this.ambientLight.color.set(newConfig.color);\r\n        }\r\n        \r\n        if (newConfig.groundColor !== undefined) {\r\n            this.ambientLight.groundColor.set(newConfig.groundColor);\r\n        }\r\n        \r\n        if (newConfig.intensity !== undefined) {\r\n            this.ambientLight.intensity = newConfig.intensity;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新聚光灯目标位置\r\n     */\r\n    public updateSpotLightTarget(target: [number, number, number]): void {\r\n        if (this.spotLight) {\r\n            (this.spotLight.target as THREE.Object3D).position.set(target[0], target[1], target[2]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新聚光灯配置\r\n     */\r\n    public updateSpotLightConfig(newConfig: Partial<{\r\n        color: number;\r\n        intensity: number;\r\n        position: [number, number, number];\r\n        target: [number, number, number];\r\n        angle: number;\r\n        penumbra: number;\r\n        decay: number;\r\n        distance: number;\r\n    }>): void {\r\n        if (!this.spotLight) return;\r\n        \r\n        if (newConfig.color !== undefined) {\r\n            this.spotLight.color.set(newConfig.color);\r\n        }\r\n        \r\n        if (newConfig.intensity !== undefined) {\r\n            this.spotLight.intensity = newConfig.intensity;\r\n        }\r\n        \r\n        if (newConfig.position !== undefined) {\r\n            this.spotLight.position.set(\r\n                newConfig.position[0],\r\n                newConfig.position[1],\r\n                newConfig.position[2]\r\n            );\r\n            // 更新标签位置\r\n            if (this.label) {\r\n                this.label.position.copy(this.spotLight.position);\r\n            }\r\n        }\r\n        \r\n        if (newConfig.target !== undefined) {\r\n            (this.spotLight.target as THREE.Object3D).position.set(\r\n                newConfig.target[0],\r\n                newConfig.target[1],\r\n                newConfig.target[2]\r\n            );\r\n        }\r\n        \r\n        if (newConfig.angle !== undefined) {\r\n            this.spotLight.angle = newConfig.angle;\r\n        }\r\n        \r\n        if (newConfig.penumbra !== undefined) {\r\n            this.spotLight.penumbra = newConfig.penumbra;\r\n        }\r\n        \r\n        if (newConfig.decay !== undefined) {\r\n            this.spotLight.decay = newConfig.decay;\r\n        }\r\n        \r\n        if (newConfig.distance !== undefined) {\r\n            this.spotLight.distance = newConfig.distance;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新聚光灯阴影配置\r\n     */\r\n    public updateSpotLightShadowConfig(newConfig: Partial<{\r\n        enabled: boolean;\r\n        mapSizeWidth: number;\r\n        mapSizeHeight: number;\r\n        cameraNear: number;\r\n        cameraFar: number;\r\n        focus: number;\r\n    }>): void {\r\n        if (!this.spotLight) return;\r\n        \r\n        if (newConfig.enabled !== undefined) {\r\n            this.spotLight.castShadow = newConfig.enabled;\r\n        }\r\n        \r\n        if (newConfig.mapSizeWidth !== undefined) {\r\n            this.spotLight.shadow.mapSize.width = newConfig.mapSizeWidth;\r\n        }\r\n        \r\n        if (newConfig.mapSizeHeight !== undefined) {\r\n            this.spotLight.shadow.mapSize.height = newConfig.mapSizeHeight;\r\n        }\r\n        \r\n        if (newConfig.cameraNear !== undefined) {\r\n            this.spotLight.shadow.camera.near = newConfig.cameraNear;\r\n        }\r\n        \r\n        if (newConfig.cameraFar !== undefined) {\r\n            this.spotLight.shadow.camera.far = newConfig.cameraFar;\r\n        }\r\n        \r\n        if (newConfig.focus !== undefined) {\r\n            this.spotLight.shadow.focus = newConfig.focus;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置标签内容\r\n     */\r\n    public setLabelContent(content: string): void {\r\n        this.config.labelContent = content;\r\n        if (this.labelElement) {\r\n            this.labelElement.textContent = content;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示/隐藏标签\r\n     */\r\n    public setShowLabels(show: boolean): void {\r\n        this.config.showLabels = show;\r\n        if (this.label) {\r\n            this.label.visible = show;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置标签是否可点击\r\n     */\r\n    public setClickableLabels(clickable: boolean): void {\r\n        this.config.clickableLabels = clickable;\r\n        if (this.labelElement) {\r\n            this.labelElement.style.pointerEvents = clickable ? 'auto' : 'none';\r\n            this.labelElement.style.cursor = clickable ? 'pointer' : 'default';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置聚光灯聚焦到特定对象\r\n     */\r\n    public focusSpotLightOn(object: THREE.Object3D): void {\r\n        if (this.spotLight) {\r\n            this.spotLight.target = object;\r\n            // 更新辅助器\r\n            if (this.spotLightHelper) {\r\n                this.spotLightHelper.update();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取聚光灯对象\r\n     */\r\n    public getSpotLight(): THREE.SpotLight | null {\r\n        return this.spotLight;\r\n    }\r\n\r\n    /**\r\n     * 获取聚光灯辅助器对象\r\n     */\r\n    public getSpotLightHelper(): THREE.SpotLightHelper | null {\r\n        return this.spotLightHelper;\r\n    }\r\n\r\n    /**\r\n     * 启用或禁用环境光\r\n     */\r\n    public setAmbientLightEnabled(enabled: boolean): void {\r\n        if (enabled && !this.ambientLight) {\r\n            this.createAmbientLight();\r\n        } else if (!enabled && this.ambientLight) {\r\n            if (this.scene) {\r\n                this.scene.remove(this.ambientLight);\r\n            }\r\n            this.ambientLight = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启用或禁用聚光灯\r\n     */\r\n    public setSpotLightEnabled(enabled: boolean): void {\r\n        if (enabled && !this.spotLight) {\r\n            this.createSpotLight();\r\n        } else if (!enabled && this.spotLight) {\r\n            if (this.scene) {\r\n                this.scene.remove(this.spotLight);\r\n                if (this.spotLightHelper) {\r\n                    this.scene.remove(this.spotLightHelper);\r\n                    this.spotLightHelper = null;\r\n                }\r\n                if (this.label) {\r\n                    this.scene.remove(this.label);\r\n                    this.label = null;\r\n                    this.labelElement = null;\r\n                }\r\n            }\r\n            this.spotLight = null;\r\n        }\r\n        \r\n        // 更新灯光状态\r\n        this.isLightEnabled = enabled;\r\n        this.updateLabelStyle();\r\n    }\r\n\r\n    /**\r\n     * 获取环境光对象\r\n     */\r\n    public getAmbientLight(): THREE.HemisphereLight | null {\r\n        return this.ambientLight;\r\n    }\r\n\r\n    /**\r\n     * 切换灯光开关\r\n     */\r\n    public toggleLight(): void {\r\n        this.isLightEnabled = !this.isLightEnabled;\r\n        \r\n        // 控制环境光\r\n        if (this.ambientLight) {\r\n            this.ambientLight.visible = this.isLightEnabled;\r\n        }\r\n        \r\n        // 控制聚光灯\r\n        if (this.spotLight) {\r\n            this.spotLight.visible = this.isLightEnabled;\r\n            this.spotLight.intensity = this.isLightEnabled ? this.config.spotLightIntensity : 0;\r\n        }\r\n        \r\n        // 控制辅助器\r\n        if (this.spotLightHelper) {\r\n            this.spotLightHelper.visible = this.isLightEnabled;\r\n        }\r\n        \r\n        // 更新标签样式\r\n        this.updateLabelStyle();\r\n        \r\n        console.log(`[SceneLightingScript] 灯光已${this.isLightEnabled ? '开启' : '关闭'}`);\r\n    }\r\n\r\n    /**\r\n     * 更新标签样式以反映灯光状态\r\n     */\r\n    private updateLabelStyle(): void {\r\n        if (this.labelElement) {\r\n            // 根据灯光状态更新背景色\r\n            if (this.isLightEnabled) {\r\n                this.labelElement.style.background = 'rgba(0, 0, 0, 0.85)';\r\n                this.labelElement.style.border = '1px solid rgba(255, 255, 255, 0.15)';\r\n            } else {\r\n                this.labelElement.style.background = 'rgba(100, 100, 100, 0.85)';\r\n                this.labelElement.style.border = '1px solid rgba(150, 150, 150, 0.15)';\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 脚本销毁时调用\r\n     */\r\n    public override destroy(): void {\r\n        super.destroy?.();\r\n        \r\n        // 清理环境光\r\n        if (this.ambientLight && this.scene) {\r\n            this.scene.remove(this.ambientLight);\r\n        }\r\n        \r\n        // 清理聚光灯\r\n        if (this.spotLight && this.scene) {\r\n            // 清理目标对象\r\n            if (this.spotLight.target && this.spotLight.target !== this.scene) {\r\n                this.scene.remove(this.spotLight.target);\r\n            }\r\n            this.scene.remove(this.spotLight);\r\n        }\r\n        \r\n        // 清理聚光灯辅助器\r\n        if (this.spotLightHelper && this.scene) {\r\n            this.scene.remove(this.spotLightHelper);\r\n        }\r\n        \r\n        // 清理标签\r\n        if (this.label && this.scene) {\r\n            this.scene.remove(this.label);\r\n        }\r\n        \r\n        // 清理纹理\r\n        for (const key in this.textures) {\r\n            if (this.textures[key]) {\r\n                this.textures[key]?.dispose();\r\n            }\r\n        }\r\n        \r\n        this.ambientLight = null;\r\n        this.spotLight = null;\r\n        this.spotLightHelper = null;\r\n        this.label = null;\r\n        this.labelElement = null;\r\n        this.textures = { none: null };\r\n    }\r\n}","import { THREE } from \"../core/global.ts\";\r\nimport { ScriptBase } from \"../core/ScriptBase\";\r\nimport { UnrealBloomPass } from '../core/global';\r\n\r\n/**\r\n * Bloom效果脚本\r\n * 演示如何创建一个具体后处理效果脚本\r\n */\r\nexport class BloomEffectScript extends ScriptBase {\r\n    // Bloom效果参数\r\n    private strength: number = 0.5;\r\n    private radius: number = 0.4;\r\n    private threshold: number = 0.85;\r\n    private pass: any = null;\r\n\r\n    constructor(strength?: number, radius?: number, threshold?: number) {\r\n        super();\r\n        this.name = \"BloomEffectScript\";\r\n\r\n        if (strength !== undefined) this.strength = strength;\r\n        if (radius !== undefined) this.radius = radius;\r\n        if (threshold !== undefined) this.threshold = threshold;\r\n    }\r\n\r\n    /**\r\n     * 当脚本被添加到渲染器时调用\r\n     */\r\n    public override awake(): void {\r\n        super.awake?.();\r\n\r\n        // 创建Bloom通道\r\n        this.createPass();\r\n    }\r\n\r\n    /**\r\n     * 当脚本变为启用和激活状态时调用\r\n     */\r\n    public override onEnable(): void {\r\n        super.onEnable?.();\r\n\r\n        // 如果通道已创建，添加到Composer中\r\n        if (this.pass && this.renderer) {\r\n            const composer = this.renderer.getPostProcessingComposer();\r\n            if (composer) {\r\n                this.renderer.addPostProcessingPass(this.pass);\r\n                console.log('[BloomEffectScript] Bloom pass enabled and added to composer');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当脚本变为禁用或非激活状态时调用\r\n     */\r\n    public override onDisable(): void {\r\n        super.onDisable?.();\r\n\r\n        // 从Composer中移除通道\r\n        if (this.pass && this.renderer) {\r\n            this.renderer.removePostProcessingPass(this.pass);\r\n            console.log('[BloomEffectScript] Bloom pass disabled and removed from composer');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 脚本销毁时调用\r\n     */\r\n    public override destroy(): void {\r\n        super.destroy?.();\r\n\r\n        // 从Composer中移除通道\r\n        if (this.pass && this.renderer) {\r\n            this.renderer.removePostProcessingPass(this.pass);\r\n        }\r\n\r\n        // 清理通道资源\r\n        if (this.pass && typeof this.pass.dispose === 'function') {\r\n            this.pass.dispose();\r\n            this.pass = null;\r\n        }\r\n\r\n        console.log('[BloomEffectScript] Bloom pass destroyed');\r\n    }\r\n\r\n    /**\r\n     * 创建Bloom通道\r\n     */\r\n    private createPass(): void {\r\n        try {\r\n            if (this.renderer) {\r\n                // 创建Vector2对象而不是使用字面量对象\r\n                const size = new THREE.Vector2(window.innerWidth, window.innerHeight);\r\n                console.log('[BloomEffectScript] Creating Bloom pass with params:', {\r\n                    size: `${size.x}x${size.y}`,\r\n                    strength: this.strength,\r\n                    radius: this.radius,\r\n                    threshold: this.threshold\r\n                });\r\n\r\n                this.pass = new UnrealBloomPass(\r\n                    size,\r\n                    this.strength,\r\n                    this.radius,\r\n                    this.threshold\r\n                );\r\n\r\n                // 如果脚本已经启用，立即将通道添加到composer中\r\n                if (this.renderer.isPostProcessingEnabled()) {\r\n                    this.renderer.addPostProcessingPass(this.pass);\r\n                    console.log('[BloomEffectScript] Bloom pass created and added to composer');\r\n                } else {\r\n                    console.log('[BloomEffectScript] Bloom pass created but post-processing is not enabled');\r\n                }\r\n            } else {\r\n                console.warn('[BloomEffectScript] Renderer not available when creating Bloom pass');\r\n            }\r\n        } catch (error) {\r\n            console.error('[BloomEffectScript] Failed to create Bloom pass:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新Bloom参数\r\n     */\r\n    public updateParameters(strength?: number, radius?: number, threshold?: number): void {\r\n        if (strength !== undefined) this.strength = strength;\r\n        if (radius !== undefined) this.radius = radius;\r\n        if (threshold !== undefined) this.threshold = threshold;\r\n\r\n        // 更新通道参数\r\n        if (this.pass) {\r\n            if (strength !== undefined) this.pass.strength = strength;\r\n            if (radius !== undefined) this.pass.radius = radius;\r\n            if (threshold !== undefined) this.pass.threshold = threshold;\r\n\r\n            console.log('[BloomEffectScript] Bloom parameters updated:', {\r\n                strength: strength !== undefined ? strength : this.strength,\r\n                radius: radius !== undefined ? radius : this.radius,\r\n                threshold: threshold !== undefined ? threshold : this.threshold\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 每一帧更新时调用\r\n     */\r\n    public override update(deltaTime: number): void {\r\n        super.update?.(deltaTime);\r\n\r\n        // 可以在这里添加基于时间的动画效果\r\n        // 例如：动态调整Bloom强度\r\n    }\r\n\r\n    /**\r\n     * 每一帧在 update 调用之后调用\r\n     */\r\n    public override lateUpdate(deltaTime: number): void {\r\n        super.lateUpdate?.(deltaTime);\r\n    }\r\n\r\n    /**\r\n     * 获取通道实例\r\n     */\r\n    public getPass(): any {\r\n        return this.pass;\r\n    }\r\n}\r\n","import { ScriptBase } from \"../core/ScriptBase\";\r\nimport {THREE, CSS2DObject, RectAreaLightUniformsLib, RectAreaLightHelper, TWEEN} from \"../core/global.ts\";\r\n\r\n\r\n/**\r\n * 矩形区域光配置接口\r\n */\r\nexport interface RectAreaLightConfig {\r\n    /** 是否启用矩形区域光 */\r\n    enabled?: boolean;\r\n    /** 矩形区域光颜色 */\r\n    color?: THREE.Color;\r\n    /** 矩形区域光强度 */\r\n    intensity?: number;\r\n    /** 矩形区域光宽度 */\r\n    width?: number;\r\n    /** 矩形区域光高度 */\r\n    height?: number;\r\n    /** 矩形区域光位置 */\r\n    position?: [number, number, number];\r\n    /** 矩形区域光旋转 */\r\n    rotation?: [number, number, number];\r\n    /** 是否显示灯光辅助器 */\r\n    showLightHelpers?: boolean;\r\n    /** 是否显示标签 */\r\n    showLabels?: boolean;\r\n    /** 标签文本 */\r\n    labelContent?: string;\r\n    /** 标签是否可点击 */\r\n    clickableLabels?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * 矩形区域光脚本类\r\n * 用于在场景中添加和控制矩形区域光\r\n *\r\n * 提供以下主要功能：\r\n * - 创建和配置矩形区域光\r\n * - 控制灯光开关（开灯、关灯、切换）\r\n * - 管理标签显示和交互\r\n * - 控制灯光辅助器显示\r\n */\r\nexport class RectAreaLightScript extends ScriptBase {\r\n    name = 'RectAreaLightScript';\r\n\r\n    // 灯光相关属性\r\n    private config: Required<RectAreaLightConfig>;\r\n    private rectAreaLight: THREE.RectAreaLight | null = null;\r\n    private rectAreaLightHelper: any | null = null;\r\n    private label: CSS2DObject | null = null;\r\n    private labelElement: HTMLElement | null = null;\r\n    private isLightEnabled: boolean = true;\r\n    private isTweenEnabled: boolean = false;\r\n    private static uniformsLibInitialized: boolean = false;\r\n    private openTweens: TWEEN.Tween | null = null;\r\n    private closeTweens: TWEEN.Tween | null = null;\r\n\r\n\r\n    constructor(options?: RectAreaLightConfig) {\r\n        super();\r\n\r\n        this.config = {\r\n            enabled: true,\r\n            color: new THREE.Color('#6b828a'),\r\n            intensity: 1,\r\n            width: 10,\r\n            height: 10,\r\n            position: [0, 5, 0],\r\n            rotation: [0, 0, 0],\r\n            showLightHelpers: true,\r\n            showLabels: true,\r\n            labelContent: '矩形区域光',\r\n            clickableLabels: true,\r\n            ...options\r\n        };\r\n\r\n        // 默认情况下灯光是关闭的\r\n        this.isLightEnabled = false;\r\n    }\r\n\r\n    /**\r\n     * 脚本初始化时调用\r\n     */\r\n    public override start(): void {\r\n        super.start?.();\r\n\r\n        // 初始化RectAreaLightUniformsLib（只需要初始化一次）\r\n        if (!RectAreaLightScript.uniformsLibInitialized) {\r\n            RectAreaLightUniformsLib.init();\r\n            RectAreaLightScript.uniformsLibInitialized = true;\r\n        }\r\n\r\n        // 创建矩形区域光\r\n        if (this.config.enabled) {\r\n            this.createRectAreaLight();\r\n            // 确保灯光初始化为关闭状态\r\n            if (this.rectAreaLight) {\r\n                this.rectAreaLight.visible = false;\r\n                this.rectAreaLight.intensity = 0;\r\n            }\r\n        }\r\n\r\n        // 创建标签\r\n        if (this.config.showLabels) {\r\n            this.createLabel();\r\n            // 更新标签样式以反映初始关闭状态\r\n            this.updateLabelStyle();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 每帧更新时调用\r\n     */\r\n    public override update(deltaTime: number): void {\r\n        super.update?.(deltaTime);\r\n\r\n        // 更新标签位置\r\n        if (this.label && this.rectAreaLight) {\r\n            this.label.position.copy(this.rectAreaLight.position);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建矩形区域光\r\n     */\r\n    private createRectAreaLight(): void {\r\n        try {\r\n            if (this.scene) {\r\n                // 创建矩形区域光\r\n                this.rectAreaLight = new THREE.RectAreaLight(\r\n                    this.config.color,\r\n                    this.config.intensity,\r\n                    this.config.width,\r\n                    this.config.height\r\n                );\r\n\r\n                // 设置位置\r\n                this.rectAreaLight.position.set(\r\n                    this.config.position[0],\r\n                    this.config.position[1],\r\n                    this.config.position[2]\r\n                );\r\n\r\n                // 设置旋转\r\n                this.rectAreaLight.rotation.set(\r\n                    this.config.rotation[0],\r\n                    this.config.rotation[1],\r\n                    this.config.rotation[2]\r\n                );\r\n\r\n                this.scene.add(this.rectAreaLight);\r\n\r\n                // 创建灯光辅助器\r\n                if (this.config.showLightHelpers && this.rectAreaLight) {\r\n                    this.rectAreaLightHelper = new RectAreaLightHelper(this.rectAreaLight!);\r\n                        this.scene!.add(this.rectAreaLightHelper);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('[RectAreaLightScript] 创建矩形区域光失败:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建标签\r\n     */\r\n    private createLabel(): void {\r\n        try {\r\n            if (this.rectAreaLight && this.scene) {\r\n                // 创建标签元素\r\n                this.labelElement = document.createElement('div');\r\n                this.labelElement.className = 'rect-area-light-label';\r\n\r\n                // 创建图标元素\r\n                const iconElement = document.createElement('img');\r\n                iconElement.className = 'rect-area-light-icon';\r\n                iconElement.style.marginRight = '6px'; // 减小右边距\r\n                iconElement.style.width = '18px'; // 稍微减小图片尺寸\r\n                iconElement.style.height = '18px'; // 稍微减小图片尺寸\r\n                iconElement.style.objectFit = 'contain';\r\n\r\n                // 创建文本元素\r\n                const textElement = document.createElement('span');\r\n                textElement.className = 'rect-area-light-text';\r\n                textElement.textContent = this.config.labelContent || '矩形区域光';\r\n\r\n                // 将图标和文本添加到标签元素中\r\n                this.labelElement.appendChild(iconElement);\r\n                this.labelElement.appendChild(textElement);\r\n\r\n                // 设置标签整体样式 - LiquidGlass效果，减小内边距使标签更紧凑\r\n                this.labelElement.style.display = 'flex';\r\n                this.labelElement.style.alignItems = 'center';\r\n                this.labelElement.style.padding = '6px 10px'; // 显著减小内边距\r\n                this.labelElement.style.background = 'rgba(255, 255, 255, 0.05)';\r\n                this.labelElement.style.color = '#ffffff';\r\n                this.labelElement.style.borderRadius = '10px'; // 稍稍微减小圆角\r\n                this.labelElement.style.fontSize = '12px'; // 保持较小字体\r\n                this.labelElement.style.fontFamily = 'Arial, \"Microsoft YaHei\", sans-serif';\r\n                this.labelElement.style.fontWeight = '500';\r\n                this.labelElement.style.whiteSpace = 'nowrap';\r\n                this.labelElement.style.userSelect = 'none';\r\n                this.labelElement.style.border = '1px solid rgba(255, 255, 255, 0.1)';\r\n                this.labelElement.style.boxShadow = `\r\n                    0 4px 30px rgba(0, 0, 0, 0.1),\r\n                    inset 0 0 10px rgba(255, 255, 255, 0.1)\r\n                `;\r\n                this.labelElement.style.backdropFilter = 'blur(10px)';\r\n                // 使用类型断言来设置Safari兼容的backdrop-filter\r\n                (this.labelElement.style as any).webkitBackdropFilter = 'blur(10px)';\r\n                this.labelElement.style.pointerEvents = this.config.clickableLabels ? 'auto' : 'none';\r\n                this.labelElement.style.zIndex = '1000';\r\n                this.labelElement.style.cursor = this.config.clickableLabels ? 'pointer' : 'default';\r\n                this.labelElement.style.position = 'relative';\r\n                this.labelElement.style.overflow = 'hidden';\r\n                this.labelElement.style.transition = 'all 0.1s ease';\r\n                this.labelElement.style.opacity = '1'; // 添加初始opacity值\r\n\r\n                // 添加LiquidGlass效果的before伪元素样式\r\n                const beforeElement = document.createElement('div');\r\n                beforeElement.style.position = 'absolute';\r\n                beforeElement.style.top = '0';\r\n                beforeElement.style.left = '0';\r\n                beforeElement.style.right = '0';\r\n                beforeElement.style.bottom = '0';\r\n                beforeElement.style.background = 'linear-gradient(45deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.01))';\r\n                beforeElement.style.borderRadius = '10px';\r\n                beforeElement.style.zIndex = '-1';\r\n                beforeElement.style.pointerEvents = 'none';\r\n                this.labelElement.appendChild(beforeElement);\r\n\r\n                // 添加LiquidGlass效果的after伪元素样式\r\n                const afterElement = document.createElement('div');\r\n                afterElement.style.position = 'absolute';\r\n                afterElement.style.top = '0';\r\n                afterElement.style.left = '0';\r\n                afterElement.style.right = '0';\r\n                afterElement.style.bottom = '0';\r\n                afterElement.style.background = 'radial-gradient(circle at center, rgba(255, 255, 255, 0.2) 0%, transparent 70%)';\r\n                afterElement.style.borderRadius = '10px';\r\n                afterElement.style.zIndex = '-1';\r\n                afterElement.style.pointerEvents = 'none';\r\n                this.labelElement.appendChild(afterElement);\r\n\r\n                // 添加点击事件\r\n                if (this.config.clickableLabels) {\r\n                    // 添加点击事件\r\n                    this.labelElement.addEventListener('click', (event) => {\r\n                        event.stopPropagation();\r\n                        this.toggleLight();\r\n                    });\r\n                }\r\n\r\n                // 创建CSS2DObject\r\n                this.label = new CSS2DObject(this.labelElement);\r\n                this.label.position.copy(this.rectAreaLight.position);\r\n\r\n                // 将标签添加到场景中\r\n                this.scene.add(this.label);\r\n\r\n                // 初始化图标状态\r\n                this.updateLabelIcon();\r\n            }\r\n        } catch (error) {\r\n            console.error('[RectAreaLightScript] 创建标签失败:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新矩形区域光配置\r\n     */\r\n    public updateConfig(newConfig: Partial<RectAreaLightConfig>): void {\r\n        if (!this.rectAreaLight) return;\r\n\r\n        if (newConfig.color !== undefined) {\r\n            this.rectAreaLight.color.set(newConfig.color);\r\n        }\r\n\r\n        if (newConfig.intensity !== undefined) {\r\n            this.rectAreaLight.intensity = newConfig.intensity;\r\n        }\r\n\r\n        if (newConfig.width !== undefined) {\r\n            this.rectAreaLight.width = newConfig.width;\r\n        }\r\n\r\n        if (newConfig.height !== undefined) {\r\n            this.rectAreaLight.height = newConfig.height;\r\n        }\r\n\r\n        if (newConfig.position !== undefined) {\r\n            this.rectAreaLight.position.set(\r\n                newConfig.position[0],\r\n                newConfig.position[1],\r\n                newConfig.position[2]\r\n            );\r\n            // 更新标签位置\r\n            if (this.label) {\r\n                this.label.position.copy(this.rectAreaLight.position);\r\n            }\r\n        }\r\n\r\n        if (newConfig.rotation !== undefined) {\r\n            this.rectAreaLight.rotation.set(\r\n                newConfig.rotation[0],\r\n                newConfig.rotation[1],\r\n                newConfig.rotation[2]\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置标签内容\r\n     */\r\n    public setLabelContent(content: string): void {\r\n        this.config.labelContent = content;\r\n        if (this.labelElement) {\r\n            this.labelElement.textContent = content;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示/隐藏标签\r\n     */\r\n    public setShowLabels(show: boolean): void {\r\n        this.config.showLabels = show;\r\n        if (this.label && this.labelElement) {\r\n            // 确保过渡效果的一致性\r\n            this.labelElement.style.transition = 'opacity 0.3s ease-in-out';\r\n\r\n            if (show) {\r\n                // 渐显效果\r\n                this.label.visible = true;\r\n                // 强制重绘后触发动画\r\n                requestAnimationFrame(() => {\r\n                    this.labelElement!.style.opacity = '1';\r\n                });\r\n            } else {\r\n                // 渐隐效果\r\n                this.labelElement.style.opacity = '0';\r\n\r\n                // 延迟隐藏标签，等动画完成\r\n                setTimeout(() => {\r\n                    if (this.label) {\r\n                        this.label.visible = false;\r\n                    }\r\n                }, 300);\r\n            }\r\n        } else if (this.label) {\r\n            // 如果没有labelElement，直接设置visible属性\r\n            this.label.visible = show;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置标签是否可点击\r\n     */\r\n    public setClickableLabels(clickable: boolean): void {\r\n        this.config.clickableLabels = clickable;\r\n        if (this.labelElement) {\r\n            this.labelElement.style.pointerEvents = clickable ? 'auto' : 'none';\r\n            this.labelElement.style.cursor = clickable ? 'pointer' : 'default';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取矩形区域光对象\r\n     */\r\n    public getRectAreaLight(): THREE.RectAreaLight | null {\r\n        return this.rectAreaLight;\r\n    }\r\n\r\n    /**\r\n     * 获取矩形区域光辅助器对象\r\n     */\r\n    public getRectAreaLightHelper(): any | null {\r\n        return this.rectAreaLightHelper;\r\n    }\r\n\r\n    /**\r\n     * 启用或禁用矩形区域光\r\n     */\r\n    public setEnabled(enabled: boolean): void {\r\n        if (enabled && !this.rectAreaLight) {\r\n            this.createRectAreaLight();\r\n        } else if (!enabled && this.rectAreaLight) {\r\n            if (this.scene) {\r\n                this.scene.remove(this.rectAreaLight);\r\n                if (this.rectAreaLightHelper) {\r\n                    this.scene.remove(this.rectAreaLightHelper);\r\n                    this.rectAreaLightHelper = null;\r\n                }\r\n                if (this.label) {\r\n                    this.scene.remove(this.label);\r\n                    this.label = null;\r\n                    this.labelElement = null;\r\n                }\r\n            }\r\n            this.rectAreaLight = null;\r\n        }\r\n\r\n        // 更新灯光状态\r\n        this.isLightEnabled = enabled;\r\n        this.updateLabelStyle();\r\n    }\r\n\r\n    /**\r\n     * 切换灯光开关\r\n     */\r\n    public toggleLight(): void {\r\n        this.isLightEnabled = !this.isLightEnabled;\r\n\r\n        // 控制矩形区域光\r\n        if (this.rectAreaLight) {\r\n            this.rectAreaLight.visible = this.isLightEnabled;\r\n            this.rectAreaLight.intensity = this.isLightEnabled ? this.config.intensity : 0;\r\n        }\r\n\r\n        // 控制辅助器\r\n        if (this.rectAreaLightHelper) {\r\n            this.rectAreaLightHelper.visible = this.isLightEnabled;\r\n        }\r\n\r\n        // 更新标签样式\r\n        this.updateLabelStyle();\r\n\r\n        console.log(`[RectAreaLightScript] 矩形区域光已${this.isLightEnabled ? '开启' : '关闭'}`);\r\n    }\r\n\r\n    /**\r\n     * 开灯\r\n     */\r\n    public turnOn(): void {\r\n        if (!this.isLightEnabled) {\r\n            this.toggleLight();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关灯\r\n     */\r\n    public turnOff(): void {\r\n        if (this.isLightEnabled) {\r\n            this.toggleLight();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检查灯光是否开启\r\n     */\r\n    public isLightOn(): boolean {\r\n        return this.isLightEnabled;\r\n    }\r\n\r\n    /**\r\n     * 更新标签样式以反映灯光状态\r\n     */\r\n    private updateLabelStyle(): void {\r\n        if (this.labelElement) {\r\n            // 根据灯光状态更新背景色 - LiquidGlass效果\r\n            if (this.isLightEnabled) {\r\n                this.labelElement.style.background = 'rgba(255, 255, 255, 0.08)';\r\n                this.labelElement.style.border = '1px solid rgba(255, 255, 255, 0.15)';\r\n                this.labelElement.style.boxShadow = `\r\n                    0 4px 30px rgba(0, 0, 0, 0.1),\r\n                    inset 0 0 10px rgba(255, 255, 255, 0.1)\r\n                `;\r\n            } else {\r\n                this.labelElement.style.background = 'rgba(100, 100, 100, 0.08)';\r\n                this.labelElement.style.border = '1px solid rgba(150, 150, 150, 0.15)';\r\n                this.labelElement.style.boxShadow = `\r\n                    0 4px 30px rgba(0, 0, 0, 0.1),\r\n                    inset 0 0 10px rgba(150, 150, 150, 0.1)\r\n                `;\r\n            }\r\n\r\n            // 更新图标\r\n            this.updateLabelIcon();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新标签图标以反映灯光状态\r\n     */\r\n    private updateLabelIcon(): void {\r\n        if (this.labelElement) {\r\n            const iconElement = this.labelElement.querySelector('.rect-area-light-icon') as HTMLImageElement;\r\n            if (iconElement) {\r\n                // 根据灯光状态设置图标图片，使用LightControl.tsx中的图片\r\n                if (this.isLightEnabled) {\r\n                    // 使用开启状态的图片\r\n                    iconElement.src = 'https://lanhu-oss-2537-2.lanhuapp.com/FigmaDDSSlicePNG242ac23827c6159d8038b7d4dbbc8937.png';\r\n                } else {\r\n                    // 使用关闭状态的图片（如果需要不同的图片）\r\n                    // 如果没有专门的关闭图片，可以使用相同的图片或者添加透明度效果\r\n                    iconElement.src = 'https://lanhu-oss-2537-2.lanhuapp.com/FigmaDDSSlicePNG242ac23827c6159d8038b7d4dbbc8937.png';\r\n                    // 可以添加透明度效果来表示关闭状态\r\n                    iconElement.style.opacity = '1';\r\n                }\r\n\r\n                // 如果开/关状态使用相同的图片，通过透明度区分\r\n                if (this.isLightEnabled) {\r\n                    iconElement.style.opacity = '1';\r\n                } else {\r\n                    iconElement.style.opacity = '0.5';\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 脚本销毁时调用\r\n     */\r\n    public override destroy(): void {\r\n        super.destroy?.();\r\n\r\n        // 清理矩形区域光\r\n        if (this.rectAreaLight && this.scene) {\r\n            this.scene.remove(this.rectAreaLight);\r\n        }\r\n\r\n        // 清理矩形区域光辅助器\r\n        if (this.rectAreaLightHelper && this.scene) {\r\n            this.scene.remove(this.rectAreaLightHelper);\r\n        }\r\n\r\n        // 清理标签\r\n        if (this.label && this.scene) {\r\n            this.scene.remove(this.label);\r\n        }\r\n\r\n        this.rectAreaLight = null;\r\n        this.rectAreaLightHelper = null;\r\n        this.label = null;\r\n        this.labelElement = null;\r\n    }\r\n}\r\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tInstancedBufferAttribute,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tTrianglesDrawMode,\n\tVector3,\n} from 'three';\n\n/**\n * @module BufferGeometryUtils\n * @three_import import * as BufferGeometryUtils from 'three/addons/utils/BufferGeometryUtils.js';\n */\n\n/**\n * Computes vertex tangents using the MikkTSpace algorithm. MikkTSpace generates the same tangents consistently,\n * and is used in most modelling tools and normal map bakers. Use MikkTSpace for materials with normal maps,\n * because inconsistent tangents may lead to subtle visual issues in the normal map, particularly around mirrored\n * UV seams.\n *\n * In comparison to this method, {@link BufferGeometry#computeTangents} (a custom algorithm) generates tangents that\n * probably will not match the tangents in other software. The custom algorithm is sufficient for general use with a\n * custom material, and may be faster than MikkTSpace.\n *\n * Returns the original BufferGeometry. Indexed geometries will be de-indexed. Requires position, normal, and uv attributes.\n *\n * @param {BufferGeometry} geometry - The geometry to compute tangents for.\n * @param {Object} MikkTSpace - Instance of `examples/jsm/libs/mikktspace.module.js`, or `mikktspace` npm package.\n * Await `MikkTSpace.ready` before use.\n * @param {boolean} [negateSign=true] - Whether to negate the sign component (.w) of each tangent.\n * Required for normal map conventions in some formats, including glTF.\n * @return {BufferGeometry} The updated geometry.\n */\nfunction computeMikkTSpaceTangents( geometry, MikkTSpace, negateSign = true ) {\n\n\tif ( ! MikkTSpace || ! MikkTSpace.isReady ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Initialized MikkTSpace library required.' );\n\n\t}\n\n\tif ( ! geometry.hasAttribute( 'position' ) || ! geometry.hasAttribute( 'normal' ) || ! geometry.hasAttribute( 'uv' ) ) {\n\n\t\tthrow new Error( 'BufferGeometryUtils: Tangents require \"position\", \"normal\", and \"uv\" attributes.' );\n\n\t}\n\n\tfunction getAttributeArray( attribute ) {\n\n\t\tif ( attribute.normalized || attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst dstArray = new Float32Array( attribute.count * attribute.itemSize );\n\n\t\t\tfor ( let i = 0, j = 0; i < attribute.count; i ++ ) {\n\n\t\t\t\tdstArray[ j ++ ] = attribute.getX( i );\n\t\t\t\tdstArray[ j ++ ] = attribute.getY( i );\n\n\t\t\t\tif ( attribute.itemSize > 2 ) {\n\n\t\t\t\t\tdstArray[ j ++ ] = attribute.getZ( i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t\tif ( attribute.array instanceof Float32Array ) {\n\n\t\t\treturn attribute.array;\n\n\t\t}\n\n\t\treturn new Float32Array( attribute.array );\n\n\t}\n\n\t// MikkTSpace algorithm requires non-indexed input.\n\n\tconst _geometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\n\t// Compute vertex tangents.\n\n\tconst tangents = MikkTSpace.generateTangents(\n\n\t\tgetAttributeArray( _geometry.attributes.position ),\n\t\tgetAttributeArray( _geometry.attributes.normal ),\n\t\tgetAttributeArray( _geometry.attributes.uv )\n\n\t);\n\n\t// Texture coordinate convention of glTF differs from the apparent\n\t// default of the MikkTSpace library; .w component must be flipped.\n\n\tif ( negateSign ) {\n\n\t\tfor ( let i = 3; i < tangents.length; i += 4 ) {\n\n\t\t\ttangents[ i ] *= - 1;\n\n\t\t}\n\n\t}\n\n\t//\n\n\t_geometry.setAttribute( 'tangent', new BufferAttribute( tangents, 4 ) );\n\n\tif ( geometry !== _geometry ) {\n\n\t\tgeometry.copy( _geometry );\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * Merges a set of geometries into a single instance. All geometries must have compatible attributes.\n *\n * @param {Array<BufferGeometry>} geometries - The geometries to merge.\n * @param {boolean} [useGroups=false] - Whether to use groups or not.\n * @return {?BufferGeometry} The merged geometry. Returns `null` if the merge does not succeed.\n */\nfunction mergeGeometries( geometries, useGroups = false ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\n\n\tconst attributes = {};\n\tconst morphAttributes = {};\n\n\tconst morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\n\n\tconst mergedGeometry = new BufferGeometry();\n\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// gather morph attributes, exit early if they're different\n\n\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tif ( ! morphAttributesUsed.has( name ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\n\n\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.addGroup( offset, count, i );\n\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\n\tif ( isIndexed ) {\n\n\t\tlet indexOffset = 0;\n\t\tconst mergedIndex = [];\n\n\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\tconst index = geometries[ i ].index;\n\n\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\n\n\t\t\t}\n\n\t\t\tindexOffset += geometries[ i ].attributes.position.count;\n\n\t\t}\n\n\t\tmergedGeometry.setIndex( mergedIndex );\n\n\t}\n\n\t// merge attributes\n\n\tfor ( const name in attributes ) {\n\n\t\tconst mergedAttribute = mergeAttributes( attributes[ name ] );\n\n\t\tif ( ! mergedAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' attribute.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tmergedGeometry.setAttribute( name, mergedAttribute );\n\n\t}\n\n\t// merge morph attributes\n\n\tfor ( const name in morphAttributes ) {\n\n\t\tconst numMorphTargets = morphAttributes[ name ][ 0 ].length;\n\n\t\tif ( numMorphTargets === 0 ) break;\n\n\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\n\t\tmergedGeometry.morphAttributes[ name ] = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; ++ i ) {\n\n\t\t\tconst morphAttributesToMerge = [];\n\n\t\t\tfor ( let j = 0; j < morphAttributes[ name ].length; ++ j ) {\n\n\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\n\n\t\t\t}\n\n\t\t\tconst mergedMorphAttribute = mergeAttributes( morphAttributesToMerge );\n\n\t\t\tif ( ! mergedMorphAttribute ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeGeometries() failed while trying to merge the ' + name + ' morphAttribute.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\n\n\t\t}\n\n\t}\n\n\treturn mergedGeometry;\n\n}\n\n/**\n * Merges a set of attributes into a single instance. All attributes must have compatible properties and types.\n * Instances of {@link InterleavedBufferAttribute} are not supported.\n *\n * @param {Array<BufferAttribute>} attributes - The attributes to merge.\n * @return {?BufferAttribute} The merged attribute. Returns `null` if the merge does not succeed.\n */\nfunction mergeAttributes( attributes ) {\n\n\tlet TypedArray;\n\tlet itemSize;\n\tlet normalized;\n\tlet gpuType = - 1;\n\tlet arrayLength = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\n\t\tif ( itemSize !== attribute.itemSize ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( normalized === undefined ) normalized = attribute.normalized;\n\t\tif ( normalized !== attribute.normalized ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tif ( gpuType === - 1 ) gpuType = attribute.gpuType;\n\t\tif ( gpuType !== attribute.gpuType ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeAttributes() failed. BufferAttribute.gpuType must be consistent across matching attributes.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.count * itemSize;\n\n\t}\n\n\tconst array = new TypedArray( arrayLength );\n\tconst result = new BufferAttribute( array, itemSize, normalized );\n\tlet offset = 0;\n\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tconst tupleOffset = offset / itemSize;\n\t\t\tfor ( let j = 0, l = attribute.count; j < l; j ++ ) {\n\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tconst value = attribute.getComponent( j, c );\n\t\t\t\t\tresult.setComponent( j + tupleOffset, c, value );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tarray.set( attribute.array, offset );\n\n\t\t}\n\n\t\toffset += attribute.count * itemSize;\n\n\t}\n\n\tif ( gpuType !== undefined ) {\n\n\t\tresult.gpuType = gpuType;\n\n\t}\n\n\treturn result;\n\n}\n\n/**\n * Performs a deep clone of the given buffer attribute.\n *\n * @param {BufferAttribute} attribute - The attribute to clone.\n * @return {BufferAttribute} The cloned attribute.\n */\nfunction deepCloneAttribute( attribute ) {\n\n\tif ( attribute.isInstancedInterleavedBufferAttribute || attribute.isInterleavedBufferAttribute ) {\n\n\t\treturn deinterleaveAttribute( attribute );\n\n\t}\n\n\tif ( attribute.isInstancedBufferAttribute ) {\n\n\t\treturn new InstancedBufferAttribute().copy( attribute );\n\n\t}\n\n\treturn new BufferAttribute().copy( attribute );\n\n}\n\n/**\n * Interleaves a set of attributes and returns a new array of corresponding attributes that share a\n * single {@link InterleavedBuffer} instance. All attributes must have compatible types.\n *\n * @param {Array<BufferAttribute>} attributes - The attributes to interleave.\n * @return {Array<InterleavedBufferAttribute>} An array of interleaved attributes. If interleave does not succeed, the method returns `null`.\n */\nfunction interleaveAttributes( attributes ) {\n\n\t// Interleaves the provided attributes into an InterleavedBuffer and returns\n\t// a set of InterleavedBufferAttributes for each attribute\n\tlet TypedArray;\n\tlet arrayLength = 0;\n\tlet stride = 0;\n\n\t// calculate the length and type of the interleavedBuffer\n\tfor ( let i = 0, l = attributes.length; i < l; ++ i ) {\n\n\t\tconst attribute = attributes[ i ];\n\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\n\t\tif ( TypedArray !== attribute.array.constructor ) {\n\n\t\t\tconsole.error( 'AttributeBuffers of different types cannot be interleaved' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tarrayLength += attribute.array.length;\n\t\tstride += attribute.itemSize;\n\n\t}\n\n\t// Create the set of buffer attributes\n\tconst interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\n\tlet offset = 0;\n\tconst res = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\tfor ( let j = 0, l = attributes.length; j < l; j ++ ) {\n\n\t\tconst attribute = attributes[ j ];\n\t\tconst itemSize = attribute.itemSize;\n\t\tconst count = attribute.count;\n\t\tconst iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\n\t\tres.push( iba );\n\n\t\toffset += itemSize;\n\n\t\t// Move the data for each attribute into the new interleavedBuffer\n\t\t// at the appropriate offset\n\t\tfor ( let c = 0; c < count; c ++ ) {\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\n/**\n * Returns a new, non-interleaved version of the given attribute.\n *\n * @param {InterleavedBufferAttribute} attribute - The interleaved attribute.\n * @return {BufferAttribute} The non-interleaved attribute.\n */\nfunction deinterleaveAttribute( attribute ) {\n\n\tconst cons = attribute.data.array.constructor;\n\tconst count = attribute.count;\n\tconst itemSize = attribute.itemSize;\n\tconst normalized = attribute.normalized;\n\n\tconst array = new cons( count * itemSize );\n\tlet newAttribute;\n\tif ( attribute.isInstancedInterleavedBufferAttribute ) {\n\n\t\tnewAttribute = new InstancedBufferAttribute( array, itemSize, normalized, attribute.meshPerAttribute );\n\n\t} else {\n\n\t\tnewAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t}\n\n\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\tnewAttribute.setX( i, attribute.getX( i ) );\n\n\t\tif ( itemSize >= 2 ) {\n\n\t\t\tnewAttribute.setY( i, attribute.getY( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 3 ) {\n\n\t\t\tnewAttribute.setZ( i, attribute.getZ( i ) );\n\n\t\t}\n\n\t\tif ( itemSize >= 4 ) {\n\n\t\t\tnewAttribute.setW( i, attribute.getW( i ) );\n\n\t\t}\n\n\t}\n\n\treturn newAttribute;\n\n}\n\n/**\n * Deinterleaves all attributes on the given geometry.\n *\n * @param {BufferGeometry} geometry - The geometry to deinterleave.\n */\nfunction deinterleaveGeometry( geometry ) {\n\n\tconst attributes = geometry.attributes;\n\tconst morphTargets = geometry.morphTargets;\n\tconst attrMap = new Map();\n\n\tfor ( const key in attributes ) {\n\n\t\tconst attr = attributes[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tattributes[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n\tfor ( const key in morphTargets ) {\n\n\t\tconst attr = morphTargets[ key ];\n\t\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\t\tif ( ! attrMap.has( attr ) ) {\n\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\n\n\t\t\t}\n\n\t\t\tmorphTargets[ key ] = attrMap.get( attr );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Returns the amount of bytes used by all attributes to represent the geometry.\n *\n * @param {BufferGeometry} geometry - The geometry.\n * @return {number} The estimate bytes used.\n */\nfunction estimateBytesUsed( geometry ) {\n\n\t// Return the estimated memory used by this geometry in bytes\n\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n\t// for InterleavedBufferAttributes.\n\tlet mem = 0;\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst attr = geometry.getAttribute( name );\n\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\n\n\t}\n\n\tconst indices = geometry.getIndex();\n\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\n\treturn mem;\n\n}\n\n/**\n * Returns a new geometry with vertices for which all similar vertex attributes (within tolerance) are merged.\n *\n * @param {BufferGeometry} geometry - The geometry to merge vertices for.\n * @param {number} [tolerance=1e-4] - The tolerance value.\n * @return {BufferGeometry} - The new geometry with merged vertices.\n */\nfunction mergeVertices( geometry, tolerance = 1e-4 ) {\n\n\ttolerance = Math.max( tolerance, Number.EPSILON );\n\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\n\t// if it's already available.\n\tconst hashToIndex = {};\n\tconst indices = geometry.getIndex();\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst vertexCount = indices ? indices.count : positions.count;\n\n\t// next value for triangle indices\n\tlet nextIndex = 0;\n\n\t// attributes and new attribute arrays\n\tconst attributeNames = Object.keys( geometry.attributes );\n\tconst tmpAttributes = {};\n\tconst tmpMorphAttributes = {};\n\tconst newIndices = [];\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\n\n\t// Initialize the arrays, allocating space conservatively. Extra\n\t// space will be trimmed in the last step.\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\n\n\t\tconst name = attributeNames[ i ];\n\t\tconst attr = geometry.attributes[ name ];\n\n\t\ttmpAttributes[ name ] = new attr.constructor(\n\t\t\tnew attr.array.constructor( attr.count * attr.itemSize ),\n\t\t\tattr.itemSize,\n\t\t\tattr.normalized\n\t\t);\n\n\t\tconst morphAttributes = geometry.morphAttributes[ name ];\n\t\tif ( morphAttributes ) {\n\n\t\t\tif ( ! tmpMorphAttributes[ name ] ) tmpMorphAttributes[ name ] = [];\n\t\t\tmorphAttributes.forEach( ( morphAttr, i ) => {\n\n\t\t\t\tconst array = new morphAttr.array.constructor( morphAttr.count * morphAttr.itemSize );\n\t\t\t\ttmpMorphAttributes[ name ][ i ] = new morphAttr.constructor( array, morphAttr.itemSize, morphAttr.normalized );\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t// convert the error tolerance to an amount of decimal places to truncate to\n\tconst halfTolerance = tolerance * 0.5;\n\tconst exponent = Math.log10( 1 / tolerance );\n\tconst hashMultiplier = Math.pow( 10, exponent );\n\tconst hashAdditive = halfTolerance * hashMultiplier;\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\tconst index = indices ? indices.getX( i ) : i;\n\n\t\t// Generate a hash for the vertex attributes at the current index 'i'\n\t\tlet hash = '';\n\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\tconst name = attributeNames[ j ];\n\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\tconst itemSize = attribute.itemSize;\n\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t// double tilde truncates the decimal value\n\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * hashMultiplier + hashAdditive ) },`;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add another reference to the vertex if it's already\n\t\t// used by another index\n\t\tif ( hash in hashToIndex ) {\n\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\n\n\t\t} else {\n\n\t\t\t// copy data to the new index in the temporary attributes\n\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\n\n\t\t\t\tconst name = attributeNames[ j ];\n\t\t\t\tconst attribute = geometry.getAttribute( name );\n\t\t\t\tconst morphAttributes = geometry.morphAttributes[ name ];\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst newArray = tmpAttributes[ name ];\n\t\t\t\tconst newMorphArrays = tmpMorphAttributes[ name ];\n\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\n\n\t\t\t\t\tconst getterFunc = getters[ k ];\n\t\t\t\t\tconst setterFunc = setters[ k ];\n\t\t\t\t\tnewArray[ setterFunc ]( nextIndex, attribute[ getterFunc ]( index ) );\n\n\t\t\t\t\tif ( morphAttributes ) {\n\n\t\t\t\t\t\tfor ( let m = 0, ml = morphAttributes.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tnewMorphArrays[ m ][ setterFunc ]( nextIndex, morphAttributes[ m ][ getterFunc ]( index ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\thashToIndex[ hash ] = nextIndex;\n\t\t\tnewIndices.push( nextIndex );\n\t\t\tnextIndex ++;\n\n\t\t}\n\n\t}\n\n\t// generate result BufferGeometry\n\tconst result = geometry.clone();\n\tfor ( const name in geometry.attributes ) {\n\n\t\tconst tmpAttribute = tmpAttributes[ name ];\n\n\t\tresult.setAttribute( name, new tmpAttribute.constructor(\n\t\t\ttmpAttribute.array.slice( 0, nextIndex * tmpAttribute.itemSize ),\n\t\t\ttmpAttribute.itemSize,\n\t\t\ttmpAttribute.normalized,\n\t\t) );\n\n\t\tif ( ! ( name in tmpMorphAttributes ) ) continue;\n\n\t\tfor ( let j = 0; j < tmpMorphAttributes[ name ].length; j ++ ) {\n\n\t\t\tconst tmpMorphAttribute = tmpMorphAttributes[ name ][ j ];\n\n\t\t\tresult.morphAttributes[ name ][ j ] = new tmpMorphAttribute.constructor(\n\t\t\t\ttmpMorphAttribute.array.slice( 0, nextIndex * tmpMorphAttribute.itemSize ),\n\t\t\t\ttmpMorphAttribute.itemSize,\n\t\t\t\ttmpMorphAttribute.normalized,\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tresult.setIndex( newIndices );\n\n\treturn result;\n\n}\n\n/**\n * Returns a new indexed geometry based on `TrianglesDrawMode` draw mode.\n * This mode corresponds to the `gl.TRIANGLES` primitive in WebGL.\n *\n * @param {BufferGeometry} geometry - The geometry to convert.\n * @param {number} drawMode - The current draw mode.\n * @return {BufferGeometry} The new geometry using `TrianglesDrawMode`.\n */\nfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\tif ( drawMode === TrianglesDrawMode ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\n\t\treturn geometry;\n\n\t}\n\n\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\n\n\t\tlet index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tconst indices = [];\n\n\t\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( let i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst numberOfTriangles = index.count - 2;\n\t\tconst newIndices = [];\n\n\t\tif ( drawMode === TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( let i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( let i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tconst newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\t\tnewGeometry.clearGroups();\n\n\t\treturn newGeometry;\n\n\t} else {\n\n\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\n\t\treturn geometry;\n\n\t}\n\n}\n\n/**\n * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\n *\n * Helpful for Raytracing or Decals (i.e. a `DecalGeometry` applied to a morphed Object with a `BufferGeometry`\n * will use the original `BufferGeometry`, not the morphed/skinned one, generating an incorrect result.\n * Using this function to create a shadow `Object3`D the `DecalGeometry` can be correctly generated).\n *\n * @param {Mesh|Line|Points} object - The 3D object to compute morph attributes for.\n * @return {Object} An object with original position/normal attributes and morphed ones.\n */\nfunction computeMorphedAttributes( object ) {\n\n\tconst _vA = new Vector3();\n\tconst _vB = new Vector3();\n\tconst _vC = new Vector3();\n\n\tconst _tempA = new Vector3();\n\tconst _tempB = new Vector3();\n\tconst _tempC = new Vector3();\n\n\tconst _morphA = new Vector3();\n\tconst _morphB = new Vector3();\n\tconst _morphC = new Vector3();\n\n\tfunction _calculateMorphedAttributeData(\n\t\tobject,\n\t\tattribute,\n\t\tmorphAttribute,\n\t\tmorphTargetsRelative,\n\t\ta,\n\t\tb,\n\t\tc,\n\t\tmodifiedAttributeArray\n\t) {\n\n\t\t_vA.fromBufferAttribute( attribute, a );\n\t\t_vB.fromBufferAttribute( attribute, b );\n\t\t_vC.fromBufferAttribute( attribute, c );\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( morphAttribute && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morph = morphAttribute[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morph, a );\n\t\t\t\t_tempB.fromBufferAttribute( morph, b );\n\t\t\t\t_tempC.fromBufferAttribute( morph, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tobject.applyBoneTransform( a, _vA );\n\t\t\tobject.applyBoneTransform( b, _vB );\n\t\t\tobject.applyBoneTransform( c, _vC );\n\n\t\t}\n\n\t\tmodifiedAttributeArray[ a * 3 + 0 ] = _vA.x;\n\t\tmodifiedAttributeArray[ a * 3 + 1 ] = _vA.y;\n\t\tmodifiedAttributeArray[ a * 3 + 2 ] = _vA.z;\n\t\tmodifiedAttributeArray[ b * 3 + 0 ] = _vB.x;\n\t\tmodifiedAttributeArray[ b * 3 + 1 ] = _vB.y;\n\t\tmodifiedAttributeArray[ b * 3 + 2 ] = _vB.z;\n\t\tmodifiedAttributeArray[ c * 3 + 0 ] = _vC.x;\n\t\tmodifiedAttributeArray[ c * 3 + 1 ] = _vC.y;\n\t\tmodifiedAttributeArray[ c * 3 + 2 ] = _vC.z;\n\n\t}\n\n\tconst geometry = object.geometry;\n\tconst material = object.material;\n\n\tlet a, b, c;\n\tconst index = geometry.index;\n\tconst positionAttribute = geometry.attributes.position;\n\tconst morphPosition = geometry.morphAttributes.position;\n\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\tconst normalAttribute = geometry.attributes.normal;\n\tconst morphNormal = geometry.morphAttributes.position;\n\n\tconst groups = geometry.groups;\n\tconst drawRange = geometry.drawRange;\n\tlet i, j, il, jl;\n\tlet group;\n\tlet start, end;\n\n\tconst modifiedPosition = new Float32Array( positionAttribute.count * positionAttribute.itemSize );\n\tconst modifiedNormal = new Float32Array( normalAttribute.count * normalAttribute.itemSize );\n\n\tif ( index !== null ) {\n\n\t\t// indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = index.getX( i );\n\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// non-indexed buffer geometry\n\n\t\tif ( Array.isArray( material ) ) {\n\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\tgroup = groups[ i ];\n\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\ta = j;\n\t\t\t\t\tb = j + 1;\n\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tpositionAttribute,\n\t\t\t\t\t\tmorphPosition,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedPosition\n\t\t\t\t\t);\n\n\t\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\t\tobject,\n\t\t\t\t\t\tnormalAttribute,\n\t\t\t\t\t\tmorphNormal,\n\t\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\t\ta, b, c,\n\t\t\t\t\t\tmodifiedNormal\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\tend = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\ta = i;\n\t\t\t\tb = i + 1;\n\t\t\t\tc = i + 2;\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tpositionAttribute,\n\t\t\t\t\tmorphPosition,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedPosition\n\t\t\t\t);\n\n\t\t\t\t_calculateMorphedAttributeData(\n\t\t\t\t\tobject,\n\t\t\t\t\tnormalAttribute,\n\t\t\t\t\tmorphNormal,\n\t\t\t\t\tmorphTargetsRelative,\n\t\t\t\t\ta, b, c,\n\t\t\t\t\tmodifiedNormal\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tconst morphedPositionAttribute = new Float32BufferAttribute( modifiedPosition, 3 );\n\tconst morphedNormalAttribute = new Float32BufferAttribute( modifiedNormal, 3 );\n\n\treturn {\n\n\t\tpositionAttribute: positionAttribute,\n\t\tnormalAttribute: normalAttribute,\n\t\tmorphedPositionAttribute: morphedPositionAttribute,\n\t\tmorphedNormalAttribute: morphedNormalAttribute\n\n\t};\n\n}\n\n/**\n * Merges the {@link BufferGeometry#groups} for the given geometry.\n *\n * @param {BufferGeometry} geometry - The geometry to modify.\n * @return {BufferGeometry} - The updated geometry\n */\nfunction mergeGroups( geometry ) {\n\n\tif ( geometry.groups.length === 0 ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge.' );\n\t\treturn geometry;\n\n\t}\n\n\tlet groups = geometry.groups;\n\n\t// sort groups by material index\n\n\tgroups = groups.sort( ( a, b ) => {\n\n\t\tif ( a.materialIndex !== b.materialIndex ) return a.materialIndex - b.materialIndex;\n\n\t\treturn a.start - b.start;\n\n\t} );\n\n\t// create index for non-indexed geometries\n\n\tif ( geometry.getIndex() === null ) {\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\t\tconst indices = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i += 3 ) {\n\n\t\t\tindices.push( i, i + 1, i + 2 );\n\n\t\t}\n\n\t\tgeometry.setIndex( indices );\n\n\t}\n\n\t// sort index\n\n\tconst index = geometry.getIndex();\n\n\tconst newIndices = [];\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tconst groupStart = group.start;\n\t\tconst groupLength = groupStart + group.count;\n\n\t\tfor ( let j = groupStart; j < groupLength; j ++ ) {\n\n\t\t\tnewIndices.push( index.getX( j ) );\n\n\t\t}\n\n\t}\n\n\tgeometry.dispose(); // Required to force buffer recreation\n\tgeometry.setIndex( newIndices );\n\n\t// update groups indices\n\n\tlet start = 0;\n\n\tfor ( let i = 0; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tgroup.start = start;\n\t\tstart += group.count;\n\n\t}\n\n\t// merge groups\n\n\tlet currentGroup = groups[ 0 ];\n\n\tgeometry.groups = [ currentGroup ];\n\n\tfor ( let i = 1; i < groups.length; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\n\t\tif ( currentGroup.materialIndex === group.materialIndex ) {\n\n\t\t\tcurrentGroup.count += group.count;\n\n\t\t} else {\n\n\t\t\tcurrentGroup = group;\n\t\t\tgeometry.groups.push( currentGroup );\n\n\t\t}\n\n\t}\n\n\treturn geometry;\n\n}\n\n/**\n * Modifies the supplied geometry if it is non-indexed, otherwise creates a new,\n * non-indexed geometry. Returns the geometry with smooth normals everywhere except\n * faces that meet at an angle greater than the crease angle.\n *\n * @param {BufferGeometry} geometry - The geometry to modify.\n * @param {number} [creaseAngle=Math.PI/3] - The crease angle in radians.\n * @return {BufferGeometry} - The updated geometry\n */\nfunction toCreasedNormals( geometry, creaseAngle = Math.PI / 3 /* 60 degrees */ ) {\n\n\tconst creaseDot = Math.cos( creaseAngle );\n\tconst hashMultiplier = ( 1 + 1e-10 ) * 1e2;\n\n\t// reusable vectors\n\tconst verts = [ new Vector3(), new Vector3(), new Vector3() ];\n\tconst tempVec1 = new Vector3();\n\tconst tempVec2 = new Vector3();\n\tconst tempNorm = new Vector3();\n\tconst tempNorm2 = new Vector3();\n\n\t// hashes a vector\n\tfunction hashVertex( v ) {\n\n\t\tconst x = ~ ~ ( v.x * hashMultiplier );\n\t\tconst y = ~ ~ ( v.y * hashMultiplier );\n\t\tconst z = ~ ~ ( v.z * hashMultiplier );\n\t\treturn `${x},${y},${z}`;\n\n\t}\n\n\t// BufferGeometry.toNonIndexed() warns if the geometry is non-indexed\n\t// and returns the original geometry\n\tconst resultGeometry = geometry.index ? geometry.toNonIndexed() : geometry;\n\tconst posAttr = resultGeometry.attributes.position;\n\tconst vertexMap = {};\n\n\t// find all the normals shared by commonly located vertices\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\t// add the normal to the map for all vertices\n\t\tconst normal = new Vector3().crossVectors( tempVec1, tempVec2 ).normalize();\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tif ( ! ( hash in vertexMap ) ) {\n\n\t\t\t\tvertexMap[ hash ] = [];\n\n\t\t\t}\n\n\t\t\tvertexMap[ hash ].push( normal );\n\n\t\t}\n\n\t}\n\n\t// average normals from all vertices that share a common location if they are within the\n\t// provided crease threshold\n\tconst normalArray = new Float32Array( posAttr.count * 3 );\n\tconst normAttr = new BufferAttribute( normalArray, 3, false );\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\t// get the face normal for this vertex\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\ttempNorm.crossVectors( tempVec1, tempVec2 ).normalize();\n\n\t\t// average all normals that meet the threshold and set the normal value\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tconst otherNormals = vertexMap[ hash ];\n\t\t\ttempNorm2.set( 0, 0, 0 );\n\n\t\t\tfor ( let k = 0, lk = otherNormals.length; k < lk; k ++ ) {\n\n\t\t\t\tconst otherNorm = otherNormals[ k ];\n\t\t\t\tif ( tempNorm.dot( otherNorm ) > creaseDot ) {\n\n\t\t\t\t\ttempNorm2.add( otherNorm );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttempNorm2.normalize();\n\t\t\tnormAttr.setXYZ( i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z );\n\n\t\t}\n\n\t}\n\n\tresultGeometry.setAttribute( 'normal', normAttr );\n\treturn resultGeometry;\n\n}\n\nexport {\n\tcomputeMikkTSpaceTangents,\n\tmergeGeometries,\n\tmergeAttributes,\n\tdeepCloneAttribute,\n\tdeinterleaveAttribute,\n\tdeinterleaveGeometry,\n\tinterleaveAttributes,\n\testimateBytesUsed,\n\tmergeVertices,\n\ttoTrianglesDrawMode,\n\tcomputeMorphedAttributes,\n\tmergeGroups,\n\ttoCreasedNormals\n};\n","import {\n\tAnimationClip,\n\tBone,\n\tBox3,\n\tBufferAttribute,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tColorManagement,\n\tDirectionalLight,\n\tDoubleSide,\n\tFileLoader,\n\tFrontSide,\n\tGroup,\n\tImageBitmapLoader,\n\tInstancedMesh,\n\tInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tInterpolant,\n\tInterpolateDiscrete,\n\tInterpolateLinear,\n\tLine,\n\tLineBasicMaterial,\n\tLineLoop,\n\tLineSegments,\n\tLinearFilter,\n\tLinearMipmapLinearFilter,\n\tLinearMipmapNearestFilter,\n\tLinearSRGBColorSpace,\n\tLoader,\n\tLoaderUtils,\n\tMaterial,\n\tMathUtils,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tMeshPhysicalMaterial,\n\tMeshStandardMaterial,\n\tMirroredRepeatWrapping,\n\tNearestFilter,\n\tNearestMipmapLinearFilter,\n\tNearestMipmapNearestFilter,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPoints,\n\tPointsMaterial,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSphere,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tTriangleFanDrawMode,\n\tTriangleStripDrawMode,\n\tVector2,\n\tVector3,\n\tVectorKeyframeTrack,\n\tSRGBColorSpace,\n\tInstancedBufferAttribute\n} from 'three';\nimport { toTrianglesDrawMode } from '../utils/BufferGeometryUtils.js';\n\n/**\n * A loader for the glTF 2.0 format.\n *\n * [glTF]{@link https://www.khronos.org/gltf/} (GL Transmission Format) is an [open format specification]{@link https://github.com/KhronosGroup/glTF/tree/main/specification/2.0}\n * for efficient delivery and loading of 3D content. Assets may be provided either in JSON (.gltf) or binary (.glb)\n * format. External files store textures (.jpg, .png) and additional binary data (.bin). A glTF asset may deliver\n * one or more scenes, including meshes, materials, textures, skins, skeletons, morph targets, animations, lights,\n * and/or cameras.\n *\n * `GLTFLoader` uses {@link ImageBitmapLoader} whenever possible. Be advised that image bitmaps are not\n * automatically GC-collected when they are no longer referenced, and they require special handling during\n * the disposal process.\n *\n * `GLTFLoader` supports the following glTF 2.0 extensions:\n * - KHR_draco_mesh_compression\n * - KHR_materials_clearcoat\n * - KHR_materials_dispersion\n * - KHR_materials_ior\n * - KHR_materials_specular\n * - KHR_materials_transmission\n * - KHR_materials_iridescence\n * - KHR_materials_unlit\n * - KHR_materials_volume\n * - KHR_mesh_quantization\n * - KHR_lights_punctual\n * - KHR_texture_basisu\n * - KHR_texture_transform\n * - EXT_texture_webp\n * - EXT_meshopt_compression\n * - EXT_mesh_gpu_instancing\n *\n * The following glTF 2.0 extension is supported by an external user plugin:\n * - [KHR_materials_variants]{@link https://github.com/takahirox/three-gltf-extensions}\n * - [MSFT_texture_dds]{@link https://github.com/takahirox/three-gltf-extensions}\n *\n * ```js\n * const loader = new GLTFLoader();\n *\n * // Optional: Provide a DRACOLoader instance to decode compressed mesh data\n * const dracoLoader = new DRACOLoader();\n * dracoLoader.setDecoderPath( '/examples/jsm/libs/draco/' );\n * loader.setDRACOLoader( dracoLoader );\n *\n * const gltf = await loader.loadAsync( 'models/gltf/duck/duck.gltf' );\n * scene.add( gltf.scene );\n * ```\n *\n * @augments Loader\n * @three_import import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\n */\nclass GLTFLoader extends Loader {\n\n\t/**\n\t * Constructs a new glTF loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ktx2Loader = null;\n\t\tthis.meshoptDecoder = null;\n\n\t\tthis.pluginCallbacks = [];\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsClearcoatExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsDispersionExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFTextureBasisUExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFTextureWebPExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFTextureAVIFExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsSheenExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsTransmissionExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsVolumeExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsIorExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsEmissiveStrengthExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsSpecularExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsIridescenceExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsAnisotropyExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMaterialsBumpExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFLightsExtension( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMeshoptCompression( parser );\n\n\t\t} );\n\n\t\tthis.register( function ( parser ) {\n\n\t\t\treturn new GLTFMeshGpuInstancing( parser );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded glTF asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function(GLTFLoader~LoadObject)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet resourcePath;\n\n\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\tresourcePath = this.resourcePath;\n\n\t\t} else if ( this.path !== '' ) {\n\n\t\t\t// If a base path is set, resources will be relative paths from that plus the relative path of the gltf file\n\t\t\t// Example  path = 'https://my-cnd-server.com/', url = 'assets/models/model.gltf'\n\t\t\t// resourcePath = 'https://my-cnd-server.com/assets/models/'\n\t\t\t// referenced resource 'model.bin' will be loaded from 'https://my-cnd-server.com/assets/models/model.bin'\n\t\t\t// referenced resource '../textures/texture.png' will be loaded from 'https://my-cnd-server.com/assets/textures/texture.png'\n\t\t\tconst relativeUrl = LoaderUtils.extractUrlBase( url );\n\t\t\tresourcePath = LoaderUtils.resolveURL( relativeUrl, this.path );\n\n\t\t} else {\n\n\t\t\tresourcePath = LoaderUtils.extractUrlBase( url );\n\n\t\t}\n\n\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\tthis.manager.itemStart( url );\n\n\t\tconst _onError = function ( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t};\n\n\t\tconst loader = new FileLoader( this.manager );\n\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tloader.load( url, function ( data ) {\n\n\t\t\ttry {\n\n\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, _onError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\t_onError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, _onError );\n\n\t}\n\n\t/**\n\t * Sets the given Draco loader to this loader. Required for decoding assets\n\t * compressed with the `KHR_draco_mesh_compression` extension.\n\t *\n\t * @param {DRACOLoader} dracoLoader - The Draco loader to set.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tsetDRACOLoader( dracoLoader ) {\n\n\t\tthis.dracoLoader = dracoLoader;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the given KTX2 loader to this loader. Required for loading KTX2\n\t * compressed textures.\n\t *\n\t * @param {KTX2Loader} ktx2Loader - The KTX2 loader to set.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tsetKTX2Loader( ktx2Loader ) {\n\n\t\tthis.ktx2Loader = ktx2Loader;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the given meshopt decoder. Required for decoding assets\n\t * compressed with the `EXT_meshopt_compression` extension.\n\t *\n\t * @param {Object} meshoptDecoder - The meshopt decoder to set.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tsetMeshoptDecoder( meshoptDecoder ) {\n\n\t\tthis.meshoptDecoder = meshoptDecoder;\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Registers a plugin callback. This API is internally used to implement the various\n\t * glTF extensions but can also used by third-party code to add additional logic\n\t * to the loader.\n\t *\n\t * @param {function(parser:GLTFParser)} callback - The callback function to register.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tregister( callback ) {\n\n\t\tif ( this.pluginCallbacks.indexOf( callback ) === - 1 ) {\n\n\t\t\tthis.pluginCallbacks.push( callback );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Unregisters a plugin callback.\n\t *\n\t * @param {Function} callback - The callback function to unregister.\n\t * @return {GLTFLoader} A reference to this loader.\n\t */\n\tunregister( callback ) {\n\n\t\tif ( this.pluginCallbacks.indexOf( callback ) !== - 1 ) {\n\n\t\t\tthis.pluginCallbacks.splice( this.pluginCallbacks.indexOf( callback ), 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Parses the given FBX data and returns the resulting group.\n\t *\n\t * @param {string|ArrayBuffer} data - The raw glTF data.\n\t * @param {string} path - The URL base path.\n\t * @param {function(GLTFLoader~LoadObject)} onLoad - Executed when the loading process has been finished.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tparse( data, path, onLoad, onError ) {\n\n\t\tlet json;\n\t\tconst extensions = {};\n\t\tconst plugins = {};\n\t\tconst textDecoder = new TextDecoder();\n\n\t\tif ( typeof data === 'string' ) {\n\n\t\t\tjson = JSON.parse( data );\n\n\t\t} else if ( data instanceof ArrayBuffer ) {\n\n\t\t\tconst magic = textDecoder.decode( new Uint8Array( data, 0, 4 ) );\n\n\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tjson = JSON.parse( extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content );\n\n\t\t\t} else {\n\n\t\t\t\tjson = JSON.parse( textDecoder.decode( data ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tjson = data;\n\n\t\t}\n\n\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst parser = new GLTFParser( json, {\n\n\t\t\tpath: path || this.resourcePath || '',\n\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\trequestHeader: this.requestHeader,\n\t\t\tmanager: this.manager,\n\t\t\tktx2Loader: this.ktx2Loader,\n\t\t\tmeshoptDecoder: this.meshoptDecoder\n\n\t\t} );\n\n\t\tparser.fileLoader.setRequestHeader( this.requestHeader );\n\n\t\tfor ( let i = 0; i < this.pluginCallbacks.length; i ++ ) {\n\n\t\t\tconst plugin = this.pluginCallbacks[ i ]( parser );\n\n\t\t\tif ( ! plugin.name ) console.error( 'THREE.GLTFLoader: Invalid plugin found: missing name' );\n\n\t\t\tplugins[ plugin.name ] = plugin;\n\n\t\t\t// Workaround to avoid determining as unknown extension\n\t\t\t// in addUnknownExtensionsToUserData().\n\t\t\t// Remove this workaround if we move all the existing\n\t\t\t// extension handlers to plugin system\n\t\t\textensions[ plugin.name ] = true;\n\n\t\t}\n\n\t\tif ( json.extensionsUsed ) {\n\n\t\t\tfor ( let i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\tconst extensionName = json.extensionsUsed[ i ];\n\t\t\t\tconst extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 && plugins[ extensionName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tparser.setExtensions( extensions );\n\t\tparser.setPlugins( plugins );\n\t\tparser.parse( onLoad, onError );\n\n\t}\n\n\t/**\n\t * Async version of {@link GLTFLoader#parse}.\n\t *\n\t * @async\n\t * @param {string|ArrayBuffer} data - The raw glTF data.\n\t * @param {string} path - The URL base path.\n\t * @return {Promise<GLTFLoader~LoadObject>} A Promise that resolves with the loaded glTF when the parsing has been finished.\n\t */\n\tparseAsync( data, path ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.parse( data, path, resolve, reject );\n\n\t\t} );\n\n\t}\n\n}\n\n/* GLTFREGISTRY */\n\nfunction GLTFRegistry() {\n\n\tlet objects = {};\n\n\treturn\t{\n\n\t\tget: function ( key ) {\n\n\t\t\treturn objects[ key ];\n\n\t\t},\n\n\t\tadd: function ( key, object ) {\n\n\t\t\tobjects[ key ] = object;\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete objects[ key ];\n\n\t\t},\n\n\t\tremoveAll: function () {\n\n\t\t\tobjects = {};\n\n\t\t}\n\n\t};\n\n}\n\n/*********************************/\n/********** EXTENSIONS ***********/\n/*********************************/\n\nconst EXTENSIONS = {\n\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\tKHR_MATERIALS_CLEARCOAT: 'KHR_materials_clearcoat',\n\tKHR_MATERIALS_DISPERSION: 'KHR_materials_dispersion',\n\tKHR_MATERIALS_IOR: 'KHR_materials_ior',\n\tKHR_MATERIALS_SHEEN: 'KHR_materials_sheen',\n\tKHR_MATERIALS_SPECULAR: 'KHR_materials_specular',\n\tKHR_MATERIALS_TRANSMISSION: 'KHR_materials_transmission',\n\tKHR_MATERIALS_IRIDESCENCE: 'KHR_materials_iridescence',\n\tKHR_MATERIALS_ANISOTROPY: 'KHR_materials_anisotropy',\n\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\tKHR_MATERIALS_VOLUME: 'KHR_materials_volume',\n\tKHR_TEXTURE_BASISU: 'KHR_texture_basisu',\n\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\tKHR_MATERIALS_EMISSIVE_STRENGTH: 'KHR_materials_emissive_strength',\n\tEXT_MATERIALS_BUMP: 'EXT_materials_bump',\n\tEXT_TEXTURE_WEBP: 'EXT_texture_webp',\n\tEXT_TEXTURE_AVIF: 'EXT_texture_avif',\n\tEXT_MESHOPT_COMPRESSION: 'EXT_meshopt_compression',\n\tEXT_MESH_GPU_INSTANCING: 'EXT_mesh_gpu_instancing'\n};\n\n/**\n * Punctual Lights Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n *\n * @private\n */\nclass GLTFLightsExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\t// Object3D instance caches\n\t\tthis.cache = { refs: {}, uses: {} };\n\n\t}\n\n\t_markDefs() {\n\n\t\tconst parser = this.parser;\n\t\tconst nodeDefs = this.parser.json.nodes || [];\n\n\t\tfor ( let nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tconst nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t\t&& nodeDef.extensions[ this.name ]\n\t\t\t\t\t&& nodeDef.extensions[ this.name ].light !== undefined ) {\n\n\t\t\t\tparser._addNodeRef( this.cache, nodeDef.extensions[ this.name ].light );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_loadLight( lightIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst cacheKey = 'light:' + lightIndex;\n\t\tlet dependency = parser.cache.get( cacheKey );\n\n\t\tif ( dependency ) return dependency;\n\n\t\tconst json = parser.json;\n\t\tconst extensions = ( json.extensions && json.extensions[ this.name ] ) || {};\n\t\tconst lightDefs = extensions.lights || [];\n\t\tconst lightDef = lightDefs[ lightIndex ];\n\t\tlet lightNode;\n\n\t\tconst color = new Color( 0xffffff );\n\n\t\tif ( lightDef.color !== undefined ) color.setRGB( lightDef.color[ 0 ], lightDef.color[ 1 ], lightDef.color[ 2 ], LinearSRGBColorSpace );\n\n\t\tconst range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type: ' + lightDef.type );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tassignExtrasToUserData( lightNode, lightDef );\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = parser.createUniqueName( lightDef.name || ( 'light_' + lightIndex ) );\n\n\t\tdependency = Promise.resolve( lightNode );\n\n\t\tparser.cache.add( cacheKey, dependency );\n\n\t\treturn dependency;\n\n\t}\n\n\tgetDependency( type, index ) {\n\n\t\tif ( type !== 'light' ) return;\n\n\t\treturn this._loadLight( index );\n\n\t}\n\n\tcreateNodeAttachment( nodeIndex ) {\n\n\t\tconst self = this;\n\t\tconst parser = this.parser;\n\t\tconst json = parser.json;\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\t\tconst lightDef = ( nodeDef.extensions && nodeDef.extensions[ this.name ] ) || {};\n\t\tconst lightIndex = lightDef.light;\n\n\t\tif ( lightIndex === undefined ) return null;\n\n\t\treturn this._loadLight( lightIndex ).then( function ( light ) {\n\n\t\t\treturn parser._getNodeRef( self.cache, lightIndex, light );\n\n\t\t} );\n\n\t}\n\n}\n\n/**\n * Unlit Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n *\n * @private\n */\nclass GLTFMaterialsUnlitExtension {\n\n\tconstructor() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tgetMaterialType() {\n\n\t\treturn MeshBasicMaterial;\n\n\t}\n\n\textendParams( materialParams, materialDef, parser ) {\n\n\t\tconst pending = [];\n\n\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tconst metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tconst array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.setRGB( array[ 0 ], array[ 1 ], array[ 2 ], LinearSRGBColorSpace );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture, SRGBColorSpace ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials Emissive Strength Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/blob/5768b3ce0ef32bc39cdf1bef10b948586635ead3/extensions/2.0/Khronos/KHR_materials_emissive_strength/README.md\n *\n * @private\n */\nclass GLTFMaterialsEmissiveStrengthExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_EMISSIVE_STRENGTH;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst emissiveStrength = materialDef.extensions[ this.name ].emissiveStrength;\n\n\t\tif ( emissiveStrength !== undefined ) {\n\n\t\t\tmaterialParams.emissiveIntensity = emissiveStrength;\n\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n}\n\n/**\n * Clearcoat Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat\n *\n * @private\n */\nclass GLTFMaterialsClearcoatExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_CLEARCOAT;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.clearcoatFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoat = extension.clearcoatFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatMap', extension.clearcoatTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.clearcoatRoughness = extension.clearcoatRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.clearcoatRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatRoughnessMap', extension.clearcoatRoughnessTexture ) );\n\n\t\t}\n\n\t\tif ( extension.clearcoatNormalTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'clearcoatNormalMap', extension.clearcoatNormalTexture ) );\n\n\t\t\tif ( extension.clearcoatNormalTexture.scale !== undefined ) {\n\n\t\t\t\tconst scale = extension.clearcoatNormalTexture.scale;\n\n\t\t\t\tmaterialParams.clearcoatNormalScale = new Vector2( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials dispersion Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_dispersion\n *\n * @private\n */\nclass GLTFMaterialsDispersionExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_DISPERSION;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.dispersion = extension.dispersion !== undefined ? extension.dispersion : 0;\n\n\t\treturn Promise.resolve();\n\n\t}\n\n}\n\n/**\n * Iridescence Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_iridescence\n *\n * @private\n */\nclass GLTFMaterialsIridescenceExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_IRIDESCENCE;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.iridescenceFactor !== undefined ) {\n\n\t\t\tmaterialParams.iridescence = extension.iridescenceFactor;\n\n\t\t}\n\n\t\tif ( extension.iridescenceTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'iridescenceMap', extension.iridescenceTexture ) );\n\n\t\t}\n\n\t\tif ( extension.iridescenceIor !== undefined ) {\n\n\t\t\tmaterialParams.iridescenceIOR = extension.iridescenceIor;\n\n\t\t}\n\n\t\tif ( materialParams.iridescenceThicknessRange === undefined ) {\n\n\t\t\tmaterialParams.iridescenceThicknessRange = [ 100, 400 ];\n\n\t\t}\n\n\t\tif ( extension.iridescenceThicknessMinimum !== undefined ) {\n\n\t\t\tmaterialParams.iridescenceThicknessRange[ 0 ] = extension.iridescenceThicknessMinimum;\n\n\t\t}\n\n\t\tif ( extension.iridescenceThicknessMaximum !== undefined ) {\n\n\t\t\tmaterialParams.iridescenceThicknessRange[ 1 ] = extension.iridescenceThicknessMaximum;\n\n\t\t}\n\n\t\tif ( extension.iridescenceThicknessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'iridescenceThicknessMap', extension.iridescenceThicknessTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Sheen Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_materials_sheen\n *\n * @private\n */\nclass GLTFMaterialsSheenExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_SHEEN;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tmaterialParams.sheenColor = new Color( 0, 0, 0 );\n\t\tmaterialParams.sheenRoughness = 0;\n\t\tmaterialParams.sheen = 1;\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.sheenColorFactor !== undefined ) {\n\n\t\t\tconst colorFactor = extension.sheenColorFactor;\n\t\t\tmaterialParams.sheenColor.setRGB( colorFactor[ 0 ], colorFactor[ 1 ], colorFactor[ 2 ], LinearSRGBColorSpace );\n\n\t\t}\n\n\t\tif ( extension.sheenRoughnessFactor !== undefined ) {\n\n\t\t\tmaterialParams.sheenRoughness = extension.sheenRoughnessFactor;\n\n\t\t}\n\n\t\tif ( extension.sheenColorTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'sheenColorMap', extension.sheenColorTexture, SRGBColorSpace ) );\n\n\t\t}\n\n\t\tif ( extension.sheenRoughnessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'sheenRoughnessMap', extension.sheenRoughnessTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Transmission Materials Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission\n * Draft: https://github.com/KhronosGroup/glTF/pull/1698\n *\n * @private\n */\nclass GLTFMaterialsTransmissionExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_TRANSMISSION;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.transmissionFactor !== undefined ) {\n\n\t\t\tmaterialParams.transmission = extension.transmissionFactor;\n\n\t\t}\n\n\t\tif ( extension.transmissionTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'transmissionMap', extension.transmissionTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials Volume Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_volume\n *\n * @private\n */\nclass GLTFMaterialsVolumeExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_VOLUME;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.thickness = extension.thicknessFactor !== undefined ? extension.thicknessFactor : 0;\n\n\t\tif ( extension.thicknessTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'thicknessMap', extension.thicknessTexture ) );\n\n\t\t}\n\n\t\tmaterialParams.attenuationDistance = extension.attenuationDistance || Infinity;\n\n\t\tconst colorArray = extension.attenuationColor || [ 1, 1, 1 ];\n\t\tmaterialParams.attenuationColor = new Color().setRGB( colorArray[ 0 ], colorArray[ 1 ], colorArray[ 2 ], LinearSRGBColorSpace );\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials ior Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_ior\n *\n * @private\n */\nclass GLTFMaterialsIorExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_IOR;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.ior = extension.ior !== undefined ? extension.ior : 1.5;\n\n\t\treturn Promise.resolve();\n\n\t}\n\n}\n\n/**\n * Materials specular Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_specular\n *\n * @private\n */\nclass GLTFMaterialsSpecularExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_SPECULAR;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.specularIntensity = extension.specularFactor !== undefined ? extension.specularFactor : 1.0;\n\n\t\tif ( extension.specularTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'specularIntensityMap', extension.specularTexture ) );\n\n\t\t}\n\n\t\tconst colorArray = extension.specularColorFactor || [ 1, 1, 1 ];\n\t\tmaterialParams.specularColor = new Color().setRGB( colorArray[ 0 ], colorArray[ 1 ], colorArray[ 2 ], LinearSRGBColorSpace );\n\n\t\tif ( extension.specularColorTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'specularColorMap', extension.specularColorTexture, SRGBColorSpace ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n\n/**\n * Materials bump Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/EXT_materials_bump\n *\n * @private\n */\nclass GLTFMaterialsBumpExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.EXT_MATERIALS_BUMP;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tmaterialParams.bumpScale = extension.bumpFactor !== undefined ? extension.bumpFactor : 1.0;\n\n\t\tif ( extension.bumpTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'bumpMap', extension.bumpTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * Materials anisotropy Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_anisotropy\n *\n * @private\n */\nclass GLTFMaterialsAnisotropyExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_ANISOTROPY;\n\n\t}\n\n\tgetMaterialType( materialIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) return null;\n\n\t\treturn MeshPhysicalMaterial;\n\n\t}\n\n\textendMaterialParams( materialIndex, materialParams ) {\n\n\t\tconst parser = this.parser;\n\t\tconst materialDef = parser.json.materials[ materialIndex ];\n\n\t\tif ( ! materialDef.extensions || ! materialDef.extensions[ this.name ] ) {\n\n\t\t\treturn Promise.resolve();\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tconst extension = materialDef.extensions[ this.name ];\n\n\t\tif ( extension.anisotropyStrength !== undefined ) {\n\n\t\t\tmaterialParams.anisotropy = extension.anisotropyStrength;\n\n\t\t}\n\n\t\tif ( extension.anisotropyRotation !== undefined ) {\n\n\t\t\tmaterialParams.anisotropyRotation = extension.anisotropyRotation;\n\n\t\t}\n\n\t\tif ( extension.anisotropyTexture !== undefined ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'anisotropyMap', extension.anisotropyTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n}\n\n/**\n * BasisU Texture Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_basisu\n *\n * @private\n */\nclass GLTFTextureBasisUExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_BASISU;\n\n\t}\n\n\tloadTexture( textureIndex ) {\n\n\t\tconst parser = this.parser;\n\t\tconst json = parser.json;\n\n\t\tconst textureDef = json.textures[ textureIndex ];\n\n\t\tif ( ! textureDef.extensions || ! textureDef.extensions[ this.name ] ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst extension = textureDef.extensions[ this.name ];\n\t\tconst loader = parser.options.ktx2Loader;\n\n\t\tif ( ! loader ) {\n\n\t\t\tif ( json.extensionsRequired && json.extensionsRequired.indexOf( this.name ) >= 0 ) {\n\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures' );\n\n\t\t\t} else {\n\n\t\t\t\t// Assumes that the extension is optional and that a fallback texture is present\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.loadTextureImage( textureIndex, extension.source, loader );\n\n\t}\n\n}\n\n/**\n * WebP Texture Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_webp\n *\n * @private\n */\nclass GLTFTextureWebPExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.EXT_TEXTURE_WEBP;\n\n\t}\n\n\tloadTexture( textureIndex ) {\n\n\t\tconst name = this.name;\n\t\tconst parser = this.parser;\n\t\tconst json = parser.json;\n\n\t\tconst textureDef = json.textures[ textureIndex ];\n\n\t\tif ( ! textureDef.extensions || ! textureDef.extensions[ name ] ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst extension = textureDef.extensions[ name ];\n\t\tconst source = json.images[ extension.source ];\n\n\t\tlet loader = parser.textureLoader;\n\t\tif ( source.uri ) {\n\n\t\t\tconst handler = parser.options.manager.getHandler( source.uri );\n\t\t\tif ( handler !== null ) loader = handler;\n\n\t\t}\n\n\t\treturn parser.loadTextureImage( textureIndex, extension.source, loader );\n\n\t}\n\n}\n\n/**\n * AVIF Texture Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_texture_avif\n *\n * @private\n */\nclass GLTFTextureAVIFExtension {\n\n\tconstructor( parser ) {\n\n\t\tthis.parser = parser;\n\t\tthis.name = EXTENSIONS.EXT_TEXTURE_AVIF;\n\n\t}\n\n\tloadTexture( textureIndex ) {\n\n\t\tconst name = this.name;\n\t\tconst parser = this.parser;\n\t\tconst json = parser.json;\n\n\t\tconst textureDef = json.textures[ textureIndex ];\n\n\t\tif ( ! textureDef.extensions || ! textureDef.extensions[ name ] ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst extension = textureDef.extensions[ name ];\n\t\tconst source = json.images[ extension.source ];\n\n\t\tlet loader = parser.textureLoader;\n\t\tif ( source.uri ) {\n\n\t\t\tconst handler = parser.options.manager.getHandler( source.uri );\n\t\t\tif ( handler !== null ) loader = handler;\n\n\t\t}\n\n\t\treturn parser.loadTextureImage( textureIndex, extension.source, loader );\n\n\t}\n\n}\n\n/**\n * meshopt BufferView Compression Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_meshopt_compression\n *\n * @private\n */\nclass GLTFMeshoptCompression {\n\n\tconstructor( parser ) {\n\n\t\tthis.name = EXTENSIONS.EXT_MESHOPT_COMPRESSION;\n\t\tthis.parser = parser;\n\n\t}\n\n\tloadBufferView( index ) {\n\n\t\tconst json = this.parser.json;\n\t\tconst bufferView = json.bufferViews[ index ];\n\n\t\tif ( bufferView.extensions && bufferView.extensions[ this.name ] ) {\n\n\t\t\tconst extensionDef = bufferView.extensions[ this.name ];\n\n\t\t\tconst buffer = this.parser.getDependency( 'buffer', extensionDef.buffer );\n\t\t\tconst decoder = this.parser.options.meshoptDecoder;\n\n\t\t\tif ( ! decoder || ! decoder.supported ) {\n\n\t\t\t\tif ( json.extensionsRequired && json.extensionsRequired.indexOf( this.name ) >= 0 ) {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Assumes that the extension is optional and that fallback buffer data is present\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn buffer.then( function ( res ) {\n\n\t\t\t\tconst byteOffset = extensionDef.byteOffset || 0;\n\t\t\t\tconst byteLength = extensionDef.byteLength || 0;\n\n\t\t\t\tconst count = extensionDef.count;\n\t\t\t\tconst stride = extensionDef.byteStride;\n\n\t\t\t\tconst source = new Uint8Array( res, byteOffset, byteLength );\n\n\t\t\t\tif ( decoder.decodeGltfBufferAsync ) {\n\n\t\t\t\t\treturn decoder.decodeGltfBufferAsync( count, stride, source, extensionDef.mode, extensionDef.filter ).then( function ( res ) {\n\n\t\t\t\t\t\treturn res.buffer;\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Support for MeshoptDecoder 0.18 or earlier, without decodeGltfBufferAsync\n\t\t\t\t\treturn decoder.ready.then( function () {\n\n\t\t\t\t\t\tconst result = new ArrayBuffer( count * stride );\n\t\t\t\t\t\tdecoder.decodeGltfBuffer( new Uint8Array( result ), count, stride, source, extensionDef.mode, extensionDef.filter );\n\t\t\t\t\t\treturn result;\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * GPU Instancing Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/EXT_mesh_gpu_instancing\n *\n * @private\n */\nclass GLTFMeshGpuInstancing {\n\n\tconstructor( parser ) {\n\n\t\tthis.name = EXTENSIONS.EXT_MESH_GPU_INSTANCING;\n\t\tthis.parser = parser;\n\n\t}\n\n\tcreateNodeMesh( nodeIndex ) {\n\n\t\tconst json = this.parser.json;\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\n\t\tif ( ! nodeDef.extensions || ! nodeDef.extensions[ this.name ] ||\n\t\t\tnodeDef.mesh === undefined ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst meshDef = json.meshes[ nodeDef.mesh ];\n\n\t\t// No Points or Lines + Instancing support yet\n\n\t\tfor ( const primitive of meshDef.primitives ) {\n\n\t\t\tif ( primitive.mode !== WEBGL_CONSTANTS.TRIANGLES &&\n\t\t\t\t primitive.mode !== WEBGL_CONSTANTS.TRIANGLE_STRIP &&\n\t\t\t\t primitive.mode !== WEBGL_CONSTANTS.TRIANGLE_FAN &&\n\t\t\t\t primitive.mode !== undefined ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst extensionDef = nodeDef.extensions[ this.name ];\n\t\tconst attributesDef = extensionDef.attributes;\n\n\t\t// @TODO: Can we support InstancedMesh + SkinnedMesh?\n\n\t\tconst pending = [];\n\t\tconst attributes = {};\n\n\t\tfor ( const key in attributesDef ) {\n\n\t\t\tpending.push( this.parser.getDependency( 'accessor', attributesDef[ key ] ).then( accessor => {\n\n\t\t\t\tattributes[ key ] = accessor;\n\t\t\t\treturn attributes[ key ];\n\n\t\t\t} ) );\n\n\t\t}\n\n\t\tif ( pending.length < 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tpending.push( this.parser.createNodeMesh( nodeIndex ) );\n\n\t\treturn Promise.all( pending ).then( results => {\n\n\t\t\tconst nodeObject = results.pop();\n\t\t\tconst meshes = nodeObject.isGroup ? nodeObject.children : [ nodeObject ];\n\t\t\tconst count = results[ 0 ].count; // All attribute counts should be same\n\t\t\tconst instancedMeshes = [];\n\n\t\t\tfor ( const mesh of meshes ) {\n\n\t\t\t\t// Temporal variables\n\t\t\t\tconst m = new Matrix4();\n\t\t\t\tconst p = new Vector3();\n\t\t\t\tconst q = new Quaternion();\n\t\t\t\tconst s = new Vector3( 1, 1, 1 );\n\n\t\t\t\tconst instancedMesh = new InstancedMesh( mesh.geometry, mesh.material, count );\n\n\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\t\t\tif ( attributes.TRANSLATION ) {\n\n\t\t\t\t\t\tp.fromBufferAttribute( attributes.TRANSLATION, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.ROTATION ) {\n\n\t\t\t\t\t\tq.fromBufferAttribute( attributes.ROTATION, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attributes.SCALE ) {\n\n\t\t\t\t\t\ts.fromBufferAttribute( attributes.SCALE, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tinstancedMesh.setMatrixAt( i, m.compose( p, q, s ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Add instance attributes to the geometry, excluding TRS.\n\t\t\t\tfor ( const attributeName in attributes ) {\n\n\t\t\t\t\tif ( attributeName === '_COLOR_0' ) {\n\n\t\t\t\t\t\tconst attr = attributes[ attributeName ];\n\t\t\t\t\t\tinstancedMesh.instanceColor = new InstancedBufferAttribute( attr.array, attr.itemSize, attr.normalized );\n\n\t\t\t\t\t} else if ( attributeName !== 'TRANSLATION' &&\n\t\t\t\t\t\t attributeName !== 'ROTATION' &&\n\t\t\t\t\t\t attributeName !== 'SCALE' ) {\n\n\t\t\t\t\t\tmesh.geometry.setAttribute( attributeName, attributes[ attributeName ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Just in case\n\t\t\t\tObject3D.prototype.copy.call( instancedMesh, mesh );\n\n\t\t\t\tthis.parser.assignFinalMaterial( instancedMesh );\n\n\t\t\t\tinstancedMeshes.push( instancedMesh );\n\n\t\t\t}\n\n\t\t\tif ( nodeObject.isGroup ) {\n\n\t\t\t\tnodeObject.clear();\n\n\t\t\t\tnodeObject.add( ... instancedMeshes );\n\n\t\t\t\treturn nodeObject;\n\n\t\t\t}\n\n\t\t\treturn instancedMeshes[ 0 ];\n\n\t\t} );\n\n\t}\n\n}\n\n/* BINARY EXTENSION */\nconst BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\nconst BINARY_EXTENSION_HEADER_LENGTH = 12;\nconst BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\nclass GLTFBinaryExtension {\n\n\tconstructor( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tconst headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tconst textDecoder = new TextDecoder();\n\n\t\tthis.header = {\n\t\t\tmagic: textDecoder.decode( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tconst chunkContentsLength = this.header.length - BINARY_EXTENSION_HEADER_LENGTH;\n\t\tconst chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tlet chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkContentsLength ) {\n\n\t\t\tconst chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tconst chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tconst contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = textDecoder.decode( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tconst byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * DRACO Mesh Compression Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n *\n * @private\n */\nclass GLTFDracoMeshCompressionExtension {\n\n\tconstructor( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tdecodePrimitive( primitive, parser ) {\n\n\t\tconst json = this.json;\n\t\tconst dracoLoader = this.dracoLoader;\n\t\tconst bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tconst gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tconst threeAttributeMap = {};\n\t\tconst attributeNormalizedMap = {};\n\t\tconst attributeTypeMap = {};\n\n\t\tfor ( const attributeName in gltfAttributeMap ) {\n\n\t\t\tconst threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( const attributeName in primitive.attributes ) {\n\n\t\t\tconst threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tconst accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tconst componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType.name;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( const attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tconst attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tconst normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap, LinearSRGBColorSpace, reject );\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n}\n\n/**\n * Texture Transform Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n *\n * @private\n */\nclass GLTFTextureTransformExtension {\n\n\tconstructor() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\textendTexture( texture, transform ) {\n\n\t\tif ( ( transform.texCoord === undefined || transform.texCoord === texture.channel )\n\t\t\t&& transform.offset === undefined\n\t\t\t&& transform.rotation === undefined\n\t\t\t&& transform.scale === undefined ) {\n\n\t\t\t// See https://github.com/mrdoob/three.js/issues/21819.\n\t\t\treturn texture;\n\n\t\t}\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\ttexture.channel = transform.texCoord;\n\n\t\t}\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Mesh Quantization Extension\n *\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n *\n * @private\n */\nclass GLTFMeshQuantizationExtension {\n\n\tconstructor() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n}\n\n/*********************************/\n/********** INTERPOLATION ********/\n/*********************************/\n\n// Spline Interpolation\n// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\nclass GLTFCubicSplineInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( let i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer;\n\t\tconst values = this.sampleValues;\n\t\tconst stride = this.valueSize;\n\n\t\tconst stride2 = stride * 2;\n\t\tconst stride3 = stride * 3;\n\n\t\tconst td = t1 - t0;\n\n\t\tconst p = ( t - t0 ) / td;\n\t\tconst pp = p * p;\n\t\tconst ppp = pp * p;\n\n\t\tconst offset1 = i1 * stride3;\n\t\tconst offset0 = offset1 - stride3;\n\n\t\tconst s2 = - 2 * ppp + 3 * pp;\n\t\tconst s3 = ppp - pp;\n\t\tconst s0 = 1 - s2;\n\t\tconst s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( let i = 0; i !== stride; i ++ ) {\n\n\t\t\tconst p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tconst m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tconst p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tconst m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nconst _quaternion = new Quaternion();\n\nclass GLTFCubicSplineQuaternionInterpolant extends GLTFCubicSplineInterpolant {\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = super.interpolate_( i1, t0, t, t1 );\n\n\t\t_quaternion.fromArray( result ).normalize().toArray( result );\n\n\t\treturn result;\n\n\t}\n\n}\n\n\n/*********************************/\n/********** INTERNALS ************/\n/*********************************/\n\n/* CONSTANTS */\n\nconst WEBGL_CONSTANTS = {\n\tFLOAT: 5126,\n\t//FLOAT_MAT2: 35674,\n\tFLOAT_MAT3: 35675,\n\tFLOAT_MAT4: 35676,\n\tFLOAT_VEC2: 35664,\n\tFLOAT_VEC3: 35665,\n\tFLOAT_VEC4: 35666,\n\tLINEAR: 9729,\n\tREPEAT: 10497,\n\tSAMPLER_2D: 35678,\n\tPOINTS: 0,\n\tLINES: 1,\n\tLINE_LOOP: 2,\n\tLINE_STRIP: 3,\n\tTRIANGLES: 4,\n\tTRIANGLE_STRIP: 5,\n\tTRIANGLE_FAN: 6,\n\tUNSIGNED_BYTE: 5121,\n\tUNSIGNED_SHORT: 5123\n};\n\nconst WEBGL_COMPONENT_TYPES = {\n\t5120: Int8Array,\n\t5121: Uint8Array,\n\t5122: Int16Array,\n\t5123: Uint16Array,\n\t5125: Uint32Array,\n\t5126: Float32Array\n};\n\nconst WEBGL_FILTERS = {\n\t9728: NearestFilter,\n\t9729: LinearFilter,\n\t9984: NearestMipmapNearestFilter,\n\t9985: LinearMipmapNearestFilter,\n\t9986: NearestMipmapLinearFilter,\n\t9987: LinearMipmapLinearFilter\n};\n\nconst WEBGL_WRAPPINGS = {\n\t33071: ClampToEdgeWrapping,\n\t33648: MirroredRepeatWrapping,\n\t10497: RepeatWrapping\n};\n\nconst WEBGL_TYPE_SIZES = {\n\t'SCALAR': 1,\n\t'VEC2': 2,\n\t'VEC3': 3,\n\t'VEC4': 4,\n\t'MAT2': 4,\n\t'MAT3': 9,\n\t'MAT4': 16\n};\n\nconst ATTRIBUTES = {\n\tPOSITION: 'position',\n\tNORMAL: 'normal',\n\tTANGENT: 'tangent',\n\tTEXCOORD_0: 'uv',\n\tTEXCOORD_1: 'uv1',\n\tTEXCOORD_2: 'uv2',\n\tTEXCOORD_3: 'uv3',\n\tCOLOR_0: 'color',\n\tWEIGHTS_0: 'skinWeight',\n\tJOINTS_0: 'skinIndex',\n};\n\nconst PATH_PROPERTIES = {\n\tscale: 'scale',\n\ttranslation: 'position',\n\trotation: 'quaternion',\n\tweights: 'morphTargetInfluences'\n};\n\nconst INTERPOLATION = {\n\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\tLINEAR: InterpolateLinear,\n\tSTEP: InterpolateDiscrete\n};\n\nconst ALPHA_MODES = {\n\tOPAQUE: 'OPAQUE',\n\tMASK: 'MASK',\n\tBLEND: 'BLEND'\n};\n\n/**\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n *\n * @private\n * @param {Object<string, Material>} cache\n * @return {Material}\n */\nfunction createDefaultMaterial( cache ) {\n\n\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\tcache[ 'DefaultMaterial' ] = new MeshStandardMaterial( {\n\t\t\tcolor: 0xFFFFFF,\n\t\t\temissive: 0x000000,\n\t\t\tmetalness: 1,\n\t\t\troughness: 1,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: FrontSide\n\t\t} );\n\n\t}\n\n\treturn cache[ 'DefaultMaterial' ];\n\n}\n\nfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t// Add unknown glTF extensions to an object's userData.\n\n\tfor ( const name in objectDef.extensions ) {\n\n\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t}\n\n\t}\n\n}\n\n/**\n *\n * @private\n * @param {Object3D|Material|BufferGeometry|Object} object\n * @param {GLTF.definition} gltfDef\n */\nfunction assignExtrasToUserData( object, gltfDef ) {\n\n\tif ( gltfDef.extras !== undefined ) {\n\n\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n *\n * @private\n * @param {BufferGeometry} geometry\n * @param {Array<GLTF.Target>} targets\n * @param {GLTFParser} parser\n * @return {Promise<BufferGeometry>}\n */\nfunction addMorphTargets( geometry, targets, parser ) {\n\n\tlet hasMorphPosition = false;\n\tlet hasMorphNormal = false;\n\tlet hasMorphColor = false;\n\n\tfor ( let i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\tconst target = targets[ i ];\n\n\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\t\tif ( target.COLOR_0 !== undefined ) hasMorphColor = true;\n\n\t\tif ( hasMorphPosition && hasMorphNormal && hasMorphColor ) break;\n\n\t}\n\n\tif ( ! hasMorphPosition && ! hasMorphNormal && ! hasMorphColor ) return Promise.resolve( geometry );\n\n\tconst pendingPositionAccessors = [];\n\tconst pendingNormalAccessors = [];\n\tconst pendingColorAccessors = [];\n\n\tfor ( let i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\tconst target = targets[ i ];\n\n\t\tif ( hasMorphPosition ) {\n\n\t\t\tconst pendingAccessor = target.POSITION !== undefined\n\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t: geometry.attributes.position;\n\n\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t}\n\n\t\tif ( hasMorphNormal ) {\n\n\t\t\tconst pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t: geometry.attributes.normal;\n\n\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t}\n\n\t\tif ( hasMorphColor ) {\n\n\t\t\tconst pendingAccessor = target.COLOR_0 !== undefined\n\t\t\t\t? parser.getDependency( 'accessor', target.COLOR_0 )\n\t\t\t\t: geometry.attributes.color;\n\n\t\t\tpendingColorAccessors.push( pendingAccessor );\n\n\t\t}\n\n\t}\n\n\treturn Promise.all( [\n\t\tPromise.all( pendingPositionAccessors ),\n\t\tPromise.all( pendingNormalAccessors ),\n\t\tPromise.all( pendingColorAccessors )\n\t] ).then( function ( accessors ) {\n\n\t\tconst morphPositions = accessors[ 0 ];\n\t\tconst morphNormals = accessors[ 1 ];\n\t\tconst morphColors = accessors[ 2 ];\n\n\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\tif ( hasMorphColor ) geometry.morphAttributes.color = morphColors;\n\t\tgeometry.morphTargetsRelative = true;\n\n\t\treturn geometry;\n\n\t} );\n\n}\n\n/**\n *\n * @private\n * @param {Mesh} mesh\n * @param {GLTF.Mesh} meshDef\n */\nfunction updateMorphTargets( mesh, meshDef ) {\n\n\tmesh.updateMorphTargets();\n\n\tif ( meshDef.weights !== undefined ) {\n\n\t\tfor ( let i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t}\n\n\t}\n\n\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\tconst targetNames = meshDef.extras.targetNames;\n\n\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\tfor ( let i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t}\n\n\t}\n\n}\n\nfunction createPrimitiveKey( primitiveDef ) {\n\n\tlet geometryKey;\n\n\tconst dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\n\tif ( dracoExtension ) {\n\n\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t} else {\n\n\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t}\n\n\tif ( primitiveDef.targets !== undefined ) {\n\n\t\tfor ( let i = 0, il = primitiveDef.targets.length; i < il; i ++ ) {\n\n\t\t\tgeometryKey += ':' + createAttributesKey( primitiveDef.targets[ i ] );\n\n\t\t}\n\n\t}\n\n\treturn geometryKey;\n\n}\n\nfunction createAttributesKey( attributes ) {\n\n\tlet attributesKey = '';\n\n\tconst keys = Object.keys( attributes ).sort();\n\n\tfor ( let i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t}\n\n\treturn attributesKey;\n\n}\n\nfunction getNormalizedComponentScale( constructor ) {\n\n\t// Reference:\n\t// https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization#encoding-quantized-data\n\n\tswitch ( constructor ) {\n\n\t\tcase Int8Array:\n\t\t\treturn 1 / 127;\n\n\t\tcase Uint8Array:\n\t\t\treturn 1 / 255;\n\n\t\tcase Int16Array:\n\t\t\treturn 1 / 32767;\n\n\t\tcase Uint16Array:\n\t\t\treturn 1 / 65535;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported normalized accessor component type.' );\n\n\t}\n\n}\n\nfunction getImageURIMimeType( uri ) {\n\n\tif ( uri.search( /\\.jpe?g($|\\?)/i ) > 0 || uri.search( /^data\\:image\\/jpeg/ ) === 0 ) return 'image/jpeg';\n\tif ( uri.search( /\\.webp($|\\?)/i ) > 0 || uri.search( /^data\\:image\\/webp/ ) === 0 ) return 'image/webp';\n\tif ( uri.search( /\\.ktx2($|\\?)/i ) > 0 || uri.search( /^data\\:image\\/ktx2/ ) === 0 ) return 'image/ktx2';\n\n\treturn 'image/png';\n\n}\n\nconst _identityMatrix = new Matrix4();\n\n/* GLTF PARSER */\n\nclass GLTFParser {\n\n\tconstructor( json = {}, options = {} ) {\n\n\t\tthis.json = json;\n\t\tthis.extensions = {};\n\t\tthis.plugins = {};\n\t\tthis.options = options;\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// associations between Three.js objects and glTF elements\n\t\tthis.associations = new Map();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\t// Node cache\n\t\tthis.nodeCache = {};\n\n\t\t// Object3D instance caches\n\t\tthis.meshCache = { refs: {}, uses: {} };\n\t\tthis.cameraCache = { refs: {}, uses: {} };\n\t\tthis.lightCache = { refs: {}, uses: {} };\n\n\t\tthis.sourceCache = {};\n\t\tthis.textureCache = {};\n\n\t\t// Track node names, to ensure no duplicates\n\t\tthis.nodeNamesUsed = {};\n\n\t\t// Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n\t\t// expensive work of uploading a texture to the GPU off the main thread.\n\n\t\tlet isSafari = false;\n\t\tlet safariVersion = - 1;\n\t\tlet isFirefox = false;\n\t\tlet firefoxVersion = - 1;\n\n\t\tif ( typeof navigator !== 'undefined' ) {\n\n\t\t\tconst userAgent = navigator.userAgent;\n\n\t\t\tisSafari = /^((?!chrome|android).)*safari/i.test( userAgent ) === true;\n\t\t\tconst safariMatch = userAgent.match( /Version\\/(\\d+)/ );\n\t\t\tsafariVersion = isSafari && safariMatch ? parseInt( safariMatch[ 1 ], 10 ) : - 1;\n\n\t\t\tisFirefox = userAgent.indexOf( 'Firefox' ) > - 1;\n\t\t\tfirefoxVersion = isFirefox ? userAgent.match( /Firefox\\/([0-9]+)\\./ )[ 1 ] : - 1;\n\n\t\t}\n\n\t\tif ( typeof createImageBitmap === 'undefined' || ( isSafari && safariVersion < 17 ) || ( isFirefox && firefoxVersion < 98 ) ) {\n\n\t\t\tthis.textureLoader = new TextureLoader( this.options.manager );\n\n\t\t} else {\n\n\t\t\tthis.textureLoader = new ImageBitmapLoader( this.options.manager );\n\n\t\t}\n\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\t\tthis.textureLoader.setRequestHeader( this.options.requestHeader );\n\n\t\tthis.fileLoader = new FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tsetExtensions( extensions ) {\n\n\t\tthis.extensions = extensions;\n\n\t}\n\n\tsetPlugins( plugins ) {\n\n\t\tthis.plugins = plugins;\n\n\t}\n\n\tparse( onLoad, onError ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\t\tconst extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\t\tthis.nodeCache = {};\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis._invokeAll( function ( ext ) {\n\n\t\t\treturn ext._markDefs && ext._markDefs();\n\n\t\t} );\n\n\t\tPromise.all( this._invokeAll( function ( ext ) {\n\n\t\t\treturn ext.beforeRoot && ext.beforeRoot();\n\n\t\t} ) ).then( function () {\n\n\t\t\treturn Promise.all( [\n\n\t\t\t\tparser.getDependencies( 'scene' ),\n\t\t\t\tparser.getDependencies( 'animation' ),\n\t\t\t\tparser.getDependencies( 'camera' ),\n\n\t\t\t] );\n\n\t\t} ).then( function ( dependencies ) {\n\n\t\t\tconst result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\treturn Promise.all( parser._invokeAll( function ( ext ) {\n\n\t\t\t\treturn ext.afterRoot && ext.afterRoot( result );\n\n\t\t\t} ) ).then( function () {\n\n\t\t\t\tfor ( const scene of result.scenes ) {\n\n\t\t\t\t\tscene.updateMatrixWorld();\n\n\t\t\t\t}\n\n\t\t\t\tonLoad( result );\n\n\t\t\t} );\n\n\t\t} ).catch( onError );\n\n\t}\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t *\n\t * @private\n\t */\n\t_markDefs() {\n\n\t\tconst nodeDefs = this.json.nodes || [];\n\t\tconst skinDefs = this.json.skins || [];\n\t\tconst meshDefs = this.json.meshes || [];\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( let skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tconst joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( let i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Iterate over all nodes, marking references to shared resources,\n\t\t// as well as skeleton joints.\n\t\tfor ( let nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tconst nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.meshCache, nodeDef.mesh );\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tthis._addNodeRef( this.cameraCache, nodeDef.camera );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Counts references to shared node / Object3D resources. These resources\n\t * can be reused, or \"instantiated\", at multiple nodes in the scene\n\t * hierarchy. Mesh, Camera, and Light instances are instantiated and must\n\t * be marked. Non-scenegraph resources (like Materials, Geometries, and\n\t * Textures) can be reused directly and are not marked here.\n\t *\n\t * Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t *\n\t * @private\n\t * @param {Object} cache\n\t * @param {Object3D} index\n\t */\n\t_addNodeRef( cache, index ) {\n\n\t\tif ( index === undefined ) return;\n\n\t\tif ( cache.refs[ index ] === undefined ) {\n\n\t\t\tcache.refs[ index ] = cache.uses[ index ] = 0;\n\n\t\t}\n\n\t\tcache.refs[ index ] ++;\n\n\t}\n\n\t/**\n\t * Returns a reference to a shared resource, cloning it if necessary.\n\t *\n\t * @private\n\t * @param {Object} cache\n\t * @param {number} index\n\t * @param {Object} object\n\t * @return {Object}\n\t */\n\t_getNodeRef( cache, index, object ) {\n\n\t\tif ( cache.refs[ index ] <= 1 ) return object;\n\n\t\tconst ref = object.clone();\n\n\t\t// Propagates mappings to the cloned object, prevents mappings on the\n\t\t// original object from being lost.\n\t\tconst updateMappings = ( original, clone ) => {\n\n\t\t\tconst mappings = this.associations.get( original );\n\t\t\tif ( mappings != null ) {\n\n\t\t\t\tthis.associations.set( clone, mappings );\n\n\t\t\t}\n\n\t\t\tfor ( const [ i, child ] of original.children.entries() ) {\n\n\t\t\t\tupdateMappings( child, clone.children[ i ] );\n\n\t\t\t}\n\n\t\t};\n\n\t\tupdateMappings( object, ref );\n\n\t\tref.name += '_instance_' + ( cache.uses[ index ] ++ );\n\n\t\treturn ref;\n\n\t}\n\n\t_invokeOne( func ) {\n\n\t\tconst extensions = Object.values( this.plugins );\n\t\textensions.push( this );\n\n\t\tfor ( let i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tconst result = func( extensions[ i ] );\n\n\t\t\tif ( result ) return result;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t_invokeAll( func ) {\n\n\t\tconst extensions = Object.values( this.plugins );\n\t\textensions.unshift( this );\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0; i < extensions.length; i ++ ) {\n\n\t\t\tconst result = func( extensions[ i ] );\n\n\t\t\tif ( result ) pending.push( result );\n\n\t\t}\n\n\t\treturn pending;\n\n\t}\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t *\n\t * @private\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object3D|Material|THREE.Texture|AnimationClip|ArrayBuffer|Object>}\n\t */\n\tgetDependency( type, index ) {\n\n\t\tconst cacheKey = type + ':' + index;\n\t\tlet dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadNode && ext.loadNode( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMesh && ext.loadMesh( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadBufferView && ext.loadBufferView( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadMaterial && ext.loadMaterial( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadTexture && ext.loadTexture( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext.loadAnimation && ext.loadAnimation( index );\n\n\t\t\t\t\t} );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tdependency = this._invokeOne( function ( ext ) {\n\n\t\t\t\t\t\treturn ext != this && ext.getDependency && ext.getDependency( type, index );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tif ( ! dependency ) {\n\n\t\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t}\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t *\n\t * @private\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tgetDependencies( type ) {\n\n\t\tlet dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tconst parser = this;\n\t\t\tconst defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t *\n\t * @private\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tloadBuffer( bufferIndex ) {\n\n\t\tconst bufferDef = this.json.buffers[ bufferIndex ];\n\t\tconst loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tconst options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( LoaderUtils.resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t *\n\t * @private\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tloadBufferView( bufferViewIndex ) {\n\n\t\tconst bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tconst byteLength = bufferViewDef.byteLength || 0;\n\t\t\tconst byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t *\n\t * @private\n\t * @param {number} accessorIndex\n\t * @return {Promise<BufferAttribute|InterleavedBufferAttribute>}\n\t */\n\tloadAccessor( accessorIndex ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\n\t\tconst accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\tconst itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tconst TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\t\t\tconst normalized = accessorDef.normalized === true;\n\n\t\t\tconst array = new TypedArray( accessorDef.count * itemSize );\n\t\t\treturn Promise.resolve( new BufferAttribute( array, itemSize, normalized ) );\n\n\t\t}\n\n\t\tconst pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tconst bufferView = bufferViews[ 0 ];\n\n\t\t\tconst itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tconst TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tconst elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tconst itemBytes = elementBytes * itemSize;\n\t\t\tconst byteOffset = accessorDef.byteOffset || 0;\n\t\t\tconst byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tconst normalized = accessorDef.normalized === true;\n\t\t\tlet array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tconst ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tconst ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tlet ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tconst itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tconst TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tconst byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tconst byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tconst sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tconst sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\t// Ignore normalized since we copy from sparse\n\t\t\t\tbufferAttribute.normalized = false;\n\n\t\t\t\tfor ( let i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute.normalized = normalized;\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t *\n\t * @private\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture|null>}\n\t */\n\tloadTexture( textureIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst options = this.options;\n\t\tconst textureDef = json.textures[ textureIndex ];\n\t\tconst sourceIndex = textureDef.source;\n\t\tconst sourceDef = json.images[ sourceIndex ];\n\n\t\tlet loader = this.textureLoader;\n\n\t\tif ( sourceDef.uri ) {\n\n\t\t\tconst handler = options.manager.getHandler( sourceDef.uri );\n\t\t\tif ( handler !== null ) loader = handler;\n\n\t\t}\n\n\t\treturn this.loadTextureImage( textureIndex, sourceIndex, loader );\n\n\t}\n\n\tloadTextureImage( textureIndex, sourceIndex, loader ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\n\t\tconst textureDef = json.textures[ textureIndex ];\n\t\tconst sourceDef = json.images[ sourceIndex ];\n\n\t\tconst cacheKey = ( sourceDef.uri || sourceDef.bufferView ) + ':' + textureDef.sampler;\n\n\t\tif ( this.textureCache[ cacheKey ] ) {\n\n\t\t\t// See https://github.com/mrdoob/three.js/issues/21559.\n\t\t\treturn this.textureCache[ cacheKey ];\n\n\t\t}\n\n\t\tconst promise = this.loadImageSource( sourceIndex, loader ).then( function ( texture ) {\n\n\t\t\ttexture.flipY = false;\n\n\t\t\ttexture.name = textureDef.name || sourceDef.name || '';\n\n\t\t\tif ( texture.name === '' && typeof sourceDef.uri === 'string' && sourceDef.uri.startsWith( 'data:image/' ) === false ) {\n\n\t\t\t\ttexture.name = sourceDef.uri;\n\n\t\t\t}\n\n\t\t\tconst samplers = json.samplers || {};\n\t\t\tconst sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || RepeatWrapping;\n\t\t\ttexture.generateMipmaps = ! texture.isCompressedTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t\tparser.associations.set( texture, { textures: textureIndex } );\n\n\t\t\treturn texture;\n\n\t\t} ).catch( function () {\n\n\t\t\treturn null;\n\n\t\t} );\n\n\t\tthis.textureCache[ cacheKey ] = promise;\n\n\t\treturn promise;\n\n\t}\n\n\tloadImageSource( sourceIndex, loader ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\t\tconst options = this.options;\n\n\t\tif ( this.sourceCache[ sourceIndex ] !== undefined ) {\n\n\t\t\treturn this.sourceCache[ sourceIndex ].then( ( texture ) => texture.clone() );\n\n\t\t}\n\n\t\tconst sourceDef = json.images[ sourceIndex ];\n\n\t\tconst URL = self.URL || self.webkitURL;\n\n\t\tlet sourceURI = sourceDef.uri || '';\n\t\tlet isObjectURL = false;\n\n\t\tif ( sourceDef.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', sourceDef.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tconst blob = new Blob( [ bufferView ], { type: sourceDef.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t} else if ( sourceDef.uri === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Image ' + sourceIndex + ' is missing URI and bufferView' );\n\n\t\t}\n\n\t\tconst promise = Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tlet onLoad = resolve;\n\n\t\t\t\tif ( loader.isImageBitmapLoader === true ) {\n\n\t\t\t\t\tonLoad = function ( imageBitmap ) {\n\n\t\t\t\t\t\tconst texture = new Texture( imageBitmap );\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tresolve( texture );\n\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tloader.load( LoaderUtils.resolveURL( sourceURI, options.path ), onLoad, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( texture, sourceDef );\n\n\t\t\ttexture.userData.mimeType = sourceDef.mimeType || getImageURIMimeType( sourceDef.uri );\n\n\t\t\treturn texture;\n\n\t\t} ).catch( function ( error ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader: Couldn\\'t load texture', sourceURI );\n\t\t\tthrow error;\n\n\t\t} );\n\n\t\tthis.sourceCache[ sourceIndex ] = promise;\n\t\treturn promise;\n\n\t}\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t *\n\t * @private\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @param {string} [colorSpace]\n\t * @return {Promise<Texture>}\n\t */\n\tassignTexture( materialParams, mapName, mapDef, colorSpace ) {\n\n\t\tconst parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture ) return null;\n\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord > 0 ) {\n\n\t\t\t\ttexture = texture.clone();\n\t\t\t\ttexture.channel = mapDef.texCoord;\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tconst transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\tconst gltfReference = parser.associations.get( texture );\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\t\t\t\t\tparser.associations.set( texture, gltfReference );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = colorSpace;\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accommodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t *\n\t * @private\n\t * @param {Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tassignFinalMaterial( mesh ) {\n\n\t\tconst geometry = mesh.geometry;\n\t\tlet material = mesh.material;\n\n\t\tconst useDerivativeTangents = geometry.attributes.tangent === undefined;\n\t\tconst useVertexColors = geometry.attributes.color !== undefined;\n\t\tconst useFlatShading = geometry.attributes.normal === undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tconst cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tlet pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new PointsMaterial();\n\t\t\t\tMaterial.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tconst cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tlet lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new LineBasicMaterial();\n\t\t\t\tMaterial.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\tlineMaterial.map = material.map;\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useDerivativeTangents || useVertexColors || useFlatShading ) {\n\n\t\t\tlet cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( useDerivativeTangents ) cacheKey += 'derivative-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\n\t\t\tlet cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\n\t\t\t\tif ( useDerivativeTangents ) {\n\n\t\t\t\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\t\t\t\tif ( cachedMaterial.normalScale ) cachedMaterial.normalScale.y *= - 1;\n\t\t\t\t\tif ( cachedMaterial.clearcoatNormalScale ) cachedMaterial.clearcoatNormalScale.y *= - 1;\n\n\t\t\t\t}\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t\tthis.associations.set( cachedMaterial, this.associations.get( material ) );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t}\n\n\tgetMaterialType( /* materialIndex */ ) {\n\n\t\treturn MeshStandardMaterial;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t *\n\t * @private\n\t * @param {number} materialIndex\n\t * @return {Promise<Material>}\n\t */\n\tloadMaterial( materialIndex ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\t\tconst extensions = this.extensions;\n\t\tconst materialDef = json.materials[ materialIndex ];\n\n\t\tlet materialType;\n\t\tconst materialParams = {};\n\t\tconst materialExtensions = materialDef.extensions || {};\n\n\t\tconst pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tconst kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tconst metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tconst array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.setRGB( array[ 0 ], array[ 1 ], array[ 2 ], LinearSRGBColorSpace );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture, SRGBColorSpace ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialType = this._invokeOne( function ( ext ) {\n\n\t\t\t\treturn ext.getMaterialType && ext.getMaterialType( materialIndex );\n\n\t\t\t} );\n\n\t\t\tpending.push( Promise.all( this._invokeAll( function ( ext ) {\n\n\t\t\t\treturn ext.extendMaterialParams && ext.extendMaterialParams( materialIndex, materialParams );\n\n\t\t\t} ) ) );\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = DoubleSide;\n\n\t\t}\n\n\t\tconst alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/17706\n\t\t\tmaterialParams.depthWrite = false;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tconst scale = materialDef.normalTexture.scale;\n\n\t\t\t\tmaterialParams.normalScale.set( scale, scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tconst emissiveFactor = materialDef.emissiveFactor;\n\t\t\tmaterialParams.emissive = new Color().setRGB( emissiveFactor[ 0 ], emissiveFactor[ 1 ], emissiveFactor[ 2 ], LinearSRGBColorSpace );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture, SRGBColorSpace ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tconst material = new materialType( materialParams );\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tparser.associations.set( material, { materials: materialIndex } );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * When Object3D instances are targeted by animation, they need unique names.\n\t *\n\t * @private\n\t * @param {string} originalName\n\t * @return {string}\n\t */\n\tcreateUniqueName( originalName ) {\n\n\t\tconst sanitizedName = PropertyBinding.sanitizeNodeName( originalName || '' );\n\n\t\tif ( sanitizedName in this.nodeNamesUsed ) {\n\n\t\t\treturn sanitizedName + '_' + ( ++ this.nodeNamesUsed[ sanitizedName ] );\n\n\t\t} else {\n\n\t\t\tthis.nodeNamesUsed[ sanitizedName ] = 0;\n\n\t\t\treturn sanitizedName;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @private\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<BufferGeometry>>}\n\t */\n\tloadGeometries( primitives ) {\n\n\t\tconst parser = this;\n\t\tconst extensions = this.extensions;\n\t\tconst cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tconst primitive = primitives[ i ];\n\t\t\tconst cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tconst cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tlet geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t *\n\t * @private\n\t * @param {number} meshIndex\n\t * @return {Promise<Group|Mesh|SkinnedMesh|Line|Points>}\n\t */\n\tloadMesh( meshIndex ) {\n\n\t\tconst parser = this;\n\t\tconst json = this.json;\n\t\tconst extensions = this.extensions;\n\n\t\tconst meshDef = json.meshes[ meshIndex ];\n\t\tconst primitives = meshDef.primitives;\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tconst material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tconst materials = results.slice( 0, results.length - 1 );\n\t\t\tconst geometries = results[ results.length - 1 ];\n\n\t\t\tconst meshes = [];\n\n\t\t\tfor ( let i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tconst geometry = geometries[ i ];\n\t\t\t\tconst primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tconst material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See ._markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true ) {\n\n\t\t\t\t\t\t// normalize skin weights to fix malformed assets (see #15319)\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = parser.createUniqueName( meshDef.name || ( 'mesh_' + meshIndex ) );\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tif ( primitive.extensions ) addUnknownExtensionsToUserData( extensions, mesh, primitive );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tparser.associations.set( meshes[ i ], {\n\t\t\t\t\tmeshes: meshIndex,\n\t\t\t\t\tprimitives: i\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\tif ( meshDef.extensions ) addUnknownExtensionsToUserData( extensions, meshes[ 0 ], meshDef );\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tconst group = new Group();\n\n\t\t\tif ( meshDef.extensions ) addUnknownExtensionsToUserData( extensions, group, meshDef );\n\n\t\t\tparser.associations.set( group, { meshes: meshIndex } );\n\n\t\t\tfor ( let i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t *\n\t * @private\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tloadCamera( cameraIndex ) {\n\n\t\tlet camera;\n\t\tconst cameraDef = this.json.cameras[ cameraIndex ];\n\t\tconst params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new PerspectiveCamera( MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new OrthographicCamera( - params.xmag, params.xmag, params.ymag, - params.ymag, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = this.createUniqueName( cameraDef.name );\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t *\n\t * @private\n\t * @param {number} skinIndex\n\t * @return {Promise<Skeleton>}\n\t */\n\tloadSkin( skinIndex ) {\n\n\t\tconst skinDef = this.json.skins[ skinIndex ];\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0, il = skinDef.joints.length; i < il; i ++ ) {\n\n\t\t\tpending.push( this._loadNodeShallow( skinDef.joints[ i ] ) );\n\n\t\t}\n\n\t\tif ( skinDef.inverseBindMatrices !== undefined ) {\n\n\t\t\tpending.push( this.getDependency( 'accessor', skinDef.inverseBindMatrices ) );\n\n\t\t} else {\n\n\t\t\tpending.push( null );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tconst inverseBindMatrices = results.pop();\n\t\t\tconst jointNodes = results;\n\n\t\t\t// Note that bones (joint nodes) may or may not be in the\n\t\t\t// scene graph at this time.\n\n\t\t\tconst bones = [];\n\t\t\tconst boneInverses = [];\n\n\t\t\tfor ( let i = 0, il = jointNodes.length; i < il; i ++ ) {\n\n\t\t\t\tconst jointNode = jointNodes[ i ];\n\n\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\tconst mat = new Matrix4();\n\n\t\t\t\t\tif ( inverseBindMatrices !== null ) {\n\n\t\t\t\t\t\tmat.fromArray( inverseBindMatrices.array, i * 16 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinDef.joints[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Skeleton( bones, boneInverses );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t *\n\t * @private\n\t * @param {number} animationIndex\n\t * @return {Promise<AnimationClip>}\n\t */\n\tloadAnimation( animationIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst parser = this;\n\n\t\tconst animationDef = json.animations[ animationIndex ];\n\t\tconst animationName = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\tconst pendingNodes = [];\n\t\tconst pendingInputAccessors = [];\n\t\tconst pendingOutputAccessors = [];\n\t\tconst pendingSamplers = [];\n\t\tconst pendingTargets = [];\n\n\t\tfor ( let i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tconst channel = animationDef.channels[ i ];\n\t\t\tconst sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tconst target = channel.target;\n\t\t\tconst name = target.node;\n\t\t\tconst input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tconst output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tif ( target.node === undefined ) continue;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tconst nodes = dependencies[ 0 ];\n\t\t\tconst inputAccessors = dependencies[ 1 ];\n\t\t\tconst outputAccessors = dependencies[ 2 ];\n\t\t\tconst samplers = dependencies[ 3 ];\n\t\t\tconst targets = dependencies[ 4 ];\n\n\t\t\tconst tracks = [];\n\n\t\t\tfor ( let i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tconst node = nodes[ i ];\n\t\t\t\tconst inputAccessor = inputAccessors[ i ];\n\t\t\t\tconst outputAccessor = outputAccessors[ i ];\n\t\t\t\tconst sampler = samplers[ i ];\n\t\t\t\tconst target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tif ( node.updateMatrix ) {\n\n\t\t\t\t\tnode.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tconst createdTracks = parser._createAnimationTracks( node, inputAccessor, outputAccessor, sampler, target );\n\n\t\t\t\tif ( createdTracks ) {\n\n\t\t\t\t\tfor ( let k = 0; k < createdTracks.length; k ++ ) {\n\n\t\t\t\t\t\ttracks.push( createdTracks[ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( animationName, undefined, tracks );\n\n\t\t} );\n\n\t}\n\n\tcreateNodeMesh( nodeIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst parser = this;\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\n\t\tif ( nodeDef.mesh === undefined ) return null;\n\n\t\treturn parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\tconst node = parser._getNodeRef( parser.meshCache, nodeDef.mesh, mesh );\n\n\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\tfor ( let i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t *\n\t * @private\n\t * @param {number} nodeIndex\n\t * @return {Promise<Object3D>}\n\t */\n\tloadNode( nodeIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst parser = this;\n\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\n\t\tconst nodePending = parser._loadNodeShallow( nodeIndex );\n\n\t\tconst childPending = [];\n\t\tconst childrenDef = nodeDef.children || [];\n\n\t\tfor ( let i = 0, il = childrenDef.length; i < il; i ++ ) {\n\n\t\t\tchildPending.push( parser.getDependency( 'node', childrenDef[ i ] ) );\n\n\t\t}\n\n\t\tconst skeletonPending = nodeDef.skin === undefined\n\t\t\t? Promise.resolve( null )\n\t\t\t: parser.getDependency( 'skin', nodeDef.skin );\n\n\t\treturn Promise.all( [\n\t\t\tnodePending,\n\t\t\tPromise.all( childPending ),\n\t\t\tskeletonPending\n\t\t] ).then( function ( results ) {\n\n\t\t\tconst node = results[ 0 ];\n\t\t\tconst children = results[ 1 ];\n\t\t\tconst skeleton = results[ 2 ];\n\n\t\t\tif ( skeleton !== null ) {\n\n\t\t\t\t// This full traverse should be fine because\n\t\t\t\t// child glTF nodes have not been added to this node yet.\n\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\tif ( ! mesh.isSkinnedMesh ) return;\n\n\t\t\t\t\tmesh.bind( skeleton, _identityMatrix );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\tnode.add( children[ i ] );\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t}\n\n\t// ._loadNodeShallow() parses a single node.\n\t// skin and child nodes are created and added in .loadNode() (no '_' prefix).\n\t_loadNodeShallow( nodeIndex ) {\n\n\t\tconst json = this.json;\n\t\tconst extensions = this.extensions;\n\t\tconst parser = this;\n\n\t\t// This method is called from .loadNode() and .loadSkin().\n\t\t// Cache a node to avoid duplication.\n\n\t\tif ( this.nodeCache[ nodeIndex ] !== undefined ) {\n\n\t\t\treturn this.nodeCache[ nodeIndex ];\n\n\t\t}\n\n\t\tconst nodeDef = json.nodes[ nodeIndex ];\n\n\t\t// reserve node's name before its dependencies, so the root has the intended name.\n\t\tconst nodeName = nodeDef.name ? parser.createUniqueName( nodeDef.name ) : '';\n\n\t\tconst pending = [];\n\n\t\tconst meshPromise = parser._invokeOne( function ( ext ) {\n\n\t\t\treturn ext.createNodeMesh && ext.createNodeMesh( nodeIndex );\n\n\t\t} );\n\n\t\tif ( meshPromise ) {\n\n\t\t\tpending.push( meshPromise );\n\n\t\t}\n\n\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ).then( function ( camera ) {\n\n\t\t\t\treturn parser._getNodeRef( parser.cameraCache, nodeDef.camera, camera );\n\n\t\t\t} ) );\n\n\t\t}\n\n\t\tparser._invokeAll( function ( ext ) {\n\n\t\t\treturn ext.createNodeAttachment && ext.createNodeAttachment( nodeIndex );\n\n\t\t} ).forEach( function ( promise ) {\n\n\t\t\tpending.push( promise );\n\n\t\t} );\n\n\t\tthis.nodeCache[ nodeIndex ] = Promise.all( pending ).then( function ( objects ) {\n\n\t\t\tlet node;\n\n\t\t\t// .isBone isn't in glTF spec. See ._markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( let i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = nodeName;\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tconst matrix = new Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ! parser.associations.has( node ) ) {\n\n\t\t\t\tparser.associations.set( node, {} );\n\n\t\t\t} else if ( nodeDef.mesh !== undefined && parser.meshCache.refs[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\tconst mapping = parser.associations.get( node );\n\t\t\t\tparser.associations.set( node, { ...mapping } );\n\n\t\t\t}\n\n\t\t\tparser.associations.get( node ).nodes = nodeIndex;\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t\treturn this.nodeCache[ nodeIndex ];\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t *\n\t * @private\n\t * @param {number} sceneIndex\n\t * @return {Promise<Group>}\n\t */\n\tloadScene( sceneIndex ) {\n\n\t\tconst extensions = this.extensions;\n\t\tconst sceneDef = this.json.scenes[ sceneIndex ];\n\t\tconst parser = this;\n\n\t\t// Loader returns Group, not Scene.\n\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\tconst scene = new Group();\n\t\tif ( sceneDef.name ) scene.name = parser.createUniqueName( sceneDef.name );\n\n\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\tconst nodeIds = sceneDef.nodes || [];\n\n\t\tconst pending = [];\n\n\t\tfor ( let i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\tpending.push( parser.getDependency( 'node', nodeIds[ i ] ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( nodes ) {\n\n\t\t\tfor ( let i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tscene.add( nodes[ i ] );\n\n\t\t\t}\n\n\t\t\t// Removes dangling associations, associations that reference a node that\n\t\t\t// didn't make it into the scene.\n\t\t\tconst reduceAssociations = ( node ) => {\n\n\t\t\t\tconst reducedAssociations = new Map();\n\n\t\t\t\tfor ( const [ key, value ] of parser.associations ) {\n\n\t\t\t\t\tif ( key instanceof Material || key instanceof Texture ) {\n\n\t\t\t\t\t\treducedAssociations.set( key, value );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tnode.traverse( ( node ) => {\n\n\t\t\t\t\tconst mappings = parser.associations.get( node );\n\n\t\t\t\t\tif ( mappings != null ) {\n\n\t\t\t\t\t\treducedAssociations.set( node, mappings );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\treturn reducedAssociations;\n\n\t\t\t};\n\n\t\t\tparser.associations = reduceAssociations( scene );\n\n\t\t\treturn scene;\n\n\t\t} );\n\n\t}\n\n\t_createAnimationTracks( node, inputAccessor, outputAccessor, sampler, target ) {\n\n\t\tconst tracks = [];\n\n\t\tconst targetName = node.name ? node.name : node.uuid;\n\t\tconst targetNames = [];\n\n\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} else {\n\n\t\t\ttargetNames.push( targetName );\n\n\t\t}\n\n\t\tlet TypedKeyframeTrack;\n\n\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\tbreak;\n\n\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\tTypedKeyframeTrack = QuaternionKeyframeTrack;\n\t\t\t\tbreak;\n\n\t\t\tcase PATH_PROPERTIES.translation:\n\t\t\tcase PATH_PROPERTIES.scale:\n\n\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tswitch ( outputAccessor.itemSize ) {\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tTypedKeyframeTrack = NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\tcase 3:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tTypedKeyframeTrack = VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tconst interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : InterpolateLinear;\n\n\n\t\tconst outputArray = this._getArrayFromAccessor( outputAccessor );\n\n\t\tfor ( let j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\tconst track = new TypedKeyframeTrack(\n\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\tinputAccessor.array,\n\t\t\t\toutputArray,\n\t\t\t\tinterpolation\n\t\t\t);\n\n\t\t\t// Override interpolation with custom factory method.\n\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\tthis._createCubicSplineTrackInterpolant( track );\n\n\t\t\t}\n\n\t\t\ttracks.push( track );\n\n\t\t}\n\n\t\treturn tracks;\n\n\t}\n\n\t_getArrayFromAccessor( accessor ) {\n\n\t\tlet outputArray = accessor.array;\n\n\t\tif ( accessor.normalized ) {\n\n\t\t\tconst scale = getNormalizedComponentScale( outputArray.constructor );\n\t\t\tconst scaled = new Float32Array( outputArray.length );\n\n\t\t\tfor ( let j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t}\n\n\t\t\toutputArray = scaled;\n\n\t\t}\n\n\t\treturn outputArray;\n\n\t}\n\n\t_createCubicSplineTrackInterpolant( track ) {\n\n\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\tconst interpolantType = ( this instanceof QuaternionKeyframeTrack ) ? GLTFCubicSplineQuaternionInterpolant : GLTFCubicSplineInterpolant;\n\n\t\t\treturn new interpolantType( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t};\n\n\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t}\n\n}\n\n/**\n *\n * @private\n * @param {BufferGeometry} geometry\n * @param {GLTF.Primitive} primitiveDef\n * @param {GLTFParser} parser\n */\nfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\tconst attributes = primitiveDef.attributes;\n\n\tconst box = new Box3();\n\n\tif ( attributes.POSITION !== undefined ) {\n\n\t\tconst accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\tconst min = accessor.min;\n\t\tconst max = accessor.max;\n\n\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\tbox.set(\n\t\t\t\tnew Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\tnew Vector3( max[ 0 ], max[ 1 ], max[ 2 ] )\n\t\t\t);\n\n\t\t\tif ( accessor.normalized ) {\n\n\t\t\t\tconst boxScale = getNormalizedComponentScale( WEBGL_COMPONENT_TYPES[ accessor.componentType ] );\n\t\t\t\tbox.min.multiplyScalar( boxScale );\n\t\t\t\tbox.max.multiplyScalar( boxScale );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\treturn;\n\n\t\t}\n\n\t} else {\n\n\t\treturn;\n\n\t}\n\n\tconst targets = primitiveDef.targets;\n\n\tif ( targets !== undefined ) {\n\n\t\tconst maxDisplacement = new Vector3();\n\t\tconst vector = new Vector3();\n\n\t\tfor ( let i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tconst target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\tconst accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\tconst min = accessor.min;\n\t\t\t\tconst max = accessor.max;\n\n\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\n\t\t\t\t\tif ( accessor.normalized ) {\n\n\t\t\t\t\t\tconst boxScale = getNormalizedComponentScale( WEBGL_COMPONENT_TYPES[ accessor.componentType ] );\n\t\t\t\t\t\tvector.multiplyScalar( boxScale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Note: this assumes that the sum of all weights is at most 1. This isn't quite correct - it's more conservative\n\t\t\t\t\t// to assume that each target can have a max weight of 1. However, for some use cases - notably, when morph targets\n\t\t\t\t\t// are used to implement key-frame animations and as such only two are active at a time - this results in very large\n\t\t\t\t\t// boxes. So for now we make a box that's sometimes a touch too small but is hopefully mostly of reasonable size.\n\t\t\t\t\tmaxDisplacement.max( vector );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// As per comment above this box isn't conservative, but has a reasonable size for a very large number of morph targets.\n\t\tbox.expandByVector( maxDisplacement );\n\n\t}\n\n\tgeometry.boundingBox = box;\n\n\tconst sphere = new Sphere();\n\n\tbox.getCenter( sphere.center );\n\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\tgeometry.boundingSphere = sphere;\n\n}\n\n/**\n *\n * @private\n * @param {BufferGeometry} geometry\n * @param {GLTF.Primitive} primitiveDef\n * @param {GLTFParser} parser\n * @return {Promise<BufferGeometry>}\n */\nfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\tconst attributes = primitiveDef.attributes;\n\n\tconst pending = [];\n\n\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t.then( function ( accessor ) {\n\n\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t} );\n\n\t}\n\n\tfor ( const gltfAttributeName in attributes ) {\n\n\t\tconst threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t}\n\n\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\tconst accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\tgeometry.setIndex( accessor );\n\n\t\t} );\n\n\t\tpending.push( accessor );\n\n\t}\n\n\tif ( ColorManagement.workingColorSpace !== LinearSRGBColorSpace && 'COLOR_0' in attributes ) {\n\n\t\tconsole.warn( `THREE.GLTFLoader: Converting vertex colors from \"srgb-linear\" to \"${ColorManagement.workingColorSpace}\" not supported.` );\n\n\t}\n\n\tassignExtrasToUserData( geometry, primitiveDef );\n\n\tcomputeBounds( geometry, primitiveDef, parser );\n\n\treturn Promise.all( pending ).then( function () {\n\n\t\treturn primitiveDef.targets !== undefined\n\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t: geometry;\n\n\t} );\n\n}\n\n/**\n * Loader result of `GLTFLoader`.\n *\n * @typedef {Object} GLTFLoader~LoadObject\n * @property {Array<AnimationClip>} animations - An array of animation clips.\n * @property {Object} asset - Meta data about the loaded asset.\n * @property {Array<Camera>} cameras - An array of cameras.\n * @property {GLTFParser} parser - A reference to the internal parser.\n * @property {Group} scene - The default scene.\n * @property {Array<Group>} scenes - glTF assets might define multiple scenes.\n * @property {Object} userData - Additional data.\n **/\n\nexport { GLTFLoader };\n","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tColor,\n\tColorManagement,\n\tFileLoader,\n\tLoader,\n\tLinearSRGBColorSpace,\n\tSRGBColorSpace\n} from 'three';\n\nconst _taskCache = new WeakMap();\n\n/**\n * A loader for the Draco format.\n *\n * [Draco]{@link https://google.github.io/draco/} is an open source library for compressing\n * and decompressing 3D meshes and point clouds. Compressed geometry can be significantly smaller,\n * at the cost of additional decoding time on the client device.\n *\n * Standalone Draco files have a `.drc` extension, and contain vertex positions, normals, colors,\n * and other attributes. Draco files do not contain materials, textures, animation, or node hierarchies –\n * to use these features, embed Draco geometry inside of a glTF file. A normal glTF file can be converted\n * to a Draco-compressed glTF file using [glTF-Pipeline]{@link https://github.com/CesiumGS/gltf-pipeline}.\n * When using Draco with glTF, an instance of `DRACOLoader` will be used internally by {@link GLTFLoader}.\n *\n * It is recommended to create one DRACOLoader instance and reuse it to avoid loading and creating\n * multiple decoder instances.\n *\n * `DRACOLoader` will automatically use either the JS or the WASM decoding library, based on\n * browser capabilities.\n *\n * ```js\n * const loader = new DRACOLoader();\n * loader.setDecoderPath( '/examples/jsm/libs/draco/' );\n *\n * const geometry = await dracoLoader.loadAsync( 'models/draco/bunny.drc' );\n * geometry.computeVertexNormals(); // optional\n *\n * dracoLoader.dispose();\n * ```\n *\n * @augments Loader\n * @three_import import { DRACOLoader } from 'three/addons/loaders/DRACOLoader.js';\n */\nclass DRACOLoader extends Loader {\n\n\t/**\n\t * Constructs a new Draco loader.\n\t *\n\t * @param {LoadingManager} [manager] - The loading manager.\n\t */\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.decoderPath = '';\n\t\tthis.decoderConfig = {};\n\t\tthis.decoderBinary = null;\n\t\tthis.decoderPending = null;\n\n\t\tthis.workerLimit = 4;\n\t\tthis.workerPool = [];\n\t\tthis.workerNextTaskID = 1;\n\t\tthis.workerSourceURL = '';\n\n\t\tthis.defaultAttributeIDs = {\n\t\t\tposition: 'POSITION',\n\t\t\tnormal: 'NORMAL',\n\t\t\tcolor: 'COLOR',\n\t\t\tuv: 'TEX_COORD'\n\t\t};\n\t\tthis.defaultAttributeTypes = {\n\t\t\tposition: 'Float32Array',\n\t\t\tnormal: 'Float32Array',\n\t\t\tcolor: 'Float32Array',\n\t\t\tuv: 'Float32Array'\n\t\t};\n\n\t}\n\n\t/**\n\t * Provides configuration for the decoder libraries. Configuration cannot be changed after decoding begins.\n\t *\n\t * @param {string} path - The decoder path.\n\t * @return {DRACOLoader} A reference to this loader.\n\t */\n\tsetDecoderPath( path ) {\n\n\t\tthis.decoderPath = path;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Provides configuration for the decoder libraries. Configuration cannot be changed after decoding begins.\n\t *\n\t * @param {{type:('js'|'wasm')}} config - The decoder config.\n\t * @return {DRACOLoader} A reference to this loader.\n\t */\n\tsetDecoderConfig( config ) {\n\n\t\tthis.decoderConfig = config;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the maximum number of Web Workers to be used during decoding.\n\t * A lower limit may be preferable if workers are also for other tasks in the application.\n\t *\n\t * @param {number} workerLimit - The worker limit.\n\t * @return {DRACOLoader} A reference to this loader.\n\t */\n\tsetWorkerLimit( workerLimit ) {\n\n\t\tthis.workerLimit = workerLimit;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Starts loading from the given URL and passes the loaded Draco asset\n\t * to the `onLoad()` callback.\n\t *\n\t * @param {string} url - The path/URL of the file to be loaded. This can also be a data URI.\n\t * @param {function(BufferGeometry)} onLoad - Executed when the loading process has been finished.\n\t * @param {onProgressCallback} onProgress - Executed while the loading is in progress.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst loader = new FileLoader( this.manager );\n\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tloader.load( url, ( buffer ) => {\n\n\t\t\tthis.parse( buffer, onLoad, onError );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\t/**\n\t * Parses the given Draco data.\n\t *\n\t * @param {ArrayBuffer} buffer - The raw Draco data as an array buffer.\n\t * @param {function(BufferGeometry)} onLoad - Executed when the loading/parsing process has been finished.\n\t * @param {onErrorCallback} onError - Executed when errors occur.\n\t */\n\tparse( buffer, onLoad, onError = ()=>{} ) {\n\n\t\tthis.decodeDracoFile( buffer, onLoad, null, null, SRGBColorSpace, onError ).catch( onError );\n\n\t}\n\n\t//\n\n\tdecodeDracoFile( buffer, callback, attributeIDs, attributeTypes, vertexColorSpace = LinearSRGBColorSpace, onError = () => {} ) {\n\n\t\tconst taskConfig = {\n\t\t\tattributeIDs: attributeIDs || this.defaultAttributeIDs,\n\t\t\tattributeTypes: attributeTypes || this.defaultAttributeTypes,\n\t\t\tuseUniqueIDs: !! attributeIDs,\n\t\t\tvertexColorSpace: vertexColorSpace,\n\t\t};\n\n\t\treturn this.decodeGeometry( buffer, taskConfig ).then( callback ).catch( onError );\n\n\t}\n\n\tdecodeGeometry( buffer, taskConfig ) {\n\n\t\tconst taskKey = JSON.stringify( taskConfig );\n\n\t\t// Check for an existing task using this buffer. A transferred buffer cannot be transferred\n\t\t// again from this thread.\n\t\tif ( _taskCache.has( buffer ) ) {\n\n\t\t\tconst cachedTask = _taskCache.get( buffer );\n\n\t\t\tif ( cachedTask.key === taskKey ) {\n\n\t\t\t\treturn cachedTask.promise;\n\n\t\t\t} else if ( buffer.byteLength === 0 ) {\n\n\t\t\t\t// Technically, it would be possible to wait for the previous task to complete,\n\t\t\t\t// transfer the buffer back, and decode again with the second configuration. That\n\t\t\t\t// is complex, and I don't know of any reason to decode a Draco buffer twice in\n\t\t\t\t// different ways, so this is left unimplemented.\n\t\t\t\tthrow new Error(\n\n\t\t\t\t\t'THREE.DRACOLoader: Unable to re-decode a buffer with different ' +\n\t\t\t\t\t'settings. Buffer has already been transferred.'\n\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tlet worker;\n\t\tconst taskID = this.workerNextTaskID ++;\n\t\tconst taskCost = buffer.byteLength;\n\n\t\t// Obtain a worker and assign a task, and construct a geometry instance\n\t\t// when the task completes.\n\t\tconst geometryPending = this._getWorker( taskID, taskCost )\n\t\t\t.then( ( _worker ) => {\n\n\t\t\t\tworker = _worker;\n\n\t\t\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\t\t\tworker._callbacks[ taskID ] = { resolve, reject };\n\n\t\t\t\t\tworker.postMessage( { type: 'decode', id: taskID, taskConfig, buffer }, [ buffer ] );\n\n\t\t\t\t\t// this.debug();\n\n\t\t\t\t} );\n\n\t\t\t} )\n\t\t\t.then( ( message ) => this._createGeometry( message.geometry ) );\n\n\t\t// Remove task from the task list.\n\t\t// Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\t\tgeometryPending\n\t\t\t.catch( () => true )\n\t\t\t.then( () => {\n\n\t\t\t\tif ( worker && taskID ) {\n\n\t\t\t\t\tthis._releaseTask( worker, taskID );\n\n\t\t\t\t\t// this.debug();\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t// Cache the task result.\n\t\t_taskCache.set( buffer, {\n\n\t\t\tkey: taskKey,\n\t\t\tpromise: geometryPending\n\n\t\t} );\n\n\t\treturn geometryPending;\n\n\t}\n\n\t_createGeometry( geometryData ) {\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tif ( geometryData.index ) {\n\n\t\t\tgeometry.setIndex( new BufferAttribute( geometryData.index.array, 1 ) );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryData.attributes.length; i ++ ) {\n\n\t\t\tconst result = geometryData.attributes[ i ];\n\t\t\tconst name = result.name;\n\t\t\tconst array = result.array;\n\t\t\tconst itemSize = result.itemSize;\n\n\t\t\tconst attribute = new BufferAttribute( array, itemSize );\n\n\t\t\tif ( name === 'color' ) {\n\n\t\t\t\tthis._assignVertexColorSpace( attribute, result.vertexColorSpace );\n\n\t\t\t\tattribute.normalized = ( array instanceof Float32Array ) === false;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( name, attribute );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n\t_assignVertexColorSpace( attribute, inputColorSpace ) {\n\n\t\t// While .drc files do not specify colorspace, the only 'official' tooling\n\t\t// is PLY and OBJ converters, which use sRGB. We'll assume sRGB when a .drc\n\t\t// file is passed into .load() or .parse(). GLTFLoader uses internal APIs\n\t\t// to decode geometry, and vertex colors are already Linear-sRGB in there.\n\n\t\tif ( inputColorSpace !== SRGBColorSpace ) return;\n\n\t\tconst _color = new Color();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\t_color.fromBufferAttribute( attribute, i );\n\t\t\tColorManagement.colorSpaceToWorking( _color, SRGBColorSpace );\n\t\t\tattribute.setXYZ( i, _color.r, _color.g, _color.b );\n\n\t\t}\n\n\t}\n\n\t_loadLibrary( url, responseType ) {\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.decoderPath );\n\t\tloader.setResponseType( responseType );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tloader.load( url, resolve, undefined, reject );\n\n\t\t} );\n\n\t}\n\n\tpreload() {\n\n\t\tthis._initDecoder();\n\n\t\treturn this;\n\n\t}\n\n\t_initDecoder() {\n\n\t\tif ( this.decoderPending ) return this.decoderPending;\n\n\t\tconst useJS = typeof WebAssembly !== 'object' || this.decoderConfig.type === 'js';\n\t\tconst librariesPending = [];\n\n\t\tif ( useJS ) {\n\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.js', 'text' ) );\n\n\t\t} else {\n\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_wasm_wrapper.js', 'text' ) );\n\t\t\tlibrariesPending.push( this._loadLibrary( 'draco_decoder.wasm', 'arraybuffer' ) );\n\n\t\t}\n\n\t\tthis.decoderPending = Promise.all( librariesPending )\n\t\t\t.then( ( libraries ) => {\n\n\t\t\t\tconst jsContent = libraries[ 0 ];\n\n\t\t\t\tif ( ! useJS ) {\n\n\t\t\t\t\tthis.decoderConfig.wasmBinary = libraries[ 1 ];\n\n\t\t\t\t}\n\n\t\t\t\tconst fn = DRACOWorker.toString();\n\n\t\t\t\tconst body = [\n\t\t\t\t\t'/* draco decoder */',\n\t\t\t\t\tjsContent,\n\t\t\t\t\t'',\n\t\t\t\t\t'/* worker */',\n\t\t\t\t\tfn.substring( fn.indexOf( '{' ) + 1, fn.lastIndexOf( '}' ) )\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tthis.workerSourceURL = URL.createObjectURL( new Blob( [ body ] ) );\n\n\t\t\t} );\n\n\t\treturn this.decoderPending;\n\n\t}\n\n\t_getWorker( taskID, taskCost ) {\n\n\t\treturn this._initDecoder().then( () => {\n\n\t\t\tif ( this.workerPool.length < this.workerLimit ) {\n\n\t\t\t\tconst worker = new Worker( this.workerSourceURL );\n\n\t\t\t\tworker._callbacks = {};\n\t\t\t\tworker._taskCosts = {};\n\t\t\t\tworker._taskLoad = 0;\n\n\t\t\t\tworker.postMessage( { type: 'init', decoderConfig: this.decoderConfig } );\n\n\t\t\t\tworker.onmessage = function ( e ) {\n\n\t\t\t\t\tconst message = e.data;\n\n\t\t\t\t\tswitch ( message.type ) {\n\n\t\t\t\t\t\tcase 'decode':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].resolve( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'error':\n\t\t\t\t\t\t\tworker._callbacks[ message.id ].reject( message );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.DRACOLoader: Unexpected message, \"' + message.type + '\"' );\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\tthis.workerPool.push( worker );\n\n\t\t\t} else {\n\n\t\t\t\tthis.workerPool.sort( function ( a, b ) {\n\n\t\t\t\t\treturn a._taskLoad > b._taskLoad ? - 1 : 1;\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tconst worker = this.workerPool[ this.workerPool.length - 1 ];\n\t\t\tworker._taskCosts[ taskID ] = taskCost;\n\t\t\tworker._taskLoad += taskCost;\n\t\t\treturn worker;\n\n\t\t} );\n\n\t}\n\n\t_releaseTask( worker, taskID ) {\n\n\t\tworker._taskLoad -= worker._taskCosts[ taskID ];\n\t\tdelete worker._callbacks[ taskID ];\n\t\tdelete worker._taskCosts[ taskID ];\n\n\t}\n\n\tdebug() {\n\n\t\tconsole.log( 'Task load: ', this.workerPool.map( ( worker ) => worker._taskLoad ) );\n\n\t}\n\n\tdispose() {\n\n\t\tfor ( let i = 0; i < this.workerPool.length; ++ i ) {\n\n\t\t\tthis.workerPool[ i ].terminate();\n\n\t\t}\n\n\t\tthis.workerPool.length = 0;\n\n\t\tif ( this.workerSourceURL !== '' ) {\n\n\t\t\tURL.revokeObjectURL( this.workerSourceURL );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/* WEB WORKER */\n\nfunction DRACOWorker() {\n\n\tlet decoderConfig;\n\tlet decoderPending;\n\n\tonmessage = function ( e ) {\n\n\t\tconst message = e.data;\n\n\t\tswitch ( message.type ) {\n\n\t\t\tcase 'init':\n\t\t\t\tdecoderConfig = message.decoderConfig;\n\t\t\t\tdecoderPending = new Promise( function ( resolve/*, reject*/ ) {\n\n\t\t\t\t\tdecoderConfig.onModuleLoaded = function ( draco ) {\n\n\t\t\t\t\t\t// Module is Promise-like. Wrap before resolving to avoid loop.\n\t\t\t\t\t\tresolve( { draco: draco } );\n\n\t\t\t\t\t};\n\n\t\t\t\t\tDracoDecoderModule( decoderConfig ); // eslint-disable-line no-undef\n\n\t\t\t\t} );\n\t\t\t\tbreak;\n\n\t\t\tcase 'decode':\n\t\t\t\tconst buffer = message.buffer;\n\t\t\t\tconst taskConfig = message.taskConfig;\n\t\t\t\tdecoderPending.then( ( module ) => {\n\n\t\t\t\t\tconst draco = module.draco;\n\t\t\t\t\tconst decoder = new draco.Decoder();\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\tconst geometry = decodeGeometry( draco, decoder, new Int8Array( buffer ), taskConfig );\n\n\t\t\t\t\t\tconst buffers = geometry.attributes.map( ( attr ) => attr.array.buffer );\n\n\t\t\t\t\t\tif ( geometry.index ) buffers.push( geometry.index.array.buffer );\n\n\t\t\t\t\t\tself.postMessage( { type: 'decode', id: message.id, geometry }, buffers );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tconsole.error( error );\n\n\t\t\t\t\t\tself.postMessage( { type: 'error', id: message.id, error: error.message } );\n\n\t\t\t\t\t} finally {\n\n\t\t\t\t\t\tdraco.destroy( decoder );\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t};\n\n\tfunction decodeGeometry( draco, decoder, array, taskConfig ) {\n\n\t\tconst attributeIDs = taskConfig.attributeIDs;\n\t\tconst attributeTypes = taskConfig.attributeTypes;\n\n\t\tlet dracoGeometry;\n\t\tlet decodingStatus;\n\n\t\tconst geometryType = decoder.GetEncodedGeometryType( array );\n\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\n\n\t\t\tdracoGeometry = new draco.Mesh();\n\t\t\tdecodingStatus = decoder.DecodeArrayToMesh( array, array.byteLength, dracoGeometry );\n\n\t\t} else if ( geometryType === draco.POINT_CLOUD ) {\n\n\t\t\tdracoGeometry = new draco.PointCloud();\n\t\t\tdecodingStatus = decoder.DecodeArrayToPointCloud( array, array.byteLength, dracoGeometry );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Unexpected geometry type.' );\n\n\t\t}\n\n\t\tif ( ! decodingStatus.ok() || dracoGeometry.ptr === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.DRACOLoader: Decoding failed: ' + decodingStatus.error_msg() );\n\n\t\t}\n\n\t\tconst geometry = { index: null, attributes: [] };\n\n\t\t// Gather all vertex attributes.\n\t\tfor ( const attributeName in attributeIDs ) {\n\n\t\t\tconst attributeType = self[ attributeTypes[ attributeName ] ];\n\n\t\t\tlet attribute;\n\t\t\tlet attributeID;\n\n\t\t\t// A Draco file may be created with default vertex attributes, whose attribute IDs\n\t\t\t// are mapped 1:1 from their semantic name (POSITION, NORMAL, ...). Alternatively,\n\t\t\t// a Draco file may contain a custom set of attributes, identified by known unique\n\t\t\t// IDs. glTF files always do the latter, and `.drc` files typically do the former.\n\t\t\tif ( taskConfig.useUniqueIDs ) {\n\n\t\t\t\tattributeID = attributeIDs[ attributeName ];\n\t\t\t\tattribute = decoder.GetAttributeByUniqueId( dracoGeometry, attributeID );\n\n\t\t\t} else {\n\n\t\t\t\tattributeID = decoder.GetAttributeId( dracoGeometry, draco[ attributeIDs[ attributeName ] ] );\n\n\t\t\t\tif ( attributeID === - 1 ) continue;\n\n\t\t\t\tattribute = decoder.GetAttribute( dracoGeometry, attributeID );\n\n\t\t\t}\n\n\t\t\tconst attributeResult = decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute );\n\n\t\t\tif ( attributeName === 'color' ) {\n\n\t\t\t\tattributeResult.vertexColorSpace = taskConfig.vertexColorSpace;\n\n\t\t\t}\n\n\t\t\tgeometry.attributes.push( attributeResult );\n\n\t\t}\n\n\t\t// Add index.\n\t\tif ( geometryType === draco.TRIANGULAR_MESH ) {\n\n\t\t\tgeometry.index = decodeIndex( draco, decoder, dracoGeometry );\n\n\t\t}\n\n\t\tdraco.destroy( dracoGeometry );\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction decodeIndex( draco, decoder, dracoGeometry ) {\n\n\t\tconst numFaces = dracoGeometry.num_faces();\n\t\tconst numIndices = numFaces * 3;\n\t\tconst byteLength = numIndices * 4;\n\n\t\tconst ptr = draco._malloc( byteLength );\n\t\tdecoder.GetTrianglesUInt32Array( dracoGeometry, byteLength, ptr );\n\t\tconst index = new Uint32Array( draco.HEAPF32.buffer, ptr, numIndices ).slice();\n\t\tdraco._free( ptr );\n\n\t\treturn { array: index, itemSize: 1 };\n\n\t}\n\n\tfunction decodeAttribute( draco, decoder, dracoGeometry, attributeName, attributeType, attribute ) {\n\n\t\tconst numComponents = attribute.num_components();\n\t\tconst numPoints = dracoGeometry.num_points();\n\t\tconst numValues = numPoints * numComponents;\n\t\tconst byteLength = numValues * attributeType.BYTES_PER_ELEMENT;\n\t\tconst dataType = getDracoDataType( draco, attributeType );\n\n\t\tconst ptr = draco._malloc( byteLength );\n\t\tdecoder.GetAttributeDataArrayForAllPoints( dracoGeometry, attribute, dataType, byteLength, ptr );\n\t\tconst array = new attributeType( draco.HEAPF32.buffer, ptr, numValues ).slice();\n\t\tdraco._free( ptr );\n\n\t\treturn {\n\t\t\tname: attributeName,\n\t\t\tarray: array,\n\t\t\titemSize: numComponents\n\t\t};\n\n\t}\n\n\tfunction getDracoDataType( draco, attributeType ) {\n\n\t\tswitch ( attributeType ) {\n\n\t\t\tcase Float32Array: return draco.DT_FLOAT32;\n\t\t\tcase Int8Array: return draco.DT_INT8;\n\t\t\tcase Int16Array: return draco.DT_INT16;\n\t\t\tcase Int32Array: return draco.DT_INT32;\n\t\t\tcase Uint8Array: return draco.DT_UINT8;\n\t\t\tcase Uint16Array: return draco.DT_UINT16;\n\t\t\tcase Uint32Array: return draco.DT_UINT32;\n\n\t\t}\n\n\t}\n\n}\n\nexport { DRACOLoader };\n","import { ScriptBase } from \"../core/ScriptBase\";\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\r\nimport {THREE} from \"../core/global.ts\";\r\nimport { ObjectPool } from \"../core/PerformanceUtils\";\r\n/**\r\n * GLB加载器配置接口\r\n * 定义GLB文件加载的所有可配置参数\r\n */\r\nexport interface GLBLoaderConfig {\r\n    /** 是否启用Draco压缩支持 */\r\n    enableDraco?: boolean;\r\n    /** Draco解码器路径 */\r\n    dracoDecoderPath?: string;\r\n    /** 是否自动优化模型 */\r\n    autoOptimize?: boolean;\r\n    /** 是否自动添加到场景 */\r\n    autoAddToScene?: boolean;\r\n    /** 默认材质设置 */\r\n    defaultMaterial?: {\r\n        roughness?: number;\r\n        metalness?: number;\r\n        envMapIntensity?: number;\r\n    };\r\n    /** 覆盖材质 - 如果设置，将使用此材质替换所有模型材质 */\r\n    overrideMaterial?: THREE.Material | null;\r\n    /** 材质 */\r\n    materials?: { [name: string]: THREE.Material } | null;\r\n    /** 模型缩放 */\r\n    scale?: THREE.Vector3;\r\n    /** 模型位置 */\r\n    position?: THREE.Vector3;\r\n    /** 模型旋转 */\r\n    rotation?: THREE.Euler;\r\n}\r\n\r\n/**\r\n * 加载进度信息\r\n */\r\nexport interface LoadProgress {\r\n    loaded: number;\r\n    total: number;\r\n    percentage: number;\r\n    url: string;\r\n}\r\n\r\n/**\r\n * GLB模型加载结果\r\n */\r\nexport interface GLBLoadResult {\r\n    scene: THREE.Group;\r\n    animations: THREE.AnimationClip[];\r\n    cameras: THREE.Camera[];\r\n    materials: THREE.Material[];\r\n    parser: any;\r\n    userData: any;\r\n    mixer?: THREE.AnimationMixer;\r\n    actions?: { [name: string]: THREE.AnimationAction };\r\n}\r\n\r\nexport class GLBLoaderScript extends ScriptBase {\r\n    name = 'GLBLoaderScript';\r\n\r\n    /** GLB加载器配置参数 */\r\n    private config: {\r\n        autoOptimize: boolean;\r\n        autoAddToScene: boolean;\r\n        defaultMaterial: { roughness?: number; metalness?: number; envMapIntensity?: number };\r\n        enableDraco: boolean;\r\n        materials: { [name: string]: THREE.Material } | null;\r\n        rotation: THREE.Euler;\r\n        dracoDecoderPath: string;\r\n        scale: THREE.Vector3;\r\n        position: THREE.Vector3;\r\n        overrideMaterial: THREE.Material | null;\r\n    };\r\n\r\n    /** GLTF加载器实例 */\r\n    private gltfLoader: GLTFLoader;\r\n\r\n    /** Draco加载器实例（可选） */\r\n    private dracoLoader: DRACOLoader | null = null;\r\n\r\n    /** 已加载的模型集合，使用URL作为键 */\r\n    private loadedModels = new Map<string, GLBLoadResult>();\r\n\r\n    /** 当前正在加载的模型集合 */\r\n    private loadingModels = new Map<string, Promise<GLBLoadResult>>();\r\n\r\n    /** 动画混合器集合 */\r\n    private mixers = new Map<string, THREE.AnimationMixer>();\r\n\r\n    private materials:THREE.Material | null = null;\r\n\r\n    // 性能优化：添加对象池\r\n    private vector3Pool: ObjectPool<THREE.Vector3>;\r\n    private eulerPool: ObjectPool<THREE.Euler>;\r\n\r\n    /**\r\n     * 构造函数 - 初始化GLB加载器脚本\r\n     *\r\n     * @param options - 可选的配置参数\r\n     */\r\n    constructor(options?: GLBLoaderConfig) {\r\n        super();\r\n\r\n        // 合并默认配置和用户配置\r\n        this.config = {\r\n            enableDraco: false,\r\n            dracoDecoderPath: '/draco/',\r\n            autoOptimize: true,\r\n            autoAddToScene: false,\r\n            defaultMaterial: {\r\n                roughness: 0.5,\r\n                metalness: 0.0,\r\n                envMapIntensity: 1.0\r\n            },\r\n            scale: new THREE.Vector3(1, 1, 1),\r\n            position: new THREE.Vector3(0, 0, 0),\r\n            rotation: new THREE.Euler(0, 0, 0),\r\n            materials: null,\r\n            overrideMaterial: null,\r\n            ...options\r\n        };\r\n\r\n        // 创建GLTF加载器\r\n        this.gltfLoader = new GLTFLoader();\r\n\r\n        // 设置Draco加载器\r\n        this.setupDracoLoader();\r\n\r\n        // 初始化对象池\r\n        this.vector3Pool = new ObjectPool<THREE.Vector3>(\r\n            () => new THREE.Vector3(),\r\n            (vec) => vec.set(0, 0, 0)\r\n        );\r\n\r\n        this.eulerPool = new ObjectPool<THREE.Euler>(\r\n            () => new THREE.Euler(),\r\n            (euler) => euler.set(0, 0, 0)\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 脚本唤醒 - IScript 生命周期的第一个阶段\r\n     */\r\n    public override awake(): void {\r\n        super.awake?.();\r\n    }\r\n\r\n    /**\r\n     * 脚本启用\r\n     */\r\n    public override onEnable(): void {\r\n        super.onEnable?.();\r\n    }\r\n\r\n    public override async start(): Promise<void> {\r\n        super.start?.();\r\n    }\r\n\r\n    public override update(deltaTime: number): void {\r\n        super.update?.(deltaTime);\r\n        for (const mixer of this.mixers.values()) {\r\n            mixer.update(deltaTime);\r\n        }\r\n    }\r\n\r\n    public override onResize(): void {\r\n        super.onResize();\r\n    }\r\n\r\n    public override onDisable(): void {\r\n        super.onDisable?.();\r\n    }\r\n\r\n    public override destroy(): void {\r\n        super.destroy?.();\r\n        this.mixers.clear();\r\n        this.loadedModels.clear();\r\n        this.loadingModels.clear();\r\n        if (this.dracoLoader) {\r\n            this.dracoLoader.dispose();\r\n            this.dracoLoader = null;\r\n        }\r\n    }\r\n\r\n    // ===========================================\r\n    // 私有方法\r\n    // ===========================================\r\n\r\n    /**\r\n     * 设置Draco加载器\r\n     */\r\n    private setupDracoLoader(): void {\r\n        if (this.config.enableDraco) {\r\n            try {\r\n                this.dracoLoader = new DRACOLoader();\r\n                this.dracoLoader.setDecoderPath(this.config.dracoDecoderPath);\r\n                this.gltfLoader.setDRACOLoader(this.dracoLoader);\r\n            } catch (error) {\r\n                console.warn('[GLBLoaderScript] Draco加载器设置失败，已禁用Draco支持:', error);\r\n                this.config.enableDraco = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 优化模型\r\n     */\r\n    private optimizeModel(result: GLBLoadResult): void {\r\n        if (!this.config.autoOptimize) return;\r\n\r\n        result.scene.traverse((child) => {\r\n            if (child instanceof THREE.Mesh) {\r\n                // 启用阴影\r\n                child.castShadow = true;\r\n                child.receiveShadow = true;\r\n\r\n                // 如果配置了覆盖材质且不为空，则使用覆盖材质\r\n                if (this.config.overrideMaterial) {\r\n                    child.material = this.config.overrideMaterial;\r\n                }\r\n                // 否则使用默认材质设置\r\n                else if (child.material instanceof THREE.MeshStandardMaterial) {\r\n                    const material = child.material;\r\n                    const defaultMat = this.config.defaultMaterial;\r\n\r\n                    // 应用默认材质设置\r\n                    if (defaultMat.roughness !== undefined) {\r\n                        material.roughness = defaultMat.roughness;\r\n                    }\r\n                    if (defaultMat.metalness !== undefined) {\r\n                        material.metalness = defaultMat.metalness;\r\n                    }\r\n                    if (defaultMat.envMapIntensity !== undefined) {\r\n                        material.envMapIntensity = defaultMat.envMapIntensity;\r\n                    }\r\n\r\n                    // 设置统一的材质颜色（使用选中代码中的颜色）\r\n                    material.color.setHex(0x151515); // #151515 颜色\r\n\r\n                    material.needsUpdate = true;\r\n                }\r\n\r\n                // 几何体优化\r\n                if (child.geometry) {\r\n                    // 性能优化：只在必要时计算边界框和包围球\r\n                    if (!child.geometry.boundingBox) {\r\n                        child.geometry.computeBoundingBox();\r\n                    }\r\n                    if (!child.geometry.boundingSphere) {\r\n                        child.geometry.computeBoundingSphere();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 应用模型变换\r\n     *\r\n     * @param model - 模型对象\r\n     */\r\n    private applyTransforms(model: THREE.Group): void {\r\n        // 从对象池获取Vector3和Euler对象\r\n        const scale = this.vector3Pool.acquire();\r\n        const position = this.vector3Pool.acquire();\r\n        const rotation = this.eulerPool.acquire();\r\n\r\n        scale.copy(this.config.scale);\r\n        position.copy(this.config.position);\r\n        rotation.copy(this.config.rotation);\r\n\r\n        model.scale.copy(scale);\r\n        model.position.copy(position);\r\n        model.rotation.copy(rotation);\r\n\r\n        // 释放对象回对象池\r\n        this.vector3Pool.release(scale);\r\n        this.vector3Pool.release(position);\r\n        this.eulerPool.release(rotation);\r\n    }\r\n\r\n    /**\r\n     * 创建动画混合器\r\n     *\r\n     * @param model - 模型对象\r\n     * @param animations - 动画剪辑数组\r\n     * @param url - 模型URL（用作混合器标识）\r\n     * @returns 动画控制对象\r\n     */\r\n    private createAnimationMixer(model: THREE.Object3D, animations: THREE.AnimationClip[], url: string) {\r\n        const mixer = new THREE.AnimationMixer(model);\r\n        const actions: { [name: string]: THREE.AnimationAction } = {};\r\n\r\n        // 创建动画动作\r\n        animations.forEach((clip) => {\r\n            const action = mixer.clipAction(clip);\r\n            actions[clip.name] = action;\r\n        });\r\n\r\n        // 保存混合器\r\n        this.mixers.set(url, mixer);\r\n\r\n        return {\r\n            mixer,\r\n            actions,\r\n            play: (animationName: string, loop = true) => {\r\n                const action = actions[animationName];\r\n                if (action) {\r\n                    if (loop) {\r\n                        action.setLoop(THREE.LoopRepeat, Infinity);\r\n                    }\r\n                    action.play();\r\n                }\r\n            },\r\n            stop: (animationName: string) => {\r\n                const action = actions[animationName];\r\n                if (action) {\r\n                    action.stop();\r\n                }\r\n            },\r\n            fadeIn: (animationName: string, duration = 0.5) => {\r\n                const action = actions[animationName];\r\n                if (action) {\r\n                    action.reset().fadeIn(duration).play();\r\n                }\r\n            },\r\n            fadeOut: (animationName: string, duration = 0.5) => {\r\n                const action = actions[animationName];\r\n                if (action) {\r\n                    action.fadeOut(duration);\r\n                }\r\n            },\r\n            crossFade: (fromAnimation: string, toAnimation: string, duration = 1.0) => {\r\n                const fromAction = actions[fromAnimation];\r\n                const toAction = actions[toAnimation];\r\n                if (fromAction && toAction) {\r\n                    fromAction.fadeOut(duration);\r\n                    toAction.reset().fadeIn(duration).play();\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    // ===========================================\r\n    // 公共API方法\r\n    // ===========================================\r\n\r\n    async loadModel(\r\n        url: string,\r\n        options: {\r\n            onProgress?: (progress: LoadProgress) => void;\r\n            onError?: (error: any) => void;\r\n            addToScene?: boolean;\r\n            position?: THREE.Vector3;\r\n            scale?: THREE.Vector3;\r\n            rotation?: THREE.Euler;\r\n            material?: THREE.Material;\r\n        } = {}\r\n    ): Promise<GLBLoadResult> {\r\n        const cached = this.loadedModels.get(url);\r\n        if (cached) {\r\n            const clonedResult = this.cloneModel(cached);\r\n            if (options.position) {\r\n                // 从对象池获取Vector3对象\r\n                const pos = this.vector3Pool.acquire();\r\n                pos.copy(options.position);\r\n                clonedResult.scene.position.copy(pos);\r\n                // 释放对象回对象池\r\n                this.vector3Pool.release(pos);\r\n            }\r\n            if (options.scale) {\r\n                // 从对象池获取Vector3对象\r\n                const scale = this.vector3Pool.acquire();\r\n                scale.copy(options.scale);\r\n                clonedResult.scene.scale.copy(scale);\r\n                // 释放对象回对象池\r\n                this.vector3Pool.release(scale);\r\n            }\r\n            if (options.rotation) {\r\n                // 从对象池获取Euler对象\r\n                const rot = this.eulerPool.acquire();\r\n                rot.copy(options.rotation);\r\n                clonedResult.scene.rotation.copy(rot);\r\n                // 释放对象回对象池\r\n                this.eulerPool.release(rot);\r\n            }\r\n            if ((options.addToScene ?? this.config.autoAddToScene)) {\r\n                this.addObject(clonedResult.scene);\r\n            }\r\n            return clonedResult;\r\n        }\r\n\r\n        // 检查是否正在加载\r\n        const loading = this.loadingModels.get(url);\r\n        if (loading) {\r\n            return loading;\r\n        }\r\n\r\n        // 开始新的加载\r\n        const loadPromise = new Promise<GLBLoadResult>((resolve, reject) => {\r\n            this.gltfLoader.load(\r\n                url,\r\n                (gltf: any) => {\r\n                    // 创建加载结果\r\n                    const result: GLBLoadResult = {\r\n                        scene: gltf.scene,\r\n                        animations: gltf.animations || [],\r\n                        cameras: gltf.cameras || [],\r\n                        parser: gltf.parser,\r\n                        materials: gltf.materials || [],\r\n                        userData: gltf.userData || {}\r\n                    };\r\n\r\n                    // 优化模型\r\n                    this.optimizeModel(result);\r\n\r\n                    // 应用变换\r\n                    this.applyTransforms(result.scene);\r\n                    if (options.position) {\r\n                        // 从对象池获取Vector3对象\r\n                        const pos = this.vector3Pool.acquire();\r\n                        pos.copy(options.position);\r\n                        result.scene.position.copy(pos);\r\n                        // 释放对象回对象池\r\n                        this.vector3Pool.release(pos);\r\n                    }\r\n                    if (options.scale) {\r\n                        // 从对象池获取Vector3对象\r\n                        const scale = this.vector3Pool.acquire();\r\n                        scale.copy(options.scale);\r\n                        result.scene.scale.copy(scale);\r\n                        // 释放对象回对象池\r\n                        this.vector3Pool.release(scale);\r\n                    }\r\n                    if (options.rotation) {\r\n                        // 从对象池获取Euler对象\r\n                        const rot = this.eulerPool.acquire();\r\n                        rot.copy(options.rotation);\r\n                        result.scene.rotation.copy(rot);\r\n                        // 释放对象回对象池\r\n                        this.eulerPool.release(rot);\r\n                    }\r\n\r\n                    // 如果提供了material选项，则使用它替换所有材质\r\n                    if (options.material) {\r\n                        result.scene.traverse((child) => {\r\n                            if (child instanceof THREE.Mesh) {\r\n                                child.material = options.material!;\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    // 创建动画混合器\r\n                    if (result.animations.length > 0) {\r\n                        const animationController = this.createAnimationMixer(result.scene, result.animations, url);\r\n                        result.mixer = animationController.mixer;\r\n                        result.actions = animationController.actions;\r\n\r\n                        // 添加动画控制方法\r\n                        (result as any).playAnimation = animationController.play;\r\n                        (result as any).stopAnimation = animationController.stop;\r\n                        (result as any).fadeInAnimation = animationController.fadeIn;\r\n                        (result as any).fadeOutAnimation = animationController.fadeOut;\r\n                        (result as any).crossFadeAnimation = animationController.crossFade;\r\n                    }\r\n\r\n                    // 添加到场景\r\n                    if ((options.addToScene ?? this.config.autoAddToScene)) {\r\n                        this.addObject(result.scene);\r\n                    } else {\r\n                        console.log('[GLBLoaderScript] 模型未添加到场景中');\r\n                    }\r\n\r\n                    // 缓存结果\r\n                    this.loadedModels.set(url, result);\r\n                    this.loadingModels.delete(url);\r\n                    resolve(result);\r\n                },\r\n                (progress: ProgressEvent) => {\r\n                    const progressInfo: LoadProgress = {\r\n                        loaded: progress.loaded,\r\n                        total: progress.total,\r\n                        percentage: progress.total > 0 ? (progress.loaded / progress.total) * 100 : 0,\r\n                        url\r\n                    };\r\n\r\n                    if (options.onProgress) {\r\n                        options.onProgress(progressInfo);\r\n                    }\r\n                },\r\n                (error: unknown) => {\r\n                    console.error(`[GLBLoaderScript] 加载GLB模型失败: ${url}`, error);\r\n                    this.loadingModels.delete(url);\r\n\r\n                    if (options.onError) {\r\n                        options.onError(error);\r\n                    }\r\n\r\n                    reject(error);\r\n                }\r\n            );\r\n        });\r\n\r\n        // 记录正在加载的Promise\r\n        this.loadingModels.set(url, loadPromise);\r\n\r\n        return loadPromise;\r\n    }\r\n\r\n    /**\r\n     * 克隆模型以支持多次使用\r\n     *\r\n     * @param original - 原始模型结果\r\n     * @returns 克隆的模型结果\r\n     */\r\n    private cloneModel(original: GLBLoadResult): GLBLoadResult {\r\n        return {\r\n            scene: original.scene.clone(),\r\n            animations: [...original.animations],\r\n            cameras: [...original.cameras],\r\n            materials: [...original.materials],\r\n            parser: original.parser,\r\n            userData: {...original.userData}\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 移除模型\r\n     *\r\n     * @param url - 模型URL\r\n     * @param removeFromScene - 是否从场景中移除\r\n     */\r\n    removeModel(url: string, removeFromScene: boolean = true): void {\r\n        const model = this.loadedModels.get(url);\r\n        if (model && removeFromScene) {\r\n            this.removeObject(model.scene);\r\n        }\r\n\r\n        // 清理动画混合器\r\n        const mixer = this.mixers.get(url);\r\n        if (mixer) {\r\n            mixer.stopAllAction();\r\n            this.mixers.delete(url);\r\n        }\r\n\r\n        // 从缓存中移除\r\n        this.loadedModels.delete(url);\r\n    }\r\n\r\n    /**\r\n     * 获取已加载的模型\r\n     *\r\n     * @param url - 模型URL\r\n     * @returns 模型结果或undefined\r\n     */\r\n    getModel(url: string): GLBLoadResult | undefined {\r\n        return this.loadedModels.get(url);\r\n    }\r\n\r\n    /**\r\n     * 获取所有已加载的模型\r\n     *\r\n     * @returns 所有模型的数组\r\n     */\r\n    getAllModels(): { url: string; model: GLBLoadResult }[] {\r\n        return Array.from(this.loadedModels.entries()).map(([url, model]) => ({url, model}));\r\n    }\r\n\r\n    clearScene(clearCache: boolean = false): void {\r\n        for (const [url, model] of this.loadedModels.entries()) {\r\n            this.removeObject(model.scene);\r\n            const mixer = this.mixers.get(url);\r\n            if (mixer) {\r\n                mixer.stopAllAction();\r\n                if (clearCache) {\r\n                    this.mixers.delete(url);\r\n                }\r\n            }\r\n        }\r\n\r\n        // 如果需要清除缓存\r\n        if (clearCache) {\r\n            this.loadedModels.clear();\r\n            this.loadingModels.clear();\r\n            this.mixers.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取场景中当前显示的模型数量\r\n     *\r\n     * @returns 场景中模型的数量\r\n     */\r\n    getSceneModelCount(): number {\r\n        return this.loadedModels.size;\r\n    }\r\n\r\n    /**\r\n     * 检查指定模型是否在场景中显示\r\n     *\r\n     * @param url - 模型URL\r\n     * @returns 模型是否在场景中显示\r\n     */\r\n    isModelInScene(url: string): boolean {\r\n        const model = this.loadedModels.get(url);\r\n        if (!model) return false;\r\n\r\n        // 检查模型是否在场景中\r\n        return this.scene.children.includes(model.scene);\r\n    }\r\n\r\n    /**\r\n     * 将已缓存的模型添加到场景中\r\n     *\r\n     * @param url - 模型URL\r\n     * @returns 是否成功添加到场景\r\n     */\r\n    addModelToScene(url: string): boolean {\r\n        const model = this.loadedModels.get(url);\r\n        if (!model) {\r\n            console.warn(`[GLBLoaderScript] 无法添加模型到场景: ${url}`);\r\n            return false;\r\n        }\r\n\r\n        if (this.scene.children.includes(model.scene)) {\r\n            return true;\r\n        }\r\n\r\n        this.addObject(model.scene);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 从场景中移除指定模型（不清除缓存）\r\n     *\r\n     * @param url - 模型URL\r\n     * @returns 是否成功从场景中移除\r\n     */\r\n    removeModelFromScene(url: string): boolean {\r\n        const model = this.loadedModels.get(url);\r\n        if (!model) {\r\n            console.warn(`[GLBLoaderScript] 无法从场景中移除模型: ${url}`);\r\n            return false;\r\n        }\r\n        this.removeObject(model.scene);\r\n        const mixer = this.mixers.get(url);\r\n        if (mixer) {\r\n            mixer.stopAllAction();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 更新配置\r\n     *\r\n     * @param newConfig - 新的配置参数\r\n     */\r\n    updateConfig(newConfig: Partial<GLBLoaderConfig>): void {\r\n        Object.assign(this.config, newConfig);\r\n        if (newConfig.enableDraco !== undefined || newConfig.dracoDecoderPath) {\r\n            this.setupDracoLoader();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取当前配置\r\n     *\r\n     * @returns 配置对象的副本\r\n     */\r\n    getConfig(): GLBLoaderConfig {\r\n        return { ...this.config };\r\n    }\r\n}\r\n","import { ScriptBase } from \"../core/ScriptBase\";\r\nimport { THREE } from \"../core/global\";\r\n\r\n/**\r\n * UV动画配置接口\r\n */\r\nexport interface UVAnimationConfig {\r\n    /** 动画目标对象名称 */\r\n    targetName: string;\r\n    /** UV滚动速度 X轴 */\r\n    scrollSpeedX?: number;\r\n    /** UV滚动速度 Y轴 */\r\n    scrollSpeedY?: number;\r\n    /** UV缩放速度 X轴 */\r\n    scaleSpeedX?: number;\r\n    /** UV缩放速度 Y轴 */\r\n    scaleSpeedY?: number;\r\n    /** UV旋转速度 */\r\n    rotationSpeed?: number;\r\n    /** 是否启用 */\r\n    enabled?: boolean;\r\n    /** 是否启用透明度 */\r\n    transparent?: boolean;\r\n    /** 透明度值 */\r\n    opacity?: number;\r\n    /** 是否使用双面材质 */\r\n    doubleSided?: boolean;\r\n}\r\n\r\n/**\r\n * 场景创建配置接口\r\n */\r\nexport interface SceneCreationConfig {\r\n    /** 纹理URL */\r\n    textureUrl: string;\r\n    /** 对象配置数组 */\r\n    objects: Array<{\r\n        /** 对象类型 ('plane' | 'cylinder' | 'box') */\r\n        type: 'plane' | 'cylinder' | 'box';\r\n        /** 对象名称 */\r\n        name: string;\r\n        /** 位置 */\r\n        position?: [number, number, number];\r\n        /** 旋转 */\r\n        rotation?: [number, number, number];\r\n        /** 尺寸参数 */\r\n        size?: number[];\r\n    }>;\r\n    /** 是否启用渐变透明效果 */\r\n    enableGradientAlpha?: boolean;\r\n    /** 渐变方向 ('bottomToTop' | 'topToBottom' | 'leftToRight' | 'rightToLeft') */\r\n    gradientDirection?: 'bottomToTop' | 'topToBottom' | 'leftToRight' | 'rightToLeft';\r\n    /** 外部alpha贴图URL（如果提供，将优先使用） */\r\n    alphaMapUrl?: string;\r\n    /** 灯光配置 */\r\n    lights?: Array<{\r\n        /** 灯光类型 ('ambient' | 'directional' | 'point' | 'spot') */\r\n        type: 'ambient' | 'directional' | 'point' | 'spot';\r\n        /** 灯光颜色 */\r\n        color?: number | string;\r\n        /** 灯光强度 */\r\n        intensity?: number;\r\n        /** 灯光位置（点光源和聚光灯） */\r\n        position?: [number, number, number];\r\n        /** 灯光方向（方向光） */\r\n        direction?: [number, number, number];\r\n    }>;\r\n    /** 雾配置 */\r\n    fog?: {\r\n        /** 雾颜色 */\r\n        color: number | string;\r\n        /** 雾近端 */\r\n        near: number;\r\n        /** 雾远端 */\r\n        far: number;\r\n    };\r\n}\r\n\r\n/**\r\n * UV动画脚本\r\n * 用于创建纹理UV动画效果，如滚动、缩放、旋转等\r\n */\r\nexport class UVAnimationScript extends ScriptBase {\r\n    private animations: Map<string, {\r\n        mesh: THREE.Mesh;\r\n        config: Required<UVAnimationConfig>;\r\n        offset: THREE.Vector2;\r\n        scale: THREE.Vector2;\r\n        rotation: number;\r\n    }> = new Map();\r\n\r\n    private defaultConfig: Required<UVAnimationConfig> = {\r\n        targetName: '',\r\n        scrollSpeedX: 0,\r\n        scrollSpeedY: 0,\r\n        scaleSpeedX: 0,\r\n        scaleSpeedY: 0,\r\n        rotationSpeed: 0,\r\n        enabled: true,\r\n        transparent: false,\r\n        opacity: 1.0,\r\n        doubleSided: false\r\n    };\r\n\r\n    private sceneCreationConfig: SceneCreationConfig | null = null;\r\n    private sharedTexture: THREE.Texture | null = null;\r\n    private alphaMap: THREE.Texture | null = null;\r\n\r\n    constructor(configs?: UVAnimationConfig | UVAnimationConfig[]) {\r\n        super();\r\n        this.name = \"UVAnimationScript\";\r\n\r\n        if (configs) {\r\n            if (Array.isArray(configs)) {\r\n                configs.forEach(config => this.addAnimation(config));\r\n            } else {\r\n                this.addAnimation(configs);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置场景创建配置\r\n     * @param config 场景创建配置\r\n     */\r\n    public setSceneCreationConfig(config: SceneCreationConfig): void {\r\n        this.sceneCreationConfig = config;\r\n    }\r\n\r\n    /**\r\n     * 加载纹理的辅助函数\r\n     * @param url 纹理文件路径\r\n     * @returns Promise<THREE.Texture>\r\n     */\r\n    private loadTexture(url: string): Promise<THREE.Texture> {\r\n        return new Promise((resolve, reject) => {\r\n            const loader = new THREE.TextureLoader();\r\n            loader.load(\r\n                url,\r\n                (texture) => {\r\n                    texture.wrapS = THREE.RepeatWrapping;\r\n                    texture.wrapT = THREE.RepeatWrapping;\r\n                    texture.format = THREE.RGBAFormat;                    // 启用透明贴图支持\r\n                    resolve(texture);\r\n                },\r\n                undefined,\r\n                (error) => {\r\n                    console.error('[UVAnimationScript] 纹理加载失败:', error);\r\n                    reject(error);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 创建渐变透明贴图\r\n     * @param direction 渐变方向\r\n     * @returns Canvas纹理\r\n     */\r\n    private createGradientAlphaMap(direction: 'bottomToTop' | 'topToBottom' | 'leftToRight' | 'rightToLeft' = 'bottomToTop'): THREE.CanvasTexture {\r\n        const gradientCanvas = document.createElement('canvas');\r\n        gradientCanvas.width = 256;\r\n        gradientCanvas.height = 256;\r\n        const ctx = gradientCanvas.getContext('2d')!;\r\n\r\n        let gradient;\r\n        switch (direction) {\r\n            case 'bottomToTop':\r\n                gradient = ctx.createLinearGradient(0, gradientCanvas.height, 0, 0);\r\n                break;\r\n            case 'topToBottom':\r\n                gradient = ctx.createLinearGradient(0, 0, 0, gradientCanvas.height);\r\n                break;\r\n            case 'leftToRight':\r\n                gradient = ctx.createLinearGradient(0, 0, gradientCanvas.width, 0);\r\n                break;\r\n            case 'rightToLeft':\r\n                gradient = ctx.createLinearGradient(gradientCanvas.width, 0, 0, 0);\r\n                break;\r\n            default:\r\n                gradient = ctx.createLinearGradient(0, gradientCanvas.height, 0, 0);\r\n        }\r\n\r\n        // 创建渐变（从透明到不透明）\r\n        gradient.addColorStop(0, 'rgba(0, 0, 0, 0)');   // 完全透明\r\n        gradient.addColorStop(1, 'rgba(255, 255, 255, 1)'); // 完全不透明\r\n\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(0, 0, gradientCanvas.width, gradientCanvas.height);\r\n\r\n        const alphaMap = new THREE.CanvasTexture(gradientCanvas);\r\n        alphaMap.wrapS = THREE.RepeatWrapping;\r\n        alphaMap.wrapT = THREE.RepeatWrapping;\r\n\r\n        return alphaMap;\r\n    }\r\n\r\n    /**\r\n     * 加载外部alpha贴图\r\n     * @param url 贴图URL\r\n     * @returns Promise<THREE.Texture>\r\n     */\r\n    private loadAlphaMap(url: string): Promise<THREE.Texture | null> {\r\n        return new Promise((resolve) => {\r\n            const loader = new THREE.TextureLoader();\r\n            loader.load(\r\n                url,\r\n                (texture) => {\r\n                    texture.wrapS = THREE.RepeatWrapping;\r\n                    texture.wrapT = THREE.RepeatWrapping;\r\n                    texture.format = THREE.RedFormat; // Alpha贴图通常只需要红色通道\r\n                    resolve(texture);\r\n                },\r\n                undefined,\r\n                (error) => {\r\n                    console.error('[UVAnimationScript] Alpha贴图加载失败:', error);\r\n                    // 如果外部贴图加载失败，返回null，后续会使用程序生成的渐变贴图\r\n                    resolve(null);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 创建场景对象\r\n     */\r\n    private async createSceneObjects(): Promise<void> {\r\n        if (!this.sceneCreationConfig || !this.renderer) return;\r\n\r\n        try {\r\n            // 加载纹理\r\n            this.sharedTexture = await this.loadTexture(this.sceneCreationConfig.textureUrl);\r\n\r\n            // 创建或加载alpha贴图\r\n            if (this.sceneCreationConfig.alphaMapUrl) {\r\n                // 如果提供了外部alpha贴图URL，尝试加载外部贴图\r\n                try {\r\n                    this.alphaMap = await this.loadAlphaMap(this.sceneCreationConfig.alphaMapUrl);\r\n                    if (!this.alphaMap) {\r\n                        // 如果加载失败且启用了渐变透明效果，创建程序化渐变贴图\r\n                        if (this.sceneCreationConfig.enableGradientAlpha) {\r\n                            console.warn('[UVAnimationScript] 外部alpha贴图加载失败，使用程序生成的渐变贴图');\r\n                            this.alphaMap = this.createGradientAlphaMap(this.sceneCreationConfig.gradientDirection);\r\n                        }\r\n                    } else {\r\n                        console.log('[UVAnimationScript] 成功加载外部alpha贴图');\r\n                    }\r\n                } catch (error) {\r\n                    // 如果加载失败且启用了渐变透明效果，创建程序化渐变贴图\r\n                    if (this.sceneCreationConfig.enableGradientAlpha) {\r\n                        console.warn('[UVAnimationScript] 外部alpha贴图加载失败，使用程序生成的渐变贴图:', error);\r\n                        this.alphaMap = this.createGradientAlphaMap(this.sceneCreationConfig.gradientDirection);\r\n                    }\r\n                }\r\n            } else if (this.sceneCreationConfig.enableGradientAlpha) {\r\n                // 如果启用渐变透明效果，创建程序化渐变贴图\r\n                this.alphaMap = this.createGradientAlphaMap(this.sceneCreationConfig.gradientDirection);\r\n            }\r\n\r\n            // 创建材质\r\n            const material = new THREE.MeshStandardMaterial({\r\n                color: '#ffffff',         // 材质基础颜色\r\n                transparent: true,        // 开启透明混合\r\n                map: this.sharedTexture,  // 绑定基础纹理\r\n                alphaMap: this.alphaMap || undefined, // 绑定alpha贴图\r\n                opacity: 1,               // 全局透明度\r\n                depthWrite: true,        // 透明物体关闭深度写入\r\n                blending: THREE.AdditiveBlending // 发光效果混合\r\n            });\r\n\r\n            // 创建对象\r\n            for (const objConfig of this.sceneCreationConfig.objects) {\r\n                let geometry: THREE.BufferGeometry;\r\n                let mesh: THREE.Mesh;\r\n\r\n                switch (objConfig.type) {\r\n                    case 'plane':\r\n                        geometry = new THREE.PlaneGeometry(\r\n                            objConfig.size?.[0] || 2,\r\n                            objConfig.size?.[1] || 2,\r\n                            objConfig.size?.[2] || 1\r\n                        );\r\n                        mesh = new THREE.Mesh(geometry, material);\r\n                        if (objConfig.rotation) {\r\n                            mesh.rotation.set(...objConfig.rotation);\r\n                        }\r\n                        break;\r\n\r\n                    case 'cylinder':\r\n                        geometry = new THREE.CylinderGeometry(\r\n                            objConfig.size?.[0] || 0.5,  // topRadius\r\n                            objConfig.size?.[1] || 0.5,  // bottomRadius\r\n                            objConfig.size?.[2] || 1,    // height\r\n                            objConfig.size?.[3] || 32    // radialSegments\r\n                        );\r\n                        mesh = new THREE.Mesh(geometry, material);\r\n                        break;\r\n\r\n                    case 'box':\r\n                        geometry = new THREE.BoxGeometry(\r\n                            objConfig.size?.[0] || 1,\r\n                            objConfig.size?.[1] || 1,\r\n                            objConfig.size?.[2] || 1\r\n                        );\r\n                        mesh = new THREE.Mesh(geometry, material);\r\n                        break;\r\n\r\n                    default:\r\n                        console.warn(`[UVAnimationScript] Unsupported object type: ${objConfig.type}`);\r\n                        continue;\r\n                }\r\n\r\n                // 设置位置\r\n                if (objConfig.position) {\r\n                    mesh.position.set(...objConfig.position);\r\n                }\r\n\r\n                // 设置名称\r\n                mesh.name = objConfig.name;\r\n\r\n                // 添加到场景\r\n                this.addObject(mesh);\r\n\r\n                // 如果这个对象需要UV动画，添加到动画列表\r\n                if (this.animations.has(objConfig.name)) {\r\n                    const animation = this.animations.get(objConfig.name)!;\r\n                    animation.mesh = mesh;\r\n                    this.applyMaterialConfig(animation);\r\n                }\r\n\r\n                console.log(`[UVAnimationScript] Created object: ${objConfig.name}`);\r\n            }\r\n\r\n            // 创建灯光\r\n            if (this.sceneCreationConfig.lights) {\r\n                for (const lightConfig of this.sceneCreationConfig.lights) {\r\n                    let light: THREE.Light;\r\n\r\n                    switch (lightConfig.type) {\r\n                        case 'ambient':\r\n                            light = new THREE.AmbientLight(\r\n                                lightConfig.color || 0x404040,\r\n                                lightConfig.intensity || 0.5\r\n                            );\r\n                            break;\r\n\r\n                        case 'directional':\r\n                            light = new THREE.DirectionalLight(\r\n                                lightConfig.color || 0xffffff,\r\n                                lightConfig.intensity || 1\r\n                            );\r\n                            if (lightConfig.direction) {\r\n                                light.position.set(...lightConfig.direction);\r\n                            } else {\r\n                                light.position.set(5, 10, 7); // 默认方向\r\n                            }\r\n                            light.castShadow = true;\r\n                            break;\r\n\r\n                        case 'point':\r\n                            light = new THREE.PointLight(\r\n                                lightConfig.color || 0xffffff,\r\n                                lightConfig.intensity || 1,\r\n                                100, // 距离\r\n                                1    // 衰减\r\n                            );\r\n                            if (lightConfig.position) {\r\n                                light.position.set(...lightConfig.position);\r\n                            } else {\r\n                                light.position.set(0, 5, 0); // 默认位置\r\n                            }\r\n                            light.castShadow = true;\r\n                            break;\r\n\r\n                        case 'spot':\r\n                            light = new THREE.SpotLight(\r\n                                lightConfig.color || 0xffffff,\r\n                                lightConfig.intensity || 1,\r\n                                100,  // 距离\r\n                                Math.PI / 4, // 角度\r\n                                0.5,  // 衰减\r\n                                1     // 聚光灯指数\r\n                            );\r\n                            if (lightConfig.position) {\r\n                                light.position.set(...lightConfig.position);\r\n                            } else {\r\n                                light.position.set(0, 10, 0); // 默认位置\r\n                            }\r\n                            // 修复SpotLight target设置问题\r\n                            if (lightConfig.direction) {\r\n                                // 创建一个新的Object3D作为target\r\n                                const targetObject = new THREE.Object3D();\r\n                                targetObject.position.set(...lightConfig.direction);\r\n                                this.addObject(targetObject);\r\n                                (light as THREE.SpotLight).target = targetObject;\r\n                            }\r\n                            light.castShadow = true;\r\n                            break;\r\n\r\n                        default:\r\n                            console.warn(`[UVAnimationScript] Unsupported light type: ${lightConfig.type}`);\r\n                            continue;\r\n                    }\r\n\r\n                    light.name = `${lightConfig.type}Light`;\r\n                    this.addObject(light);\r\n                    console.log(`[UVAnimationScript] Created light: ${lightConfig.type}`);\r\n                }\r\n            }\r\n\r\n            // 添加标题文字（如果在主场景中）\r\n            if (this.scene.name === 'main') {\r\n                this.addTitleElement();\r\n            }\r\n        } catch (error) {\r\n            console.error('[UVAnimationScript] Failed to create scene objects:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加标题元素\r\n     */\r\n    private addTitleElement(): void {\r\n        const title = document.createElement('div');\r\n        title.innerHTML = `\r\n            <h1 style=\"color: white; text-align: center; margin-top: 20px;\">UV动画测试 - 镂空贴图效果</h1>\r\n            <p style=\"color: #ccc; text-align: center;\">黑色部分形成镂空效果，可以透过看到背景</p>\r\n            <p style=\"color: #ccc; text-align: center;\">常用于制作树叶、栅栏、装饰图案等</p>\r\n            <p style=\"color: #ccc; text-align: center;\">使用鼠标拖拽旋转视角，滚动缩放</p>\r\n        `;\r\n        title.style.position = 'absolute';\r\n        title.style.top = '0';\r\n        title.style.width = '100%';\r\n        title.style.zIndex = '100';\r\n        title.style.pointerEvents = 'none'; // 不拦截鼠标事件\r\n        document.body.appendChild(title);\r\n    }\r\n\r\n    /**\r\n     * 添加UV动画\r\n     * @param config 动画配置\r\n     */\r\n    public addAnimation(config: UVAnimationConfig): void {\r\n        const fullConfig = { ...this.defaultConfig, ...config };\r\n\r\n        // 检查是否已存在同名动画\r\n        if (this.animations.has(fullConfig.targetName)) {\r\n            console.warn(`[UVAnimationScript] Animation for target \"${fullConfig.targetName}\" already exists`);\r\n            return;\r\n        }\r\n\r\n        this.animations.set(fullConfig.targetName, {\r\n            mesh: null as any, // 将在start中初始化\r\n            config: fullConfig,\r\n            offset: new THREE.Vector2(0, 0),\r\n            scale: new THREE.Vector2(1, 1),\r\n            rotation: 0\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 移除UV动画\r\n     * @param targetName 目标对象名称\r\n     */\r\n    public removeAnimation(targetName: string): void {\r\n        const animation = this.animations.get(targetName);\r\n        if (animation) {\r\n            // 重置材质的UV变换\r\n            if (animation.mesh && animation.mesh.material) {\r\n                this.resetMaterialUV(animation.mesh.material);\r\n            }\r\n            this.animations.delete(targetName);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新动画配置\r\n     * @param targetName 目标对象名称\r\n     * @param config 新的配置\r\n     */\r\n    public updateAnimation(targetName: string, config: Partial<UVAnimationConfig>): void {\r\n        const animation = this.animations.get(targetName);\r\n        if (animation) {\r\n            Object.assign(animation.config, config);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启用动画\r\n     * @param targetName 目标对象名称\r\n     */\r\n    public enableAnimation(targetName: string): void {\r\n        const animation = this.animations.get(targetName);\r\n        if (animation) {\r\n            animation.config.enabled = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 禁用动画\r\n     * @param targetName 目标对象名称\r\n     */\r\n    public disableAnimation(targetName: string): void {\r\n        const animation = this.animations.get(targetName);\r\n        if (animation) {\r\n            animation.config.enabled = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取动画配置\r\n     * @param targetName 目标对象名称\r\n     */\r\n    public getAnimationConfig(targetName: string): UVAnimationConfig | undefined {\r\n        const animation = this.animations.get(targetName);\r\n        return animation ? animation.config : undefined;\r\n    }\r\n\r\n    /**\r\n     * 重置材质的UV变换\r\n     * @param material 材质\r\n     */\r\n    private resetMaterialUV(material: THREE.Material | THREE.Material[]): void {\r\n        if (Array.isArray(material)) {\r\n            material.forEach(mat => this.resetSingleMaterialUV(mat));\r\n        } else {\r\n            this.resetSingleMaterialUV(material);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重置单个材质的UV变换\r\n     * @param material 材质\r\n     */\r\n    private resetSingleMaterialUV(material: THREE.Material): void {\r\n        if ((material as any).map) {\r\n            const texture = (material as any).map;\r\n            texture.offset.set(0, 0);\r\n            texture.repeat.set(1, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化脚本\r\n     */\r\n    public override start(): void {\r\n        super.start?.();\r\n\r\n        // 创建场景对象\r\n        this.createSceneObjects().then(() => {\r\n            // 查找并初始化所有动画目标\r\n            this.animations.forEach((animation, targetName) => {\r\n                // 如果mesh还没有设置（可能是在createSceneObjects中设置的）\r\n                if (!animation.mesh) {\r\n                    const object = this.scene.getObjectByName(targetName);\r\n                    if (object && object instanceof THREE.Mesh) {\r\n                        animation.mesh = object as THREE.Mesh;\r\n                        // 应用材质配置\r\n                        this.applyMaterialConfig(animation);\r\n                        console.log(`[UVAnimationScript] Found target mesh: ${targetName}`);\r\n                    } else {\r\n                        console.warn(`[UVAnimationScript] Target mesh not found: ${targetName}`);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 应用材质配置\r\n     * @param animation 动画数据\r\n     */\r\n    private applyMaterialConfig(animation: {\r\n        mesh: THREE.Mesh;\r\n        config: Required<UVAnimationConfig>;\r\n    }): void {\r\n        const material = animation.mesh.material;\r\n\r\n        const applyToMaterial = (mat: THREE.Material) => {\r\n            // 设置透明度\r\n            if (animation.config.transparent !== undefined) {\r\n                mat.transparent = animation.config.transparent;\r\n            }\r\n\r\n            if (animation.config.opacity !== undefined) {\r\n                mat.opacity = animation.config.opacity;\r\n            }\r\n\r\n            // 设置双面材质\r\n            if (animation.config.doubleSided !== undefined) {\r\n                mat.side = animation.config.doubleSided ? THREE.DoubleSide : THREE.FrontSide;\r\n            }\r\n        };\r\n\r\n        // 处理单个材质或材质数组\r\n        if (Array.isArray(material)) {\r\n            material.forEach(applyToMaterial);\r\n        } else {\r\n            applyToMaterial(material);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新动画\r\n     * @param deltaTime 帧时间\r\n     */\r\n    public override update(deltaTime: number): void {\r\n        super.update?.(deltaTime);\r\n\r\n        this.animations.forEach(animation => {\r\n            // 检查动画是否启用且mesh存在\r\n            if (!animation.config.enabled || !animation.mesh) return;\r\n\r\n            // 更新偏移\r\n            animation.offset.x += animation.config.scrollSpeedX! * deltaTime;\r\n            animation.offset.y += animation.config.scrollSpeedY! * deltaTime;\r\n\r\n            // 更新缩放\r\n            animation.scale.x += animation.config.scaleSpeedX! * deltaTime;\r\n            animation.scale.y += animation.config.scaleSpeedY! * deltaTime;\r\n\r\n            // 更新旋转\r\n            animation.rotation += animation.config.rotationSpeed! * deltaTime;\r\n\r\n            // 应用UV变换到材质\r\n            this.applyUVTransform(animation);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 应用UV变换到材质\r\n     * @param animation 动画数据\r\n     */\r\n    private applyUVTransform(animation: {\r\n        mesh: THREE.Mesh;\r\n        offset: THREE.Vector2;\r\n        scale: THREE.Vector2;\r\n        rotation: number;\r\n    }): void {\r\n        const material = animation.mesh.material;\r\n        if (!material) return;\r\n\r\n        const applyToMaterial = (mat: THREE.Material) => {\r\n            // 检查材质是否有纹理\r\n            if ((mat as any).map) {\r\n                const texture = (mat as any).map;\r\n\r\n                // 确保设置了重复包装模式，这对于UV动画是必需的\r\n                texture.wrapS = THREE.RepeatWrapping;\r\n                texture.wrapT = THREE.RepeatWrapping;\r\n\r\n                // 应用偏移\r\n                texture.offset.x = animation.offset.x;\r\n                texture.offset.y = animation.offset.y;\r\n\r\n                // 应用缩放\r\n                texture.repeat.x = animation.scale.x;\r\n                texture.repeat.y = animation.scale.y;\r\n\r\n                // 标记纹理需要更新\r\n                texture.needsUpdate = true;\r\n            }\r\n        };\r\n\r\n        // 处理单个材质或材质数组\r\n        if (Array.isArray(material)) {\r\n            material.forEach(applyToMaterial);\r\n        } else {\r\n            applyToMaterial(material);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁脚本\r\n     */\r\n    public override destroy(): void {\r\n        super.destroy?.();\r\n\r\n        // 移除标题元素\r\n        const titles = document.querySelectorAll('div h1, div p');\r\n        titles.forEach(element => {\r\n            if (element.textContent?.includes('UV动画测试')) {\r\n                element.parentElement?.remove();\r\n            }\r\n        });\r\n\r\n        // 重置所有材质的UV变换\r\n        this.animations.forEach(animation => {\r\n            if (animation.mesh && animation.mesh.material) {\r\n                this.resetMaterialUV(animation.mesh.material);\r\n            }\r\n        });\r\n\r\n        // 销毁纹理\r\n        if (this.sharedTexture) {\r\n            this.sharedTexture.dispose();\r\n        }\r\n        if (this.alphaMap) {\r\n            this.alphaMap.dispose();\r\n        }\r\n\r\n        this.animations.clear();\r\n    }\r\n}\r\n","import { THREE } from \"../core/global\";\r\nimport { CanvasTexture } from \"three\";\r\n\r\n/**\r\n * UV动画材质类\r\n * 专门用于处理UV动画的材质\r\n */\r\nexport class AnimationMaterial extends THREE.MeshStandardMaterial {\r\n    private _uvOffset: THREE.Vector2 = new THREE.Vector2(0, 0);\r\n    private _uvScale: THREE.Vector2 = new THREE.Vector2(1, 1);\r\n    private _uvRotation: number = 0;\r\n\r\n    constructor(config?: {\r\n        depthWrite?: boolean;\r\n        color?: number | string;\r\n        texture?: THREE.Texture;\r\n        alphaMap?: CanvasTexture;\r\n        doubleSided?: boolean;\r\n        opacity?: number;\r\n        uvScale?: THREE.Vector2;\r\n        uvOffset?: THREE.Vector2;\r\n        transparent?: boolean;\r\n    }) {\r\n        // 处理透明度相关配置\r\n        const isTransparent = config?.transparent ?? false;\r\n        const hasAlphaMap = !!config?.alphaMap;\r\n        const opacity = config?.opacity ?? 1.0;\r\n\r\n        // 对于透明材质，通常需要关闭深度写入以避免遮挡问题\r\n        const depthWrite = config?.depthWrite ?? !(isTransparent || hasAlphaMap || opacity < 1.0);\r\n\r\n        super({\r\n            color: config?.color,\r\n            transparent: isTransparent,\r\n            opacity: opacity,\r\n            map: config?.texture,\r\n            alphaTest: 0.05,\r\n            alphaMap: config?.alphaMap,\r\n            side: config?.doubleSided ? THREE.DoubleSide : THREE.FrontSide,\r\n            blending: THREE.AdditiveBlending,\r\n            depthWrite: depthWrite\r\n        });\r\n\r\n        // 对于透明材质，设置渲染顺序以确保在不透明对象之后渲染\r\n        if (isTransparent || hasAlphaMap || opacity < 1.0) {\r\n            this.depthWrite = false;\r\n            // 设置透明对象的渲染顺序，确保在不透明对象之后渲染\r\n            this.transparent = true;\r\n        }\r\n\r\n        // 正确处理uvOffset配置\r\n        if (config?.uvOffset) {\r\n            this._uvOffset.copy(config.uvOffset);\r\n        }\r\n\r\n        // 正确处理uvScale配置\r\n        if (config?.uvScale) {\r\n            this._uvScale.copy(config.uvScale);\r\n        }\r\n\r\n        // 确保纹理使用重复包装模式\r\n        if (this.map) {\r\n            this.map.wrapS = THREE.RepeatWrapping;\r\n            this.map.wrapT = THREE.RepeatWrapping;\r\n        }\r\n\r\n        if (this.alphaMap) {\r\n            this.alphaMap.wrapS = THREE.RepeatWrapping;\r\n            this.alphaMap.wrapT = THREE.RepeatWrapping;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取UV偏移\r\n     */\r\n    get uvOffset(): THREE.Vector2 {\r\n        return this._uvOffset.clone();\r\n    }\r\n\r\n    /**\r\n     * 设置UV偏移\r\n     */\r\n    set uvOffset(value: THREE.Vector2) {\r\n        this._uvOffset.copy(value);\r\n        this.updateUVTransform();\r\n    }\r\n\r\n    /**\r\n     * 获取UV缩放\r\n     */\r\n    get uvScale(): THREE.Vector2 {\r\n        return this._uvScale.clone();\r\n    }\r\n\r\n    /**\r\n     * 设置UV缩放\r\n     */\r\n    set uvScale(value: THREE.Vector2) {\r\n        this._uvScale.copy(value);\r\n        this.updateUVTransform();\r\n    }\r\n\r\n    /**\r\n     * 获取UV旋转角度\r\n     */\r\n    get uvRotation(): number {\r\n        return this._uvRotation;\r\n    }\r\n\r\n    /**\r\n     * 设置UV旋转角度\r\n     */\r\n    set uvRotation(value: number) {\r\n        this._uvRotation = value;\r\n        this.updateUVTransform();\r\n    }\r\n\r\n    /**\r\n     * 更新UV变换\r\n     */\r\n    private updateUVTransform(): void {\r\n        if (this.map) {\r\n            this.map.offset.copy(this._uvOffset);\r\n            this.map.repeat.copy(this._uvScale);\r\n            this.map.needsUpdate = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 应用UV滚动\r\n     * @param deltaX X轴偏移增量\r\n     * @param deltaY Y轴偏移增量\r\n     */\r\n    public scrollUV(deltaX: number, deltaY: number): void {\r\n        this._uvOffset.x += deltaX;\r\n        this._uvOffset.y += deltaY;\r\n        this.updateUVTransform();\r\n    }\r\n\r\n    /**\r\n     * 应用UV缩放\r\n     * @param scaleX X轴缩放增量\r\n     * @param scaleY Y轴缩放增量\r\n     */\r\n    public scaleUV(scaleX: number, scaleY: number): void {\r\n        this._uvScale.x += scaleX;\r\n        this._uvScale.y += scaleY;\r\n        this.updateUVTransform();\r\n    }\r\n\r\n    /**\r\n     * 重置UV变换到初始状态\r\n     */\r\n    public resetUV(): void {\r\n        this._uvOffset.set(0, 0);\r\n        this._uvScale.set(1, 1);\r\n        this._uvRotation = 0;\r\n        this.updateUVTransform();\r\n    }\r\n\r\n    /**\r\n     * 设置UV变换参数\r\n     * @param offset UV偏移\r\n     * @param scale UV缩放\r\n     * @param rotation UV旋转角度\r\n     */\r\n    public setUVTransform(offset?: THREE.Vector2, scale?: THREE.Vector2, rotation?: number): void {\r\n        if (offset) {\r\n            this._uvOffset.copy(offset);\r\n        }\r\n        if (scale) {\r\n            this._uvScale.copy(scale);\r\n        }\r\n        if (rotation !== undefined) {\r\n            this._uvRotation = rotation;\r\n        }\r\n        this.updateUVTransform();\r\n    }\r\n\r\n    /**\r\n     * 获取当前UV变换状态\r\n     */\r\n    public getUVTransform(): { offset: THREE.Vector2; scale: THREE.Vector2; rotation: number } {\r\n        return {\r\n            offset: this._uvOffset.clone(),\r\n            scale: this._uvScale.clone(),\r\n            rotation: this._uvRotation\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * UV动画配置接口\r\n */\r\nexport interface UVAnimationConfig {\r\n    /** 动画目标对象名称 */\r\n    targetName: string;\r\n    /** UV滚动速度 X轴 */\r\n    scrollSpeedX?: number;\r\n    /** UV滚动速度 Y轴 */\r\n    scrollSpeedY?: number;\r\n    /** UV缩放速度 X轴 */\r\n    scaleSpeedX?: number;\r\n    /** UV缩放速度 Y轴 */\r\n    scaleSpeedY?: number;\r\n    /** UV旋转速度 */\r\n    rotationSpeed?: number;\r\n    /** 是否启用 */\r\n    enabled?: boolean;\r\n    /** 是否启用透明度 */\r\n    transparent?: boolean;\r\n    /** 透明度值 */\r\n    opacity?: number;\r\n    /** 是否使用双面材质 */\r\n    doubleSided?: boolean;\r\n}\r\n\r\nexport class UVAnimationScript {\r\n    private animations: Map<string, {\r\n        mesh: THREE.Mesh;\r\n        config: Required<UVAnimationConfig>;\r\n        offset: THREE.Vector2;\r\n        scale: THREE.Vector2;\r\n        rotation: number;\r\n    }> = new Map();\r\n\r\n    private defaultConfig: Required<UVAnimationConfig> = {\r\n        targetName: '',\r\n        scrollSpeedX: 0,\r\n        scrollSpeedY: 0,\r\n        scaleSpeedX: 0,\r\n        scaleSpeedY: 0,\r\n        rotationSpeed: 0,\r\n        enabled: true,\r\n        transparent: false,\r\n        opacity: 1.0,\r\n        doubleSided: false\r\n    };\r\n\r\n    constructor(configs?: UVAnimationConfig | UVAnimationConfig[]) {\r\n        if (configs) {\r\n            if (Array.isArray(configs)) {\r\n                configs.forEach(config => this.addAnimation(config));\r\n            } else {\r\n                this.addAnimation(configs);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加UV动画\r\n     * @param config 动画配置\r\n     */\r\n    public addAnimation(config: UVAnimationConfig): void {\r\n        const fullConfig = { ...this.defaultConfig, ...config };\r\n\r\n        // 检查是否已存在同名动画\r\n        if (this.animations.has(fullConfig.targetName)) {\r\n            console.warn(`[UVAnimationScript] Animation for target \"${fullConfig.targetName}\" already exists`);\r\n            return;\r\n        }\r\n\r\n        this.animations.set(fullConfig.targetName, {\r\n            mesh: null as any, // 将在start中初始化\r\n            config: fullConfig,\r\n            offset: new THREE.Vector2(0, 0),\r\n            scale: new THREE.Vector2(1, 1),\r\n            rotation: 0\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 移除UV动画\r\n     * @param targetName 目标对象名称\r\n     */\r\n    public removeAnimation(targetName: string): void {\r\n        const animation = this.animations.get(targetName);\r\n        if (animation) {\r\n            // 重置材质的UV变换\r\n            if (animation.mesh && animation.mesh.material) {\r\n                this.resetMaterialUV(animation.mesh.material);\r\n            }\r\n            this.animations.delete(targetName);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新动画配置\r\n     * @param targetName 目标对象名称\r\n     * @param config 新的配置\r\n     */\r\n    public updateAnimation(targetName: string, config: Partial<UVAnimationConfig>): void {\r\n        const animation = this.animations.get(targetName);\r\n        if (animation) {\r\n            Object.assign(animation.config, config);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启用动画\r\n     * @param targetName 目标对象名称\r\n     */\r\n    public enableAnimation(targetName: string): void {\r\n        const animation = this.animations.get(targetName);\r\n        if (animation) {\r\n            animation.config.enabled = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 禁用动画\r\n     * @param targetName 目标对象名称\r\n     */\r\n    public disableAnimation(targetName: string): void {\r\n        const animation = this.animations.get(targetName);\r\n        if (animation) {\r\n            animation.config.enabled = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取动画配置\r\n     * @param targetName 目标对象名称\r\n     */\r\n    public getAnimationConfig(targetName: string): UVAnimationConfig | undefined {\r\n        const animation = this.animations.get(targetName);\r\n        return animation ? animation.config : undefined;\r\n    }\r\n\r\n    /**\r\n     * 重置材质的UV变换\r\n     * @param material 材质\r\n     */\r\n    private resetMaterialUV(material: THREE.Material | THREE.Material[]): void {\r\n        if (Array.isArray(material)) {\r\n            material.forEach(mat => this.resetSingleMaterialUV(mat));\r\n        } else {\r\n            this.resetSingleMaterialUV(material);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重置单个材质的UV变换\r\n     * @param material 材质\r\n     */\r\n    private resetSingleMaterialUV(material: THREE.Material): void {\r\n        if ((material as any).map) {\r\n            const texture = (material as any).map;\r\n            texture.offset.set(0, 0);\r\n            texture.repeat.set(1, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载纹理的辅助函数\r\n     * @param url 纹理文件路径\r\n     * @returns Promise<THREE.Texture>\r\n     */\r\n    private loadTexture(url: string): Promise<THREE.Texture> {\r\n        return new Promise((resolve, reject) => {\r\n            const loader = new THREE.TextureLoader();\r\n            loader.load(\r\n                url,\r\n                (texture) => {\r\n                    texture.wrapS = THREE.RepeatWrapping;\r\n                    texture.wrapT = THREE.RepeatWrapping;\r\n                    // 启用透明贴图支持\r\n                    texture.format = THREE.RGBAFormat;\r\n                    resolve(texture);\r\n                },\r\n                undefined,\r\n                (error) => {\r\n                    console.error('[UVAnimationScript] 纹理加载失败:', error);\r\n                    reject(error);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 创建渐变透明贴图\r\n     * @param direction 渐变方向\r\n     * @returns Canvas纹理\r\n     */\r\n    private createGradientAlphaMap(direction: 'bottomToTop' | 'topToBottom' | 'leftToRight' | 'rightToLeft' = 'bottomToTop'): THREE.CanvasTexture {\r\n        const gradientCanvas = document.createElement('canvas');\r\n        gradientCanvas.width = 256;\r\n        gradientCanvas.height = 256;\r\n        const ctx = gradientCanvas.getContext('2d')!;\r\n\r\n        let gradient;\r\n        switch (direction) {\r\n            case 'bottomToTop':\r\n                gradient = ctx.createLinearGradient(0, gradientCanvas.height, 0, 0);\r\n                break;\r\n            case 'topToBottom':\r\n                gradient = ctx.createLinearGradient(0, 0, 0, gradientCanvas.height);\r\n                break;\r\n            case 'leftToRight':\r\n                gradient = ctx.createLinearGradient(0, 0, gradientCanvas.width, 0);\r\n                break;\r\n            case 'rightToLeft':\r\n                gradient = ctx.createLinearGradient(gradientCanvas.width, 0, 0, 0);\r\n                break;\r\n            default:\r\n                gradient = ctx.createLinearGradient(0, gradientCanvas.height, 0, 0);\r\n        }\r\n\r\n        // 创建渐变（从透明到不透明）\r\n        gradient.addColorStop(0, 'rgba(0, 0, 0, 0)');   // 完全透明\r\n        gradient.addColorStop(1, 'rgba(255, 255, 255, 1)'); // 完全不透明\r\n\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(0, 0, gradientCanvas.width, gradientCanvas.height);\r\n\r\n        const alphaMap = new THREE.CanvasTexture(gradientCanvas);\r\n        alphaMap.wrapS = THREE.RepeatWrapping;\r\n        alphaMap.wrapT = THREE.RepeatWrapping;\r\n\r\n        return alphaMap;\r\n    }\r\n\r\n    /**\r\n     * 加载外部alpha贴图\r\n     * @param url 贴图URL\r\n     * @returns Promise<THREE.Texture>\r\n     */\r\n    private loadAlphaMap(url: string): Promise<THREE.Texture | null> {\r\n        return new Promise((resolve) => {\r\n            const loader = new THREE.TextureLoader();\r\n            loader.load(\r\n                url,\r\n                (texture) => {\r\n                    texture.wrapS = THREE.RepeatWrapping;\r\n                    texture.wrapT = THREE.RepeatWrapping;\r\n                    texture.format = THREE.RedFormat; // Alpha贴图通常只需要红色通道\r\n                    resolve(texture);\r\n                },\r\n                undefined,\r\n                (error) => {\r\n                    console.error('[UVAnimationScript] Alpha贴图加载失败:', error);\r\n                    // 如果外部贴图加载失败，返回null，后续会使用程序生成的渐变贴图\r\n                    resolve(null);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n    private MeshStandardUVMaterial(sharedTexture: THREE.Texture, alphaMap: THREE.Texture | null): THREE.MeshStandardMaterial {\r\n        // 对于透明材质，通常需要关闭深度写入以避免遮挡问题\r\n        const hasAlphaMap = !!alphaMap;\r\n        const isTransparent = true; // 明确设置为透明\r\n        const depthWrite = !(isTransparent || hasAlphaMap);\r\n\r\n        const material = new THREE.MeshStandardMaterial({\r\n            color: '#fff300',                   // 材质基础颜色\r\n            transparent: isTransparent,         // 开启透明混合\r\n            map: sharedTexture,                 // 绑定基础纹理\r\n            alphaMap: alphaMap || undefined,    // 绑定alpha贴图\r\n            opacity: 1,                         // 全局透明度\r\n            depthWrite: depthWrite,             // 透明物体关闭深度写入\r\n            blending: THREE.AdditiveBlending,   // 发光效果混合\r\n            side: THREE.DoubleSide              // 双面渲染\r\n        });\r\n\r\n        // 确保透明材质正确渲染\r\n        if (isTransparent || hasAlphaMap) {\r\n            material.depthWrite = false;\r\n        }\r\n\r\n        return material;\r\n    }\r\n\r\n    /**\r\n     * 应用材质配置\r\n     * @param animation 动画数据\r\n     */\r\n    private applyMaterialConfig(animation: { mesh: THREE.Mesh; config: Required<UVAnimationConfig>; }): void {\r\n        const material = animation.mesh.material;\r\n        const applyToMaterial = (mat: THREE.Material) => {\r\n            // 设置透明度\r\n            if (animation.config.transparent !== undefined) {\r\n                mat.transparent = animation.config.transparent;\r\n            }\r\n\r\n            if (animation.config.opacity !== undefined) {\r\n                mat.opacity = animation.config.opacity;\r\n            }\r\n\r\n            // 正确处理深度写入设置，避免透明材质遮挡问题\r\n            if (mat.constructor === THREE.Material) {\r\n                // 对于透明材质，通常需要关闭深度写入以避免遮挡问题\r\n                const isTransparent = mat.transparent || (mat.opacity !== undefined && mat.opacity < 1.0);\r\n                if (mat.depthWrite !== undefined) {\r\n                    mat.depthWrite = !isTransparent;\r\n                }\r\n\r\n                // 确保透明对象在不透明对象之后渲染\r\n                if (isTransparent && mat.transparent !== undefined) {\r\n                    mat.transparent = true;\r\n                }\r\n            }\r\n\r\n            // 设置双面材质\r\n            if (animation.config.doubleSided !== undefined) {\r\n                mat.side = animation.config.doubleSided ? THREE.DoubleSide : THREE.FrontSide;\r\n            }\r\n        };\r\n\r\n        // 处理单个材质或材质数组\r\n        if (Array.isArray(material)) {\r\n            material.forEach(applyToMaterial);\r\n        } else {\r\n            applyToMaterial(material);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新动画\r\n     * @param deltaTime 帧时间\r\n     */\r\n    public update(deltaTime: number): void {\r\n        this.animations.forEach(animation => {\r\n            // 检查动画是否启用且mesh存在\r\n            if (!animation.config.enabled || !animation.mesh) return;\r\n\r\n            // 更新偏移\r\n            animation.offset.x += animation.config.scrollSpeedX * deltaTime;\r\n            animation.offset.y += animation.config.scrollSpeedY * deltaTime;\r\n\r\n            // 更新缩放\r\n            animation.scale.x += animation.config.scaleSpeedX * deltaTime;\r\n            animation.scale.y += animation.config.scaleSpeedY * deltaTime;\r\n\r\n            // 更新旋转\r\n            animation.rotation += animation.config.rotationSpeed * deltaTime;\r\n\r\n            // 应用UV变换到材质\r\n            this.applyUVTransform(animation);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 应用UV变换到材质\r\n     * @param animation 动画数据\r\n     */\r\n    private applyUVTransform(animation: {\r\n        mesh: THREE.Mesh;\r\n        offset: THREE.Vector2;\r\n        scale: THREE.Vector2;\r\n        rotation: number;\r\n    }): void {\r\n        const material = animation.mesh.material;\r\n        if (!material) return;\r\n\r\n        const applyToMaterial = (mat: THREE.Material) => {\r\n            // 检查材质是否有纹理\r\n            if ((mat as any).map) {\r\n                const texture = (mat as any).map;\r\n\r\n                // 确保设置了重复包装模式，这对于UV动画是必需的\r\n                texture.wrapS = THREE.RepeatWrapping;\r\n                texture.wrapT = THREE.RepeatWrapping;\r\n\r\n                // 应用偏移\r\n                texture.offset.x = animation.offset.x;\r\n                texture.offset.y = animation.offset.y;\r\n\r\n                // 应用缩放\r\n                texture.repeat.x = animation.scale.x;\r\n                texture.repeat.y = animation.scale.y;\r\n\r\n                // 标记纹理需要更新\r\n                texture.needsUpdate = true;\r\n            }\r\n        };\r\n\r\n        // 处理单个材质或材质数组\r\n        if (Array.isArray(material)) {\r\n            material.forEach(applyToMaterial);\r\n        } else {\r\n            applyToMaterial(material);\r\n        }\r\n    }\r\n}\r\n","import { THREE } from \"../core/global\";\r\n\r\nexport interface GlowMaterialParameters {\r\n    map?: THREE.Texture | null;\r\n    aoMap?: THREE.Texture | null;  // AO贴图\r\n    glowColor?: THREE.Color | string | number;\r\n    glowIntensity?: number;\r\n    baseBrightness?: number;\r\n    side?: THREE.Side;  // 双面材质支持\r\n}\r\n\r\nexport class ShaderGlowMaterial extends THREE.ShaderMaterial {\r\n    constructor(parameters: GlowMaterialParameters = {}) {\r\n        const glowColor = parameters.glowColor !== undefined ?\r\n            (parameters.glowColor instanceof THREE.Color ? parameters.glowColor : new THREE.Color(parameters.glowColor)) : '#fffb2e';\r\n\r\n        const baseBrightness = parameters.baseBrightness !== undefined ? parameters.baseBrightness : 0.8;\r\n\r\n        // 设置双面材质，默认为正面渲染\r\n        const side = parameters.side !== undefined ? parameters.side : THREE.FrontSide;\r\n\r\n        super({\r\n            uniforms: {\r\n                map: { value: parameters.map || null },\r\n                aoMap: { value: parameters.aoMap || null },\r\n                glowColor: { value: glowColor },\r\n                glowIntensity: { value: parameters.glowIntensity !== undefined ? parameters.glowIntensity : 2.0 },\r\n                baseBrightness: { value: baseBrightness }\r\n            },\r\n            side: side,  // 设置渲染面\r\n            vertexShader: `\r\n                varying vec2 vUv;\r\n                varying vec3 vNormal;\r\n                varying vec2 vUv2; // 第二UV坐标用于AO贴图\r\n                void main() {\r\n                    vUv = uv;\r\n                    vNormal = normalize(normalMatrix * normal);\r\n                    // 如果存在第二UV坐标则使用，否则使用第一UV坐标\r\n                    #ifdef USE_UV2\r\n                        vUv2 = uv2;\r\n                    #else\r\n                        vUv2 = uv;\r\n                    #endif\r\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n                }\r\n            `,\r\n            fragmentShader: `\r\n                uniform sampler2D map;\r\n                uniform sampler2D glowMap;\r\n                uniform vec3 glowColor;\r\n                uniform float glowIntensity;\r\n                uniform float baseBrightness;\r\n                varying vec2 vUv;\r\n                varying vec3 vNormal;\r\n                varying vec2 vUv2;\r\n\r\n                void main() {\r\n                    vec4 texColor = texture2D(map, vUv);\r\n                    // 从AO贴图获取环境光遮蔽值\r\n                    vec4 aoValue = texture2D(glowMap, vUv2);\r\n                    \r\n                    // 直接使用AO贴图的灰度值控制自发光（反向效果）\r\n                    // AO贴图中较暗的区域（灰度值接近0）会产生更强的自发光\r\n                    // 1.0 - aoValue.r 实现反向效果：暗部发光，亮部不发光\r\n                    float glowFactor = (1.0 - aoValue.r) * glowIntensity;\r\n                    \r\n                    // 调整基础颜色亮度，避免过白\r\n                    vec3 adjustedBaseColor = texColor.rgb * baseBrightness;\r\n                    \r\n                    // 计算最终颜色：调整后的基础纹理颜色 + 自发光颜色\r\n                    vec3 finalColor = adjustedBaseColor + glowColor * glowFactor;\r\n                    \r\n                    // 限制最大亮度，避免过曝\r\n                    finalColor = min(finalColor, vec3(1.0));\r\n                    \r\n                    gl_FragColor = vec4(finalColor, texColor.a);\r\n                }\r\n            `\r\n        });\r\n    }\r\n\r\n    get map(): THREE.Texture | null {\r\n        return this.uniforms.map.value;\r\n    }\r\n\r\n    set map(value: THREE.Texture | null) {\r\n        this.uniforms.map.value = value;\r\n    }\r\n\r\n    get glowMap(): THREE.Texture | null {\r\n        return this.uniforms.glowMap.value;\r\n    }\r\n\r\n    set glowMap(value: THREE.Texture | null) {\r\n        this.uniforms.glowMap.value = value;\r\n    }\r\n\r\n    get glowColor(): THREE.Color {\r\n        return this.uniforms.glowColor.value;\r\n    }\r\n\r\n    set glowColor(value: THREE.Color) {\r\n        this.uniforms.glowColor.value = value;\r\n    }\r\n\r\n    get glowIntensity(): number {\r\n        return this.uniforms.glowIntensity.value;\r\n    }\r\n\r\n    set glowIntensity(value: number) {\r\n        this.uniforms.glowIntensity.value = value;\r\n    }\r\n\r\n    get baseBrightness(): number {\r\n        return this.uniforms.baseBrightness.value;\r\n    }\r\n\r\n    set baseBrightness(value: number) {\r\n        this.uniforms.baseBrightness.value = value;\r\n    }\r\n\r\n    // 添加双面材质设置方法\r\n    setSide(side: THREE.Side): void {\r\n        this.side = side;\r\n    }\r\n}\r\n","import { THREE } from \"../core/global\";\r\n\r\n/**\r\n * 风效材质类\r\n * 专门用于处理带有弯曲效果的风流材质\r\n */\r\nexport class WindMaterial extends THREE.ShaderMaterial {\r\n    private _curveIntensity: number = 1.0;\r\n    private _windStrength: number = 0.7;\r\n    private _time: number = 0;\r\n    private _glowIntensity: number = 0.5; // 发光强度\r\n    private _glowColor: THREE.Color = new THREE.Color(0x00ffff); // 发光颜色\r\n    private _speed: number = 1.0; // 车辆速度\r\n    private _direction: number = 1.0; // 风流方向 (1为向前，-1为向后)\r\n\r\n    constructor(params?: THREE.ShaderMaterialParameters) {\r\n        const defaultParams = {\r\n            side: THREE.DoubleSide,\r\n            transparent: true,\r\n            depthWrite: false,\r\n            uniforms: {\r\n                uTime: { value: 0 },\r\n                uCurveIntensity: { value: 1.0 },\r\n                uWindStrength: { value: 0.7 },\r\n                uGlowIntensity: { value: 0.5 },\r\n                uGlowColor: { value: new THREE.Color(0x00ffff) },\r\n                uColor: { value: new THREE.Color(0x00ffff) },\r\n                uSpeed: { value: 1.0 }, // 车辆速度uniform\r\n                uDirection: { value: 1.0 } // 风流方向uniform\r\n            },\r\n            vertexShader: `\r\n                varying vec2 vUv;\r\n                varying vec3 vNormal;\r\n                varying vec3 vPosition;\r\n                uniform float uTime;\r\n                uniform float uCurveIntensity;\r\n                uniform float uSpeed;\r\n                uniform float uDirection;\r\n                \r\n                void main() {\r\n                    vUv = uv;\r\n                    vNormal = normalize(normalMatrix * normal);\r\n                    vPosition = position;\r\n                    \r\n                    // 修改顶点位置以创建弯曲效果\r\n                    vec3 newPosition = position;\r\n                    \r\n                    // 创建更自然的风流弯曲效果\r\n                    float windOffset = sin(uTime * uSpeed * 0.3 + position.y * 0.15) * uCurveIntensity * 0.08;\r\n                    // 添加基于X轴位置的波动，使效果更复杂\r\n                    float windOffset2 = cos(uTime * uSpeed * 0.25 + position.x * 0.1) * uCurveIntensity * 0.04;\r\n                    // 根据Y轴位置调整弯曲程度，使中心区域效果更明显\r\n                    float yFactor = 1.0 - pow(abs(position.y) / 0.4, 1.005);\r\n                    newPosition.x += (windOffset + windOffset2) * uDirection * yFactor;\r\n                    \r\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\r\n                }\r\n            `,\r\n            fragmentShader: `\r\n                varying vec2 vUv;\r\n                varying vec3 vNormal;\r\n                varying vec3 vPosition;\r\n                \r\n                uniform float uTime;\r\n                uniform float uWindStrength;\r\n                uniform float uGlowIntensity;\r\n                uniform vec3 uGlowColor;\r\n                uniform vec3 uColor;\r\n                uniform float uSpeed;\r\n                uniform float uDirection;\r\n                \r\n                void main() {\r\n                    // 计算Y轴渐变（从上到下透明度递减，并在边缘预留位置）\r\n                    float yGradient = 1.0 - vUv.y;\r\n                    // 在顶部和底部预留位置，使边缘完全透明\r\n                    yGradient = smoothstep(0.4995, 0.5005, yGradient);\r\n                    \r\n                    // 添加时间相关的波动效果，结合速度参数\r\n                    float wave = sin(uTime * uSpeed * 0.6 + vPosition.x * 0.8 + vPosition.y * 0.2) * 0.03;\r\n                    // 添加第二个频率的波动\r\n                    float wave2 = cos(uTime * uSpeed * 0.4 + vPosition.x * 0.4 + vPosition.y * 0.12) * 0.015;\r\n                    \r\n                    // 计算X轴渐变（中心透明度高，边缘低，并且边缘完全透明）\r\n                    float xGradient = 1.0 - abs(vUv.x - 0.5) * 2.0;\r\n                    // 在边缘预留位置，使效果边缘完全透明\r\n                    xGradient = smoothstep(0.4998, 0.5002, xGradient);\r\n                    \r\n                    // 计算径向渐变（从中心到边缘透明度递减）\r\n                    vec2 center = vec2(0.5, 0.5);\r\n                    float distance = distance(vUv, center);\r\n                    float radialGradient = 1.0 - distance * 1.0000005;\r\n                    // 在边缘预留位置，使边缘完全透明\r\n                    radialGradient = smoothstep(0.4995, 0.5005, radialGradient);\r\n                    \r\n                    // 综合透明度，结合速度影响\r\n                    float alpha = yGradient * xGradient * radialGradient * uWindStrength + wave + wave2;\r\n                    \r\n                    // 确保透明度在合理范围内\r\n                    alpha = clamp(alpha, 0.0, 1.0);\r\n                    \r\n                    // 添加颜色变化\r\n                    vec3 color = uColor;\r\n                    color.r += sin(uTime * uSpeed * 0.4 + vPosition.x * 0.1) * 0.03;\r\n                    color.g += cos(uTime * uSpeed * 0.5 + vPosition.y * 0.04) * 0.03;\r\n                    color.b += sin(uTime * uSpeed * 0.25 + vPosition.x * 0.05 + vPosition.y * 0.08) * 0.03;\r\n                    \r\n                    // 计算发光效果，结合速度参数\r\n                    float glow = uGlowIntensity * (0.06 + abs(sin(uTime * uSpeed * 1.0 + vPosition.x * 0.5)) * 0.1);\r\n                    vec3 glowColor = uGlowColor * glow * radialGradient;\r\n                    \r\n                    // 合成最终颜色\r\n                    vec3 finalColor = color + glowColor;\r\n                    \r\n                    // 如果透明度太低则丢弃像素，使边缘完全透明\r\n                    if (alpha < 0.00000005) discard;\r\n                    \r\n                    gl_FragColor = vec4(finalColor, alpha);\r\n                }\r\n            `,\r\n            ...params\r\n        };\r\n\r\n        super(defaultParams);\r\n\r\n        // 定义响应式属性\r\n        Object.defineProperties(this, {\r\n            curveIntensity: {\r\n                get: () => this._curveIntensity,\r\n                set: (value: number) => {\r\n                    this._curveIntensity = value;\r\n                    if (this.uniforms.uCurveIntensity) {\r\n                        this.uniforms.uCurveIntensity.value = value;\r\n                    }\r\n                }\r\n            },\r\n            windStrength: {\r\n                get: () => this._windStrength,\r\n                set: (value: number) => {\r\n                    this._windStrength = value;\r\n                    if (this.uniforms.uWindStrength) {\r\n                        this.uniforms.uWindStrength.value = value;\r\n                    }\r\n                }\r\n            },\r\n            time: {\r\n                get: () => this._time,\r\n                set: (value: number) => {\r\n                    this._time = value;\r\n                    if (this.uniforms.uTime) {\r\n                        this.uniforms.uTime.value = value;\r\n                    }\r\n                }\r\n            },\r\n            glowIntensity: {\r\n                get: () => this._glowIntensity,\r\n                set: (value: number) => {\r\n                    this._glowIntensity = value;\r\n                    if (this.uniforms.uGlowIntensity) {\r\n                        this.uniforms.uGlowIntensity.value = value;\r\n                    }\r\n                }\r\n            },\r\n            glowColor: {\r\n                get: () => this._glowColor,\r\n                set: (value: THREE.Color) => {\r\n                    this._glowColor = value;\r\n                    if (this.uniforms.uGlowColor) {\r\n                        this.uniforms.uGlowColor.value = value;\r\n                    }\r\n                }\r\n            },\r\n            speed: {\r\n                get: () => this._speed,\r\n                set: (value: number) => {\r\n                    this._speed = value;\r\n                    if (this.uniforms.uSpeed) {\r\n                        this.uniforms.uSpeed.value = value;\r\n                    }\r\n                }\r\n            },\r\n            direction: {\r\n                get: () => this._direction,\r\n                set: (value: number) => {\r\n                    this._direction = value;\r\n                    if (this.uniforms.uDirection) {\r\n                        this.uniforms.uDirection.value = value;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置弯曲强度\r\n     * @param intensity 弯曲强度 (0-2)\r\n     */\r\n    set curveIntensity(intensity: number) {\r\n        this._curveIntensity = intensity;\r\n        if (this.uniforms.uCurveIntensity) {\r\n            this.uniforms.uCurveIntensity.value = intensity;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取弯曲强度\r\n     */\r\n    get curveIntensity(): number {\r\n        return this._curveIntensity;\r\n    }\r\n\r\n    /**\r\n     * 设置风力强度\r\n     * @param strength 风力强度 (0.1-1.0)\r\n     */\r\n    set windStrength(strength: number) {\r\n        this._windStrength = strength;\r\n        if (this.uniforms.uWindStrength) {\r\n            this.uniforms.uWindStrength.value = strength;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取风力强度\r\n     */\r\n    get windStrength(): number {\r\n        return this._windStrength;\r\n    }\r\n\r\n    /**\r\n     * 设置时间参数\r\n     * @param time 时间值\r\n     */\r\n    set time(time: number) {\r\n        this._time = time;\r\n        if (this.uniforms.uTime) {\r\n            this.uniforms.uTime.value = time;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取时间参数\r\n     */\r\n    get time(): number {\r\n        return this._time;\r\n    }\r\n\r\n    /**\r\n     * 设置风流颜色\r\n     * @param color 颜色值\r\n     */\r\n    set color(color: THREE.Color) {\r\n        if (this.uniforms.uColor) {\r\n            this.uniforms.uColor.value = color;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取风流颜色\r\n     */\r\n    get color(): THREE.Color {\r\n        return this.uniforms.uColor?.value || new THREE.Color(0x00ffff);\r\n    }\r\n\r\n    /**\r\n     * 设置发光强度\r\n     * @param intensity 发光强度 (0-1)\r\n     */\r\n    set glowIntensity(intensity: number) {\r\n        this._glowIntensity = intensity;\r\n        if (this.uniforms.uGlowIntensity) {\r\n            this.uniforms.uGlowIntensity.value = intensity;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取发光强度\r\n     */\r\n    get glowIntensity(): number {\r\n        return this._glowIntensity;\r\n    }\r\n\r\n    /**\r\n     * 设置发光颜色\r\n     * @param color 发光颜色\r\n     */\r\n    set glowColor(color: THREE.Color) {\r\n        this._glowColor = color;\r\n        if (this.uniforms.uGlowColor) {\r\n            this.uniforms.uGlowColor.value = color;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取发光颜色\r\n     */\r\n    get glowColor(): THREE.Color {\r\n        return this._glowColor;\r\n    }\r\n\r\n    /**\r\n     * 设置车辆速度\r\n     * @param speed 车辆速度 (0-5)\r\n     */\r\n    set speed(speed: number) {\r\n        this._speed = speed;\r\n        if (this.uniforms.uSpeed) {\r\n            this.uniforms.uSpeed.value = speed;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取车辆速度\r\n     */\r\n    get speed(): number {\r\n        return this._speed;\r\n    }\r\n\r\n    /**\r\n     * 设置风流方向\r\n     * @param direction 风流方向 (1为向前，-1为向后)\r\n     */\r\n    set direction(direction: number) {\r\n        this._direction = direction;\r\n        if (this.uniforms.uDirection) {\r\n            this.uniforms.uDirection.value = direction;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取风流方向\r\n     */\r\n    get direction(): number {\r\n        return this._direction;\r\n    }\r\n}","import { THREE } from \"../core/global\";\r\n\r\n/**\r\n * 丝带材质类\r\n * 基于RetroArch菜单着色器管道的移植\r\n */\r\nexport class RibbonMaterial extends THREE.ShaderMaterial {\r\n    private _time: number = 1.0;\r\n\r\n    constructor(params?: THREE.ShaderMaterialParameters) {\r\n        const defaultParams = {\r\n            side: THREE.DoubleSide,\r\n            transparent: true,\r\n            depthTest: false,\r\n            uniforms: {\r\n                time: { value: 1.0 },\r\n            },\r\n            vertexShader: `\r\n                varying vec3 vEC;\r\n                uniform float time;\r\n        \r\n                float iqhash(float n) {\r\n                    return fract(sin(n) * 43758.5453);\r\n                }\r\n        \r\n                float noise(vec3 x) {\r\n                    vec3 p = floor(x);\r\n                    vec3 f = fract(x);\r\n                    f = f * f * (3.0 - 2.0 * f);\r\n                    float n = p.x + p.y * 57.0 + 113.0 * p.z;\r\n                    return mix(mix(mix(iqhash(n), iqhash(n + 1.0), f.x),\r\n                               mix(iqhash(n + 57.0), iqhash(n + 58.0), f.x), f.y),\r\n                               mix(mix(iqhash(n + 113.0), iqhash(n + 114.0), f.x),\r\n                               mix(iqhash(n + 170.0), iqhash(n + 171.0), f.x), f.y), f.z);\r\n                }\r\n        \r\n                float xmb_noise2(vec3 x) {\r\n                    return cos(x.z * 4.0) * cos(x.z + time / 10.0 + x.x);\r\n                }\r\n        \r\n                void main() {\r\n                    vec4 pos = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\r\n                    vec3 v = vec3(pos.x, 0.0, pos.y);\r\n                    vec3 v2 = v;\r\n                    vec3 v3 = v;\r\n        \r\n                    v.y = xmb_noise2(v2) / 8.0;\r\n        \r\n                    v3.x -= time / 5.0;\r\n                    v3.x /= 4.0;\r\n        \r\n                    v3.z -= time / 10.0;\r\n                    v3.y -= time / 100.0;\r\n        \r\n                    v.z -= noise(v3 * 7.0) / 15.0;\r\n                    v.y -= noise(v3 * 7.0) / 15.0 + cos(v.x * 2.0 - time / 2.0) / 5.0 - 0.3;\r\n        \r\n                    vEC = v;\r\n                    gl_Position = vec4(v, 1.0);\r\n                }\r\n            `,\r\n            fragmentShader: `\r\n                uniform float time;\r\n                varying vec3 vEC;\r\n        \r\n                void main()\r\n                {\r\n                   const vec3 up = vec3(0.0, 0.0, 1.0);\r\n                   vec3 x = dFdx(vEC);\r\n                   vec3 y = dFdy(vEC);\r\n                   vec3 normal = normalize(cross(x, y));\r\n                   float c = 1.0 - dot(normal, up);\r\n                   c = (1.0 - cos(c * c)) / 3.0;\r\n                   gl_FragColor = vec4(1.0, 1.0, 1.0, c * 1.5);\r\n                }\r\n            `,\r\n            extensions: {\r\n                derivatives: true\r\n            } as any,\r\n            ...params\r\n        };\r\n\r\n        super(defaultParams);\r\n\r\n        // 定义响应式属性\r\n        Object.defineProperties(this, {\r\n            time: {\r\n                get: () => this._time,\r\n                set: (value: number) => {\r\n                    this._time = value;\r\n                    if (this.uniforms.time) {\r\n                        this.uniforms.time.value = value;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 设置时间参数\r\n     * @param time 时间值\r\n     */\r\n    set time(time: number) {\r\n        this._time = time;\r\n        if (this.uniforms.time) {\r\n            this.uniforms.time.value = time;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取时间参数\r\n     */\r\n    get time(): number {\r\n        return this._time;\r\n    }\r\n}","import { THREE } from \"../core/global\";\r\nimport type {Vector3} from '../core/Type.ts';\r\n\r\n/**\r\n * 线性插值\r\n * @param start 起始值\r\n * @param end 结束值\r\n * @param factor 插值因子\r\n * @returns 插值结果\r\n */\r\nexport function lerp(start: number, end: number, factor: number): number {\r\n    return start + (end - start) * factor;\r\n}\r\n\r\n/**\r\n * 向量线性插值\r\n * @param start 起始向量\r\n * @param end 结束向量\r\n * @param factor 插值因子\r\n * @returns 插值后的向量\r\n */\r\nexport function lerpVector(start: Vector3, end: Vector3, factor: number): Vector3 {\r\n    return {\r\n        x: lerp(start.x, end.x, factor),\r\n        y: lerp(start.y, end.y, factor),\r\n        z: lerp(start.z, end.z, factor)\r\n    };\r\n}\r\n\r\n/**\r\n * 限制数值范围\r\n * @param value 输入值\r\n * @param min 最小值\r\n * @param max 最大值\r\n * @returns 限制后的值\r\n */\r\nexport function clamp(value: number, min: number, max: number): number {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n\r\n/**\r\n * 将角度转换为弧度\r\n * @param degrees 角度\r\n * @returns 弧度\r\n */\r\nexport function degToRad(degrees: number): number {\r\n    return degrees * (Math.PI / 180);\r\n}\r\n\r\n/**\r\n * 将弧度转换为角度\r\n * @param radians 弧度\r\n * @returns 角度\r\n */\r\nexport function radToDeg(radians: number): number {\r\n    return radians * (180 / Math.PI);\r\n}\r\n\r\n/**\r\n * 生成随机数范围\r\n * @param min 最小值\r\n * @param max 最大值\r\n * @returns 随机数\r\n */\r\nexport function randomRange(min: number, max: number): number {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n/**\r\n * 生成随机整数范围\r\n * @param min 最小值\r\n * @param max 最大值\r\n * @returns 随机整数\r\n */\r\nexport function randomIntRange(min: number, max: number): number {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n\r\n/**\r\n * 创建渐变alpha贴图\r\n * @param direction 渐变方向，默认为从下到上\r\n * @returns THREE.CanvasTexture\r\n */\r\nexport function createGradientAlphaMap(direction: 'bottomToTop' | 'topToBottom' | 'leftToRight' | 'rightToLeft' = 'bottomToTop'): THREE.CanvasTexture {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 256;\r\n    canvas.height = 256;\r\n    const ctx = canvas.getContext('2d')!;\r\n    \r\n    // 设置高质量绘制参数，避免点状瑕疵\r\n    ctx.imageSmoothingEnabled = true;\r\n    ctx.imageSmoothingQuality = 'high';\r\n\r\n    let gradient;\r\n    switch (direction) {\r\n        case 'bottomToTop':\r\n            gradient = ctx.createLinearGradient(0, canvas.height, 0, 0);\r\n            break;\r\n        case 'topToBottom':\r\n            gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n            break;\r\n        case 'leftToRight':\r\n            gradient = ctx.createLinearGradient(0, 0, canvas.width, 0);\r\n            break;\r\n        case 'rightToLeft':\r\n            gradient = ctx.createLinearGradient(canvas.width, 0, 0, 0);\r\n            break;\r\n        default:\r\n            gradient = ctx.createLinearGradient(0, canvas.height, 0, 0);\r\n    }\r\n\r\n    // 创建从透明到不透明的渐变，使用更精确的颜色值\r\n    gradient.addColorStop(0, 'rgba(0, 0, 0, 0)');      // 完全透明\r\n    gradient.addColorStop(0.05, 'rgba(0, 0, 0, 0.05)'); // 很轻微的透明\r\n    gradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.5)'); // 半透明\r\n    gradient.addColorStop(0.95, 'rgba(255, 255, 255, 0.95)'); // 几乎不透明\r\n    gradient.addColorStop(1, 'rgba(255, 255, 255, 1)'); // 完全不透明\r\n\r\n    ctx.fillStyle = gradient;\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    const alphaMap = new THREE.CanvasTexture(canvas);\r\n    alphaMap.wrapS = THREE.RepeatWrapping;\r\n    alphaMap.wrapT = THREE.RepeatWrapping;\r\n    alphaMap.magFilter = THREE.LinearFilter;  // 使用线性过滤提高质量\r\n    alphaMap.minFilter = THREE.LinearFilter;  // 使用线性过滤提高质量\r\n\r\n    return alphaMap;\r\n}\r\n\r\n\r\n/**\r\n * 加载纹理的辅助函数\r\n * @param url 纹理文件路径\r\n * @returns Promise<THREE.Texture>\r\n */\r\nexport function loadTexture(url: string): Promise<THREE.Texture> {\r\n    return new Promise((resolve, reject) => {\r\n        const loader = new THREE.TextureLoader();\r\n        loader.load(\r\n            url,\r\n            (texture) => {\r\n                texture.wrapS = THREE.RepeatWrapping;\r\n                texture.wrapT = THREE.RepeatWrapping;\r\n                texture.anisotropy = 16;\r\n                resolve(texture);\r\n            },\r\n            undefined,\r\n            reject\r\n        );\r\n    });\r\n}\r\n","import { ScriptBase } from \"../../core/ScriptBase.ts\";\r\nimport { THREE } from \"../../core/global.ts\";\r\n\r\n/**\r\n * 平行光配置接口\r\n * 定义创建和控制平行光所需的所有参数\r\n */\r\nexport interface DirectionalLightConfig {\r\n    /** 平行光唯一标识符 */\r\n    id: string;\r\n    /** 平行光名称 */\r\n    name: string;\r\n    /** 平行光位置坐标 */\r\n    position: {\r\n        x: number;\r\n        y: number;\r\n        z: number;\r\n    };\r\n    /** 平行光朝向目标 */\r\n    target: {\r\n        x: number;\r\n        y: number;\r\n        z: number;\r\n    };\r\n    /** 平行光颜色（十六进制字符串格式，如 \"#ffffff\"） */\r\n    color: string;\r\n    /** 平行光强度 */\r\n    intensity: number;\r\n}\r\n\r\n/**\r\n * 平行光脚本类\r\n * 用于在场景中添加和控制平行光（类似太阳光）\r\n */\r\nexport class DirectionalLightScript extends ScriptBase {\r\n    /** 平行光对象映射 */\r\n    private directionalLights: Map<string, THREE.DirectionalLight> = new Map();\r\n\r\n    /** 平行光配置映射 */\r\n    private configs: Map<string, DirectionalLightConfig> = new Map();\r\n\r\n    /** 平行光是否启用映射 */\r\n    private enabledMap: Map<string, boolean> = new Map();\r\n\r\n    /** 当前选中的光源ID */\r\n    private selectedLightId: string | null = null;\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param configs 初始平行光配置数组\r\n     */\r\n    constructor(configs?: DirectionalLightConfig | DirectionalLightConfig[]) {\r\n        super();\r\n        this.name = \"DirectionalLightScript\";\r\n\r\n        if (configs) {\r\n            if (Array.isArray(configs)) {\r\n                configs.forEach(config => {\r\n                    this.configs.set(config.id, config);\r\n                    this.enabledMap.set(config.id, true);\r\n                });\r\n            } else {\r\n                this.configs.set(configs.id, configs);\r\n                this.enabledMap.set(configs.id, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化平行光\r\n     * 在脚本添加到场景时调用\r\n     */\r\n    public start(): void {\r\n        // 为所有配置创建平行光\r\n        for (const [id, config] of this.configs) {\r\n            this.createLight(id, config);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建单个平行光\r\n     * @param id 光源ID\r\n     * @param config 光源配置\r\n     */\r\n    private createLight(id: string, config: DirectionalLightConfig): void {\r\n        // 创建平行光\r\n        const color = parseInt(config.color.replace('#', '0x'));\r\n        const directionalLight = new THREE.DirectionalLight(\r\n            color,\r\n            config.intensity\r\n        );\r\n\r\n        // 设置位置\r\n        directionalLight.position.set(\r\n            config.position.x,\r\n            config.position.y,\r\n            config.position.z\r\n        );\r\n\r\n        // 创建并设置目标\r\n        const target = new THREE.Object3D();\r\n        target.position.set(\r\n            config.target.x,\r\n            config.target.y,\r\n            config.target.z\r\n        );\r\n        \r\n        if (this.scene) {\r\n            this.scene.add(target);\r\n        }\r\n        \r\n        directionalLight.target = target;\r\n\r\n        // 启用阴影\r\n        directionalLight.castShadow = true;\r\n        \r\n        // 设置阴影参数\r\n        directionalLight.shadow.mapSize.width = 2048;\r\n        directionalLight.shadow.mapSize.height = 2048;\r\n        directionalLight.shadow.camera.near = 0.5;\r\n        directionalLight.shadow.camera.far = 500;\r\n        directionalLight.shadow.camera.left = -50;\r\n        directionalLight.shadow.camera.right = 50;\r\n        directionalLight.shadow.camera.top = 50;\r\n        directionalLight.shadow.camera.bottom = -50;\r\n\r\n        // 设置用户数据\r\n        directionalLight.userData = {\r\n            id: config.id,\r\n            name: config.name\r\n        };\r\n\r\n        // 添加到场景\r\n        if (this.scene && this.isEnabled(id)) {\r\n            this.scene.add(directionalLight);\r\n        }\r\n\r\n        // 存储引用\r\n        this.directionalLights.set(id, directionalLight);\r\n    }\r\n\r\n    /**\r\n     * 添加新的平行光\r\n     * @param config 平行光配置\r\n     */\r\n    public addLight(config: DirectionalLightConfig): void {\r\n        // 检查ID是否已存在\r\n        if (this.configs.has(config.id)) {\r\n            console.warn(`Light with ID ${config.id} already exists`);\r\n            return;\r\n        }\r\n\r\n        // 存储配置\r\n        this.configs.set(config.id, config);\r\n        this.enabledMap.set(config.id, true);\r\n\r\n        // 创建光源\r\n        this.createLight(config.id, config);\r\n    }\r\n\r\n    /**\r\n     * 移除平行光\r\n     * @param id 平行光ID\r\n     */\r\n    public removeLight(id: string): void {\r\n        // 检查光源是否存在\r\n        if (!this.configs.has(id)) {\r\n            console.warn(`Light with ID ${id} does not exist`);\r\n            return;\r\n        }\r\n\r\n        // 获取光源\r\n        const light = this.directionalLights.get(id);\r\n\r\n        // 从场景中移除\r\n        if (light && light.parent) {\r\n            // 同时移除目标对象\r\n            if (light.target && light.target.parent) {\r\n                light.target.parent.remove(light.target);\r\n            }\r\n            light.parent.remove(light);\r\n        }\r\n\r\n        // 从映射中删除\r\n        this.directionalLights.delete(id);\r\n        this.configs.delete(id);\r\n        this.enabledMap.delete(id);\r\n\r\n        // 如果删除的是选中的光源，则取消选择\r\n        if (this.selectedLightId === id) {\r\n            this.selectedLightId = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新平行光配置\r\n     * @param id 平行光ID\r\n     * @param config 新的平行光配置\r\n     */\r\n    public updateConfig(id: string, config: Partial<DirectionalLightConfig>): void {\r\n        // 检查光源是否存在\r\n        if (!this.configs.has(id)) {\r\n            console.warn(`Light with ID ${id} does not exist`);\r\n            return;\r\n        }\r\n\r\n        // 更新配置\r\n        const oldConfig = this.configs.get(id)!;\r\n        const newConfig = { ...oldConfig, ...config };\r\n        this.configs.set(id, newConfig);\r\n\r\n        // 获取光源\r\n        const light = this.directionalLights.get(id);\r\n        if (light) {\r\n            // 更新颜色\r\n            if (config.color !== undefined) {\r\n                const color = parseInt(config.color.replace('#', '0x'));\r\n                light.color.set(color as any);\r\n            }\r\n\r\n            // 更新强度\r\n            if (config.intensity !== undefined) {\r\n                light.intensity = config.intensity;\r\n            }\r\n\r\n            // 更新位置\r\n            if (config.position !== undefined) {\r\n                light.position.set(\r\n                    config.position.x ?? light.position.x,\r\n                    config.position.y ?? light.position.y,\r\n                    config.position.z ?? light.position.z\r\n                );\r\n            }\r\n\r\n            // 更新目标位置\r\n            if (config.target !== undefined && light.target) {\r\n                light.target.position.set(\r\n                    config.target.x ?? light.target.position.x,\r\n                    config.target.y ?? light.target.position.y,\r\n                    config.target.z ?? light.target.position.z\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启用平行光\r\n     * @param id 平行光ID\r\n     */\r\n    public enable(id: string): void {\r\n        // 检查光源是否存在\r\n        if (!this.configs.has(id)) {\r\n            console.warn(`Light with ID ${id} does not exist`);\r\n            return;\r\n        }\r\n\r\n        this.enabledMap.set(id, true);\r\n\r\n        const light = this.directionalLights.get(id);\r\n        if (light && this.scene && !light.parent) {\r\n            this.scene.add(light);\r\n            // 同时添加目标对象\r\n            if (light.target && !light.target.parent && this.scene) {\r\n                this.scene.add(light.target);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 禁用平行光\r\n     * @param id 平行光ID\r\n     */\r\n    public disable(id: string): void {\r\n        // 检查光源是否存在\r\n        if (!this.configs.has(id)) {\r\n            console.warn(`Light with ID ${id} does not exist`);\r\n            return;\r\n        }\r\n\r\n        this.enabledMap.set(id, false);\r\n\r\n        const light = this.directionalLights.get(id);\r\n        if (light && light.parent) {\r\n            light.parent.remove(light);\r\n            // 同时移除目标对象\r\n            if (light.target && light.target.parent) {\r\n                light.target.parent.remove(light.target);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取平行光是否启用\r\n     * @param id 平行光ID\r\n     * @returns 平行光启用状态\r\n     */\r\n    public isEnabled(id: string): boolean {\r\n        return this.enabledMap.get(id) ?? false;\r\n    }\r\n\r\n    /**\r\n     * 获取所有平行光配置\r\n     * @returns 所有平行光配置映射\r\n     */\r\n    public getAllConfigs(): Map<string, DirectionalLightConfig> {\r\n        return new Map(this.configs);\r\n    }\r\n\r\n    /**\r\n     * 获取指定平行光配置\r\n     * @param id 平行光ID\r\n     * @returns 平行光配置或undefined\r\n     */\r\n    public getConfig(id: string): DirectionalLightConfig | undefined {\r\n        return this.configs.get(id);\r\n    }\r\n\r\n    /**\r\n     * 获取所有平行光对象\r\n     * @returns 所有平行光对象映射\r\n     */\r\n    public getAllLights(): Map<string, THREE.DirectionalLight> {\r\n        return new Map(this.directionalLights);\r\n    }\r\n\r\n    /**\r\n     * 获取指定平行光对象\r\n     * @param id 平行光ID\r\n     * @returns THREE.DirectionalLight对象或undefined\r\n     */\r\n    public getLight(id: string): THREE.DirectionalLight | undefined {\r\n        return this.directionalLights.get(id);\r\n    }\r\n\r\n    /**\r\n     * 选择平行光\r\n     * @param id 平行光ID\r\n     */\r\n    public selectLight(id: string): void {\r\n        // 检查光源是否存在\r\n        if (!this.configs.has(id)) {\r\n            console.warn(`Light with ID ${id} does not exist`);\r\n            return;\r\n        }\r\n\r\n        this.selectedLightId = id;\r\n    }\r\n\r\n    /**\r\n     * 取消选择平行光\r\n     */\r\n    public deselectLight(): void {\r\n        this.selectedLightId = null;\r\n    }\r\n\r\n    /**\r\n     * 获取当前选中的平行光ID\r\n     * @returns 当前选中的平行光ID或null\r\n     */\r\n    public getSelectedLightId(): string | null {\r\n        return this.selectedLightId;\r\n    }\r\n\r\n    /**\r\n     * 获取当前选中的平行光配置\r\n     * @returns 当前选中的平行光配置或undefined\r\n     */\r\n    public getSelectedLightConfig(): DirectionalLightConfig | undefined {\r\n        if (this.selectedLightId) {\r\n            return this.configs.get(this.selectedLightId);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * 获取当前选中的平行光对象\r\n     * @returns 当前选中的平行光对象或undefined\r\n     */\r\n    public getSelectedLight(): THREE.DirectionalLight | undefined {\r\n        if (this.selectedLightId) {\r\n            return this.directionalLights.get(this.selectedLightId);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * 切换平行光的启用状态\r\n     * @param id 平行光ID\r\n     */\r\n    public toggleLight(id: string): void {\r\n        if (this.isEnabled(id)) {\r\n            this.disable(id);\r\n        } else {\r\n            this.enable(id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 在对象被销毁时调用\r\n     */\r\n    public destroy(): void {\r\n        // 从场景中移除所有光源\r\n        Array.from(this.directionalLights.values()).forEach(light => {\r\n            if (light.parent) {\r\n                // 同时移除目标对象\r\n                if (light.target && light.target.parent) {\r\n                    light.target.parent.remove(light.target);\r\n                }\r\n                light.parent.remove(light);\r\n            }\r\n        });\r\n\r\n        // 清空所有映射\r\n        this.directionalLights.clear();\r\n        this.configs.clear();\r\n        this.enabledMap.clear();\r\n        this.selectedLightId = null;\r\n    }\r\n}","import { ScriptBase } from \"../../core/ScriptBase.ts\";\r\nimport { THREE } from \"../../core/global.ts\";\r\n\r\n/**\r\n * 点光源配置接口\r\n * 定义创建和控制点光源所需的所有参数\r\n */\r\nexport interface PointLightConfig {\r\n    /** 点光源唯一标识符 */\r\n    id: string;\r\n    /** 点光源名称 */\r\n    name: string;\r\n    /** 点光源位置坐标 */\r\n    position: {\r\n        x: number;\r\n        y: number;\r\n        z: number;\r\n    };\r\n    /** 点光源颜色（十六进制字符串格式，如 \"#ff0000\"） */\r\n    color: string;\r\n    /** 点光源强度 */\r\n    intensity: number;\r\n    /** 光源影响距离 */\r\n    distance: number;\r\n    /** 光源衰减系数 */\r\n    decay: number;\r\n}\r\n\r\n/**\r\n * 点光源脚本类\r\n * 用于在场景中添加和控制点光源\r\n */\r\nexport class PointLightScript extends ScriptBase {\r\n    /** 点光源对象映射 */\r\n    private pointLights: Map<string, THREE.PointLight> = new Map();\r\n\r\n    /** 点光源配置映射 */\r\n    private configs: Map<string, PointLightConfig> = new Map();\r\n\r\n    /** 点光源是否启用映射 */\r\n    private enabledMap: Map<string, boolean> = new Map();\r\n\r\n    /** 当前选中的光源ID */\r\n    private selectedLightId: string | null = null;\r\n\r\n    /**\r\n     * 构造函数\r\n     * @param configs 初始点光源配置数组\r\n     */\r\n    constructor(configs?: PointLightConfig | PointLightConfig[]) {\r\n        super();\r\n\r\n        if (configs) {\r\n            if (Array.isArray(configs)) {\r\n                configs.forEach(config => {\r\n                    this.configs.set(config.id, config);\r\n                    this.enabledMap.set(config.id, true);\r\n                });\r\n            } else {\r\n                this.configs.set(configs.id, configs);\r\n                this.enabledMap.set(configs.id, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化点光源\r\n     * 在脚本添加到场景时调用\r\n     */\r\n    public start(): void {\r\n        // 为所有配置创建点光源\r\n        for (const [id, config] of this.configs) {\r\n            this.createLight(id, config);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 创建单个点光源\r\n     * @param id 光源ID\r\n     * @param config 光源配置\r\n     */\r\n    private createLight(id: string, config: PointLightConfig): void {\r\n        // 创建点光源\r\n        const color = parseInt(config.color.replace('#', '0x'));\r\n        const pointLight = new THREE.PointLight(\r\n            color,\r\n            config.intensity,\r\n            config.distance,\r\n            config.decay\r\n        );\r\n\r\n        // 设置位置\r\n        pointLight.position.set(\r\n            config.position.x,\r\n            config.position.y,\r\n            config.position.z\r\n        );\r\n\r\n        // 设置用户数据\r\n        pointLight.userData = {\r\n            id: config.id,\r\n            name: config.name\r\n        };\r\n\r\n        // 添加到场景\r\n        if (this.scene && this.isEnabled(id)) {\r\n            this.scene.add(pointLight);\r\n        }\r\n\r\n        // 存储引用\r\n        this.pointLights.set(id, pointLight);\r\n    }\r\n\r\n    /**\r\n     * 添加新的点光源\r\n     * @param config 点光源配置\r\n     */\r\n    public addLight(config: PointLightConfig): void {\r\n        // 检查ID是否已存在\r\n        if (this.configs.has(config.id)) {\r\n            console.warn(`Light with ID ${config.id} already exists`);\r\n            return;\r\n        }\r\n\r\n        // 存储配置\r\n        this.configs.set(config.id, config);\r\n        this.enabledMap.set(config.id, true);\r\n\r\n        // 创建光源\r\n        this.createLight(config.id, config);\r\n    }\r\n\r\n    /**\r\n     * 移除点光源\r\n     * @param id 点光源ID\r\n     */\r\n    public removeLight(id: string): void {\r\n        // 检查光源是否存在\r\n        if (!this.configs.has(id)) {\r\n            console.warn(`Light with ID ${id} does not exist`);\r\n            return;\r\n        }\r\n\r\n        // 获取光源\r\n        const light = this.pointLights.get(id);\r\n\r\n        // 从场景中移除\r\n        if (light && light.parent) {\r\n            light.parent.remove(light);\r\n        }\r\n\r\n        // 从映射中删除\r\n        this.pointLights.delete(id);\r\n        this.configs.delete(id);\r\n        this.enabledMap.delete(id);\r\n\r\n        // 如果删除的是选中的光源，则取消选择\r\n        if (this.selectedLightId === id) {\r\n            this.selectedLightId = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新点光源配置\r\n     * @param id 点光源ID\r\n     * @param config 新的点光源配置\r\n     */\r\n    public updateConfig(id: string, config: Partial<PointLightConfig>): void {\r\n        // 检查光源是否存在\r\n        if (!this.configs.has(id)) {\r\n            console.warn(`Light with ID ${id} does not exist`);\r\n            return;\r\n        }\r\n\r\n        // 更新配置\r\n        const oldConfig = this.configs.get(id)!;\r\n        const newConfig = { ...oldConfig, ...config };\r\n        this.configs.set(id, newConfig);\r\n\r\n        // 获取光源\r\n        const light = this.pointLights.get(id);\r\n        if (light) {\r\n            // 更新颜色\r\n            if (config.color !== undefined) {\r\n                const color = parseInt(config.color.replace('#', '0x'));\r\n                light.color.set(color as any);\r\n            }\r\n\r\n            // 更新强度\r\n            if (config.intensity !== undefined) {\r\n                light.intensity = config.intensity;\r\n            }\r\n\r\n            // 更新距离\r\n            if (config.distance !== undefined) {\r\n                light.distance = config.distance;\r\n            }\r\n\r\n            // 更新衰减\r\n            if (config.decay !== undefined) {\r\n                light.decay = config.decay;\r\n            }\r\n\r\n            // 更新位置\r\n            if (config.position !== undefined) {\r\n                light.position.set(\r\n                    config.position.x ?? light.position.x,\r\n                    config.position.y ?? light.position.y,\r\n                    config.position.z ?? light.position.z\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 启用点光源\r\n     * @param id 点光源ID\r\n     */\r\n    public enable(id: string): void {\r\n        // 检查光源是否存在\r\n        if (!this.configs.has(id)) {\r\n            console.warn(`Light with ID ${id} does not exist`);\r\n            return;\r\n        }\r\n\r\n        this.enabledMap.set(id, true);\r\n\r\n        const light = this.pointLights.get(id);\r\n        if (light && this.scene && !light.parent) {\r\n            this.scene.add(light);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 禁用点光源\r\n     * @param id 点光源ID\r\n     */\r\n    public disable(id: string): void {\r\n        // 检查光源是否存在\r\n        if (!this.configs.has(id)) {\r\n            console.warn(`Light with ID ${id} does not exist`);\r\n            return;\r\n        }\r\n\r\n        this.enabledMap.set(id, false);\r\n\r\n        const light = this.pointLights.get(id);\r\n        if (light && light.parent) {\r\n            light.parent.remove(light);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取点光源是否启用\r\n     * @param id 点光源ID\r\n     * @returns 点光源启用状态\r\n     */\r\n    public isEnabled(id: string): boolean {\r\n        return this.enabledMap.get(id) ?? false;\r\n    }\r\n\r\n    /**\r\n     * 获取所有点光源配置\r\n     * @returns 所有点光源配置映射\r\n     */\r\n    public getAllConfigs(): Map<string, PointLightConfig> {\r\n        return new Map(this.configs);\r\n    }\r\n\r\n    /**\r\n     * 获取指定点光源配置\r\n     * @param id 点光源ID\r\n     * @returns 点光源配置或undefined\r\n     */\r\n    public getConfig(id: string): PointLightConfig | undefined {\r\n        return this.configs.get(id);\r\n    }\r\n\r\n    /**\r\n     * 获取所有点光源对象\r\n     * @returns 所有点光源对象映射\r\n     */\r\n    public getAllLights(): Map<string, THREE.PointLight> {\r\n        return new Map(this.pointLights);\r\n    }\r\n\r\n    /**\r\n     * 获取指定点光源对象\r\n     * @param id 点光源ID\r\n     * @returns THREE.PointLight对象或undefined\r\n     */\r\n    public getLight(id: string): THREE.PointLight | undefined {\r\n        return this.pointLights.get(id);\r\n    }\r\n\r\n    /**\r\n     * 选择点光源\r\n     * @param id 点光源ID\r\n     */\r\n    public selectLight(id: string): void {\r\n        // 检查光源是否存在\r\n        if (!this.configs.has(id)) {\r\n            console.warn(`Light with ID ${id} does not exist`);\r\n            return;\r\n        }\r\n\r\n        this.selectedLightId = id;\r\n    }\r\n\r\n    /**\r\n     * 取消选择点光源\r\n     */\r\n    public deselectLight(): void {\r\n        this.selectedLightId = null;\r\n    }\r\n\r\n    /**\r\n     * 获取当前选中的点光源ID\r\n     * @returns 当前选中的点光源ID或null\r\n     */\r\n    public getSelectedLightId(): string | null {\r\n        return this.selectedLightId;\r\n    }\r\n\r\n    /**\r\n     * 获取当前选中的点光源配置\r\n     * @returns 当前选中的点光源配置或undefined\r\n     */\r\n    public getSelectedLightConfig(): PointLightConfig | undefined {\r\n        if (this.selectedLightId) {\r\n            return this.configs.get(this.selectedLightId);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * 获取当前选中的点光源对象\r\n     * @returns 当前选中的点光源对象或undefined\r\n     */\r\n    public getSelectedLight(): THREE.PointLight | undefined {\r\n        if (this.selectedLightId) {\r\n            return this.pointLights.get(this.selectedLightId);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * 切换点光源的启用状态\r\n     * @param id 点光源ID\r\n     */\r\n    public toggleLight(id: string): void {\r\n        if (this.isEnabled(id)) {\r\n            this.disable(id);\r\n        } else {\r\n            this.enable(id);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 在对象被销毁时调用\r\n     */\r\n    public destroy(): void {\r\n        // 从场景中移除所有光源\r\n        Array.from(this.pointLights.values()).forEach(light => {\r\n            if (light.parent) {\r\n                light.parent.remove(light);\r\n            }\r\n        });\r\n\r\n        // 清空所有映射\r\n        this.pointLights.clear();\r\n        this.configs.clear();\r\n        this.enabledMap.clear();\r\n        this.selectedLightId = null;\r\n    }\r\n}\r\n"],"names":["ScriptBase","__publicField","object","renderer","script","name","x","y","z","pass","beforeOutput","PostProcessingEffectComposer","EffectComposer","samples","RenderPass","OutputPass","error","devicePixelRatio","_a","passes","outputPassIndex","index","width","height","EventEmitter","event","callback","eventKey","callbacks","data","onceCallback","ObjectPool","factory","reset","maxSize","obj","throttle","func","delay","lastCall","args","now","debounce","timeoutId","FrameRateLimiter","fps","MemoryMonitor","usage","recent","firstHalf","secondHalf","firstAvg","a","b","diff","trend","currentUsage","PerformanceProfiler","label","startTime","duration","measurements","count","total","average","min","max","results","result","BatchDOMUpdater","id","updateFn","CacheManager","cleanupIntervalMs","key","value","ttl","oldestKey","item","DevicePerformanceDetector","recommendations","_RenderPerformanceOptimizer","RenderPerformanceOptimizer","FrameRateMonitor","onFpsUpdate","timestamp","elapsed","sum","DetailedPerformanceProfiler","GeometryOptimizer","geometries","geometry","ratio","TextureOptimizer","texture","newWidth","newHeight","RenderBatcher","batchSize","batch","objects","PerformanceAnalyzerScript","options","deltaTime","currentTime","countObject","type","child","scriptName","executionTime","stats","report","info","FPSDiagnosticTool","perfData","glInfo","scene","totalObjects","meshCount","lightCount","cameraCount","countObjects","s","memory","suggestions","os","userAgent","isIphone","isSafari","MouseInteractionScript","THREE","vec","arr","mask","objectName","types","objectType","mat","intersects","intersect","canvas","rect","mouse","touch","mouseEvent","interactableIntersects","selectedObject","hoveredObject","deselectedObject","deselectedObjects","mode","enabled","newConfig","oldRaycastInterval","Aether3d","config","fpsEvent","dropEvent","dpr","time","frameEvent","fixedTimeStep","scriptsToUpdate","startMethod","updateMethod","method","arg","scriptMethod","i","modelName","_b","_d","_c","_f","_e","createCamera","aspect","camera","SceneManager","sceneData","globalRenderer","isGlobalRendererReady","createScene","render","aspectRatio","createPostprocessing","setupContextEvents","addScript","sceneName","scriptOrObject","removeScript","scripts","scriptIndex","MirrorReflectionScript","Reflector","material","HorizontalBlurShader","VerticalBlurShader","blurPlaneGeometry","reflectorTexture","needsRecreate","strength","radius","opacity","color","OrbitControlsScript","OrbitControls","controls","targetPosition","targetCenter","startPosition","startTarget","TWEEN","easing","box","mesh","boundingBox","presetName","preset","positionToUse","focusOptions","targetPositionVec","finalOptions","center","size","cameraOffset","maxDim","fov","autoDistance","targetDistance","position","target","SceneLightingScript","loader","filenames","filename","targetObject","CSS2DObject","content","show","clickable","BloomEffectScript","threshold","UnrealBloomPass","_RectAreaLightScript","RectAreaLightUniformsLib","RectAreaLightHelper","iconElement","textElement","beforeElement","afterElement","RectAreaLightScript","toTrianglesDrawMode","drawMode","TrianglesDrawMode","TriangleFanDrawMode","TriangleStripDrawMode","indices","numberOfTriangles","newIndices","newGeometry","GLTFLoader","Loader","manager","parser","GLTFMaterialsClearcoatExtension","GLTFMaterialsDispersionExtension","GLTFTextureBasisUExtension","GLTFTextureWebPExtension","GLTFTextureAVIFExtension","GLTFMaterialsSheenExtension","GLTFMaterialsTransmissionExtension","GLTFMaterialsVolumeExtension","GLTFMaterialsIorExtension","GLTFMaterialsEmissiveStrengthExtension","GLTFMaterialsSpecularExtension","GLTFMaterialsIridescenceExtension","GLTFMaterialsAnisotropyExtension","GLTFMaterialsBumpExtension","GLTFLightsExtension","GLTFMeshoptCompression","GLTFMeshGpuInstancing","url","onLoad","onProgress","onError","scope","resourcePath","relativeUrl","LoaderUtils","_onError","e","FileLoader","gltf","dracoLoader","ktx2Loader","meshoptDecoder","path","json","extensions","plugins","textDecoder","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","GLTFBinaryExtension","GLTFParser","plugin","extensionName","extensionsRequired","GLTFMaterialsUnlitExtension","GLTFDracoMeshCompressionExtension","GLTFTextureTransformExtension","GLTFMeshQuantizationExtension","resolve","reject","GLTFRegistry","nodeDefs","nodeIndex","nodeLength","nodeDef","lightIndex","cacheKey","dependency","lightDef","lightNode","Color","LinearSRGBColorSpace","range","DirectionalLight","PointLight","SpotLight","assignExtrasToUserData","self","light","MeshBasicMaterial","materialParams","materialDef","pending","metallicRoughness","array","SRGBColorSpace","materialIndex","emissiveStrength","MeshPhysicalMaterial","extension","scale","Vector2","colorFactor","colorArray","textureIndex","textureDef","source","handler","bufferView","extensionDef","buffer","decoder","res","byteOffset","byteLength","stride","meshDef","primitive","WEBGL_CONSTANTS","attributesDef","attributes","accessor","nodeObject","meshes","instancedMeshes","m","Matrix4","p","Vector3","q","Quaternion","instancedMesh","InstancedMesh","attributeName","attr","InstancedBufferAttribute","Object3D","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","headerView","chunkContentsLength","chunkView","chunkIndex","chunkLength","chunkType","contentArray","bufferViewIndex","gltfAttributeMap","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","threeAttributeName","ATTRIBUTES","accessorDef","componentType","WEBGL_COMPONENT_TYPES","attribute","normalized","transform","GLTFCubicSplineInterpolant","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","values","valueSize","offset","i1","t0","t1","stride2","stride3","td","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","_quaternion","GLTFCubicSplineQuaternionInterpolant","WEBGL_FILTERS","NearestFilter","LinearFilter","NearestMipmapNearestFilter","LinearMipmapNearestFilter","NearestMipmapLinearFilter","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","ClampToEdgeWrapping","MirroredRepeatWrapping","RepeatWrapping","WEBGL_TYPE_SIZES","PATH_PROPERTIES","INTERPOLATION","InterpolateLinear","InterpolateDiscrete","ALPHA_MODES","createDefaultMaterial","cache","MeshStandardMaterial","FrontSide","addUnknownExtensionsToUserData","knownExtensions","objectDef","gltfDef","addMorphTargets","targets","hasMorphPosition","hasMorphNormal","hasMorphColor","il","pendingPositionAccessors","pendingNormalAccessors","pendingColorAccessors","pendingAccessor","accessors","morphPositions","morphNormals","morphColors","updateMorphTargets","targetNames","createPrimitiveKey","primitiveDef","geometryKey","dracoExtension","createAttributesKey","attributesKey","keys","getNormalizedComponentScale","constructor","getImageURIMimeType","uri","_identityMatrix","safariVersion","isFirefox","firefoxVersion","safariMatch","TextureLoader","ImageBitmapLoader","ext","dependencies","skinDefs","meshDefs","skinIndex","skinLength","joints","ref","updateMappings","original","clone","mappings","defs","def","bufferIndex","bufferDef","bufferViewDef","accessorIndex","itemSize","TypedArray","BufferAttribute","pendingBufferViews","bufferViews","elementBytes","itemBytes","byteStride","bufferAttribute","ibSlice","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","sourceIndex","sourceDef","promise","sampler","URL","sourceURI","isObjectURL","blob","imageBitmap","Texture","mapName","mapDef","colorSpace","gltfReference","useDerivativeTangents","useVertexColors","useFlatShading","pointsMaterial","PointsMaterial","Material","lineMaterial","LineBasicMaterial","cachedMaterial","materialType","materialExtensions","kmuExtension","DoubleSide","alphaMode","emissiveFactor","originalName","sanitizedName","PropertyBinding","primitives","createDracoPrimitive","addPrimitiveAttributes","cached","geometryPromise","BufferGeometry","meshIndex","materials","SkinnedMesh","Mesh","LineSegments","Line","LineLoop","Points","group","Group","cameraIndex","cameraDef","params","PerspectiveCamera","MathUtils","OrthographicCamera","skinDef","inverseBindMatrices","jointNodes","bones","boneInverses","jointNode","Skeleton","animationIndex","animationDef","animationName","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channel","input","output","nodes","inputAccessors","outputAccessors","samplers","tracks","node","inputAccessor","outputAccessor","createdTracks","k","AnimationClip","nodePending","childPending","childrenDef","skeletonPending","children","skeleton","nodeName","meshPromise","Bone","matrix","mapping","sceneIndex","sceneDef","nodeIds","reduceAssociations","reducedAssociations","targetName","TypedKeyframeTrack","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","interpolation","outputArray","j","jl","track","scaled","interpolantType","computeBounds","Box3","boxScale","maxDisplacement","vector","sphere","Sphere","assignAttributeAccessor","gltfAttributeName","ColorManagement","_taskCache","DRACOLoader","workerLimit","attributeIDs","attributeTypes","vertexColorSpace","taskConfig","taskKey","cachedTask","worker","taskID","taskCost","geometryPending","_worker","message","geometryData","inputColorSpace","_color","responseType","useJS","librariesPending","libraries","jsContent","fn","DRACOWorker","body","decoderConfig","decoderPending","draco","module","decodeGeometry","buffers","dracoGeometry","decodingStatus","geometryType","attributeType","attributeID","attributeResult","decodeAttribute","decodeIndex","numIndices","ptr","numComponents","numValues","dataType","getDracoDataType","GLBLoaderScript","euler","mixer","defaultMat","model","rotation","animations","actions","clip","action","loop","fromAnimation","toAnimation","fromAction","toAction","clonedResult","pos","rot","loading","loadPromise","animationController","progress","progressInfo","removeFromScene","clearCache","UVAnimationScript","configs","direction","gradientCanvas","ctx","gradient","alphaMap","objConfig","_g","_h","_i","_j","animation","lightConfig","title","fullConfig","applyToMaterial","element","AnimationMaterial","isTransparent","hasAlphaMap","depthWrite","deltaX","deltaY","scaleX","scaleY","ShaderGlowMaterial","parameters","glowColor","baseBrightness","side","WindMaterial","defaultParams","intensity","speed","RibbonMaterial","lerp","start","end","factor","lerpVector","clamp","degToRad","degrees","radToDeg","radians","randomRange","randomIntRange","createGradientAlphaMap","loadTexture","DirectionalLightScript","directionalLight","PointLightScript","pointLight"],"mappings":"81FASO,MAAMA,CAA8B,CAApC,cAIIC,EAAA,aAKAA,EAAA,aAKAA,EAAA,YAA0E,MAMvEA,EAAA,gBAA4B,MAKtC,IAAc,OAAqB,CAC/B,GAAI,KAAK,SACL,OAAO,KAAK,SAAS,MAEzB,MAAM,IAAI,MAAM,wBAAwB,CAC5C,CAKA,IAAc,QAAkC,CAC5C,GAAI,KAAK,SACL,OAAO,KAAK,SAAS,OAEzB,MAAM,IAAI,MAAM,wBAAwB,CAC5C,CAKA,IAAc,eAAqC,CAC/C,GAAI,KAAK,SACL,OAAO,KAAK,SAAS,SAEzB,MAAM,IAAI,MAAM,wBAAwB,CAC5C,CAKA,IAAc,wBAA8D,CACxE,OAAI,KAAK,SACE,KAAK,SAAS,0BAAA,EAElB,IACX,CAOU,mBAAmBC,EAAiC,CAG1D,eAAQ,IAAIA,EAAO,IAAI,EAChB,EACX,CAMO,YAAYC,EAA0B,CACzC,KAAK,SAAWA,CACpB,CAMO,QAA0B,CAC7B,OAAO,KAAK,QAChB,CAMO,UAAUC,EAAsB,CAC/B,KAAK,UACL,KAAK,SAAS,UAAUA,CAAM,CAEtC,CAMO,aAAaA,EAAuB,CACnC,KAAK,UACL,KAAK,SAAS,aAAaA,CAAM,CAEzC,CAyDO,UAAiB,CAExB,CAmBU,UAAUF,EAA8B,CAC9C,KAAK,MAAM,IAAIA,CAAM,CACzB,CAMU,aAAaA,EAA8B,CACjD,KAAK,MAAM,OAAOA,CAAM,CAC5B,CAMU,iBAAoC,CAC1C,OAAO,KAAK,MAAM,QACtB,CAOU,iBAAiBG,EAA0C,CACjE,OAAO,KAAK,MAAM,gBAAgBA,CAAI,CAC1C,CAQU,kBAAkBC,EAAWC,EAAWC,EAAiB,CAC/D,KAAK,OAAO,SAAS,IAAIF,EAAGC,EAAGC,CAAC,CACpC,CAQU,OAAOF,EAAWC,EAAWC,EAAiB,CACpD,KAAK,OAAO,OAAOF,EAAGC,EAAGC,CAAC,CAC9B,CAOU,sBAAsBC,EAAWC,EAAwB,GAAY,CACvE,KAAK,SACL,KAAK,SAAS,sBAAsBD,EAAMC,CAAY,EAEtD,QAAQ,KAAK,qEAAqE,CAE1F,CAMU,yBAAyBD,EAAiB,CAC5C,KAAK,SACL,KAAK,SAAS,yBAAyBA,CAAI,EAE3C,QAAQ,KAAK,uEAAuE,CAE5F,CACJ,CCrQO,MAAME,EAA6B,CAetC,YAAYR,EAAoB,CAdxBF,EAAA,gBAAkC,MAClCA,EAAA,kBAAgC,MAChCA,EAAA,kBAAgC,MAEhCA,EAAA,iBACAA,EAAA,iBAAqB,IAGrBA,EAAA,qCAAgD,MAGhDA,EAAA,iBAAoB,GACpBA,EAAA,kBAAqB,GAGzB,KAAK,SAAWE,EAEhB,KAAK,KAAA,CACT,CAKQ,yBAAmC,CACvC,OAAI,KAAK,gCAAkC,KAChC,KAAK,8BAET,EAUX,CAKQ,MAAa,CACjB,GAAI,CAEA,KAAK,SAAW,IAAIS,EAAAA,eAAe,KAAK,SAAS,QAAQ,EAGzD,MAAMC,EAAU,KAAK,wBAAA,EAA4B,GAAK,EACtD,KAAK,SAAS,cAAc,QAAUA,EACtC,KAAK,SAAS,cAAc,QAAUA,EAGtC,KAAK,WAAa,IAAIC,EAAAA,WAAW,KAAK,SAAS,MAAO,KAAK,SAAS,MAAM,EAC1E,KAAK,SAAS,QAAQ,KAAK,UAAU,EAGrC,KAAK,WAAa,IAAIC,cACtB,KAAK,SAAS,QAAQ,KAAK,UAAU,EAErC,QAAQ,IAAI,wEAAwE,CACxF,OAASC,EAAO,CACZ,QAAQ,MAAM,sEAAuEA,CAAK,CAC9F,CACJ,CAKO,QAAe,CAClB,KAAK,UAAY,GACjB,QAAQ,IAAI,wDAAwD,CACxE,CAKO,SAAgB,CACnB,KAAK,UAAY,GACjB,QAAQ,IAAI,yDAAyD,CACzE,CAKO,yBAAmC,CACtC,OAAO,KAAK,WAAa,KAAK,WAAa,IAC/C,CAKO,aAAqC,CACxC,OAAO,KAAK,QAChB,CAEO,cAAcC,EAA+B,QAChDC,EAAA,KAAK,WAAL,MAAAA,EAAe,cAAcD,EACjC,CAOO,QAAQR,EAAWC,EAAwB,GAAY,CAC1D,GAAI,CAAC,KAAK,SAAU,CAChB,QAAQ,KAAK,yDAAyD,EACtE,MACJ,CAEA,GAAI,CACA,GAAIA,GAAgB,KAAK,WAAY,CAEjC,MAAMS,EAAS,KAAK,SAAS,OACvBC,EAAkBD,EAAO,QAAQ,KAAK,UAAU,EAElDC,EAAkB,EAClBD,EAAO,OAAOC,EAAiB,EAAGX,CAAI,EAEtC,KAAK,SAAS,QAAQA,CAAI,CAElC,MAEI,KAAK,SAAS,QAAQA,CAAI,EAI1BA,GAAQ,OAAOA,EAAK,SAAY,YAChCA,EAAK,QAAQ,OAAO,WAAY,OAAO,WAAW,EAGtD,QAAQ,IAAI,wDAAwD,CACxE,OAASO,EAAO,CACZ,QAAQ,MAAM,qDAAsDA,CAAK,CAC7E,CACJ,CAMO,WAAWP,EAAiB,CAC/B,GAAI,CAAC,KAAK,SAAU,OAEpB,MAAMY,EAAQ,KAAK,SAAS,OAAO,QAAQZ,CAAI,EAC3CY,IAAU,KACV,KAAK,SAAS,OAAO,OAAOA,EAAO,CAAC,EACpC,QAAQ,IAAI,0DAA0D,EAE9E,CAKO,WAAmB,CACtB,OAAK,KAAK,SACH,KAAK,SAAS,OADM,CAAA,CAE/B,CAKO,QAAe,CACd,KAAK,UACL,KAAK,SAAS,OAAA,CAEtB,CAKO,QAAQC,EAAeC,EAAsB,CAEhD,GAAI,OAAK,YAAcD,GAAS,KAAK,aAAeC,GAOpD,IAHA,KAAK,UAAYD,EACjB,KAAK,WAAaC,EAEd,KAAK,SAAU,CACf,KAAK,SAAS,QAAQD,EAAOC,CAAM,EAEnC,UAAWd,KAAQ,KAAK,SAAS,OACzBA,GAAQ,OAAOA,EAAK,SAAY,YAChCA,EAAK,QAAQa,EAAOC,CAAM,CAGtC,CAEA,QAAQ,IAAI,kDAAkDD,CAAK,IAAIC,CAAM,EAAE,EACnF,CAKO,SAAgB,CACf,KAAK,WACL,KAAK,SAAS,OAAO,QAAQd,GAAQ,CAC7BA,GAAQ,OAAOA,EAAK,SAAY,YAChCA,EAAK,QAAA,CAEb,CAAC,EAED,KAAK,SAAW,KAChB,KAAK,WAAa,KAClB,KAAK,WAAa,KAElB,KAAK,UAAY,GAEjB,QAAQ,IAAI,sDAAsD,EAE1E,CACJ,CC/LO,MAAMe,EAA6C,CAAnD,cAMKvB,EAAA,kBAA2C,KA4BnD,GACIwB,EACAC,EACI,CACJ,MAAMC,EAAW,OAAOF,CAAK,EACxB,KAAK,OAAO,IAAIE,CAAQ,GACzB,KAAK,OAAO,IAAIA,EAAU,CAAA,CAAE,EAEhC,KAAK,OAAO,IAAIA,CAAQ,EAAG,KAAKD,CAAyB,CAC7D,CAmBA,IACID,EACAC,EACI,CACJ,MAAMC,EAAW,OAAOF,CAAK,EACvBG,EAAY,KAAK,OAAO,IAAID,CAAQ,EAC1C,GAAI,CAACC,EAAW,OAEhB,MAAMP,EAAQO,EAAU,QAAQF,CAAyB,EACrDL,IAAU,IACVO,EAAU,OAAOP,EAAO,CAAC,CAEjC,CAqBA,KACII,EACAI,EACI,CACJ,MAAMF,EAAW,OAAOF,CAAK,EACvBG,EAAY,KAAK,OAAO,IAAID,CAAQ,EAC1C,GAAKC,EAIL,UAAWF,KAAYE,EACnB,GAAI,CACAF,EAASG,CAAI,CACjB,OAASb,EAAO,CAEZ,QAAQ,MAAM,8BAA8BW,CAAQ,IAAKX,CAAK,CAClE,CAER,CAkBA,KACIS,EACAC,EACI,CAEJ,MAAMI,EAA+BD,GAAS,CAE1C,KAAK,IAAIJ,EAAOK,CAAmB,EAEnCJ,EAASG,CAAW,CACxB,EAEA,KAAK,GAAGJ,EAAOK,CAAmB,CACtC,CAYA,OAAc,CACV,KAAK,OAAO,MAAA,CAChB,CACJ,CCxLO,MAAMC,CAAc,CAMvB,YAAYC,EAAkBC,EAAyBC,EAAkB,IAAK,CALtEjC,EAAA,YAAY,CAAA,GACZA,EAAA,gBACAA,EAAA,cACAA,EAAA,gBAGJ,KAAK,QAAU+B,EACf,KAAK,MAAQC,EACb,KAAK,QAAUC,CACnB,CAKA,SAAa,CACT,OAAO,KAAK,KAAK,IAAA,GAAS,KAAK,QAAA,CACnC,CAKA,QAAQC,EAAc,CACd,KAAK,KAAK,OAAS,KAAK,UACxB,KAAK,MAAMA,CAAG,EACd,KAAK,KAAK,KAAKA,CAAG,EAE1B,CAKA,OAAc,CACV,KAAK,KAAK,OAAS,CACvB,CAKA,IAAI,MAAe,CACf,OAAO,KAAK,KAAK,MACrB,CACJ,CAMO,SAASC,GACZC,EACAC,EACwB,CACxB,IAAIC,EAAW,EACf,MAAO,IAAIC,IAAgB,CACvB,MAAMC,EAAM,KAAK,IAAA,EACbA,EAAMF,GAAYD,IAClBC,EAAWE,EACXJ,EAAK,GAAGG,CAAI,EAEpB,CACJ,CAMO,SAASE,GACZL,EACAC,EACwB,CACxB,IAAIK,EAA2B,KAC/B,MAAO,IAAIH,IAAgB,CACnBG,GACA,aAAaA,CAAS,EAE1BA,EAAY,OAAO,WAAW,IAAM,CAChCN,EAAK,GAAGG,CAAI,CAChB,EAAGF,CAAK,CACZ,CACJ,CAMO,MAAMM,EAAiB,CAI1B,YAAYC,EAAa,CAHjB5C,EAAA,gBAAW,GACXA,EAAA,sBAGJ,KAAK,cAAgB,IAAO4C,CAChC,CAKA,YAAsB,CAClB,MAAMJ,EAAM,YAAY,IAAA,EACxB,OAAIA,EAAM,KAAK,UAAY,KAAK,eAC5B,KAAK,SAAWA,EACT,IAEJ,EACX,CAKA,QACIJ,KACGG,EACiB,CACpB,OAAI,KAAK,aACEH,EAAK,GAAGG,CAAI,EAEhB,IACX,CACJ,CAKO,MAAMM,EAAc,CAApB,cACK7C,EAAA,qBAA0B,CAAA,GAC1BA,EAAA,wBAAmB,KAK3B,gBAAyB,CACrB,MAAI,WAAY,YACJ,YAAoB,OAAO,eAAiB,KAAO,KAExD,CACX,CAKA,mBAA0B,CACtB,MAAM8C,EAAQ,KAAK,eAAA,EACnB,KAAK,cAAc,KAAKA,CAAK,EAEzB,KAAK,cAAc,OAAS,KAAK,kBACjC,KAAK,cAAc,MAAA,CAG3B,CAKA,gBAAyD,CACrD,GAAI,KAAK,cAAc,OAAS,GAAI,MAAO,SAE3C,MAAMC,EAAS,KAAK,cAAc,MAAM,GAAG,EACrCC,EAAYD,EAAO,MAAM,EAAG,CAAC,EAC7BE,EAAaF,EAAO,MAAM,CAAC,EAE3BG,EAAWF,EAAU,OAAO,CAACG,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EAAIJ,EAAU,OAG5DK,EAFYJ,EAAW,OAAO,CAACE,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EAAIH,EAAW,OAE5CC,EAEzB,OAAIG,EAAO,EAAU,aACjBA,EAAO,GAAW,aACf,QACX,CAKA,kBAA4B,CACxB,MAAMC,EAAQ,KAAK,eAAA,EACbC,EAAe,KAAK,eAAA,EAG1B,OAAOD,IAAU,cAAgBC,EAAe,GACpD,CACJ,CAKO,MAAMC,EAAoB,CAA1B,cACKxD,EAAA,wBAA0C,KAC1CA,EAAA,sBAAsC,KAK9C,MAAMyD,EAAqB,CACvB,KAAK,WAAW,IAAIA,EAAO,YAAY,KAAK,CAChD,CAKA,IAAIA,EAAuB,CACvB,MAAMC,EAAY,KAAK,WAAW,IAAID,CAAK,EAC3C,GAAI,CAACC,EACD,eAAQ,KAAK,wDAAwDD,CAAK,EAAE,EACrE,EAGX,MAAME,EAAW,YAAY,IAAA,EAAQD,EACrC,YAAK,WAAW,OAAOD,CAAK,EAEvB,KAAK,aAAa,IAAIA,CAAK,GAC5B,KAAK,aAAa,IAAIA,EAAO,CAAA,CAAE,EAEnC,KAAK,aAAa,IAAIA,CAAK,EAAG,KAAKE,CAAQ,EAEpCA,CACX,CAKA,WAAWF,EAMF,CACL,MAAMG,EAAe,KAAK,aAAa,IAAIH,CAAK,EAChD,GAAI,CAACG,GAAgBA,EAAa,SAAW,EACzC,OAAO,KAGX,MAAMC,EAAQD,EAAa,OACrBE,EAAQF,EAAa,OAAO,CAAC,EAAGR,IAAM,EAAIA,EAAG,CAAC,EAC9CW,EAAUD,EAAQD,EAClBG,EAAM,KAAK,IAAI,GAAGJ,CAAY,EAC9BK,EAAM,KAAK,IAAI,GAAGL,CAAY,EAEpC,MAAO,CAAE,MAAAC,EAAO,QAAAE,EAAS,IAAAC,EAAK,IAAAC,EAAK,MAAAH,CAAA,CACvC,CAKA,MAAML,EAAsB,CACpBA,GACA,KAAK,aAAa,OAAOA,CAAK,EAC9B,KAAK,WAAW,OAAOA,CAAK,IAE5B,KAAK,aAAa,MAAA,EAClB,KAAK,WAAW,MAAA,EAExB,CAKA,eAMG,CACC,MAAMS,EAA+B,CAAA,EAErC,SAAW,CAACT,CAAK,IAAK,KAAK,aAAc,CACrC,MAAMU,EAAS,KAAK,WAAWV,CAAK,EAChCU,IACAD,EAAQT,CAAK,EAAIU,EAEzB,CAEA,OAAOD,CACX,CACJ,CAMO,MAAME,EAAgB,CAAtB,cACKpE,EAAA,0BAAqB,KACrBA,EAAA,uBAAkB,IAK1B,eAAeqE,EAAYC,EAA4B,CACnD,KAAK,eAAe,IAAID,EAAIC,CAAQ,EAE/B,KAAK,kBACN,KAAK,gBAAkB,GACvB,sBAAsB,IAAM,CACxB,KAAK,eAAA,EACL,KAAK,gBAAkB,EAC3B,CAAC,EAET,CAKQ,gBAAuB,CAC3B,KAAK,eAAe,QAAQA,GAAY,CACpC,GAAI,CACAA,EAAA,CACJ,OAASvD,EAAO,CACZ,QAAQ,MAAM,mCAAoCA,CAAK,CAC3D,CACJ,CAAC,EACD,KAAK,eAAe,MAAA,CACxB,CAKA,aAAasD,EAAkB,CAC3B,KAAK,eAAe,OAAOA,CAAE,CACjC,CAKA,OAAc,CACV,KAAK,eAAe,MAAA,EACpB,KAAK,gBAAkB,EAC3B,CACJ,CAMO,MAAME,EAAmB,CAK5B,YAAYtC,EAAkB,IAAKuC,EAA4B,IAAO,CAJ9DxE,EAAA,iBAAY,KACZA,EAAA,gBACAA,EAAA,uBAAiC,MAGrC,KAAK,QAAUiC,EAGf,KAAK,gBAAkB,OAAO,YAAY,IAAM,CAC5C,KAAK,QAAA,CACT,EAAGuC,CAAiB,CACxB,CAKA,IAAIC,EAAQC,EAAUC,EAAc,IAAc,CAE9C,GAAI,KAAK,MAAM,MAAQ,KAAK,QAAS,CACjC,MAAMC,EAAY,KAAK,MAAM,KAAA,EAAO,OAAO,MACvCA,IAAc,QACd,KAAK,MAAM,OAAOA,CAAS,CAEnC,CAEA,KAAK,MAAM,IAAIH,EAAK,CAChB,MAAAC,EACA,UAAW,KAAK,IAAA,EAChB,IAAAC,CAAA,CACH,CACL,CAKA,IAAIF,EAAuB,CACvB,MAAMI,EAAO,KAAK,MAAM,IAAIJ,CAAG,EAC/B,GAAKI,EAGL,IAAI,KAAK,IAAA,EAAQA,EAAK,UAAYA,EAAK,IAAK,CACxC,KAAK,MAAM,OAAOJ,CAAG,EACrB,MACJ,CAEA,OAAOI,EAAK,MAChB,CAKA,OAAOJ,EAAiB,CACpB,OAAO,KAAK,MAAM,OAAOA,CAAG,CAChC,CAKA,OAAc,CACV,KAAK,MAAM,MAAA,CACf,CAKQ,SAAgB,CACpB,MAAMjC,EAAM,KAAK,IAAA,EACjB,SAAW,CAACiC,EAAKI,CAAI,IAAK,KAAK,MACvBrC,EAAMqC,EAAK,UAAYA,EAAK,KAC5B,KAAK,MAAM,OAAOJ,CAAG,CAGjC,CAKA,SAAgB,CACR,KAAK,kBACL,cAAc,KAAK,eAAe,EAClC,KAAK,gBAAkB,MAE3B,KAAK,MAAA,CACT,CAKA,UAIE,CACE,MAAO,CACH,KAAM,KAAK,MAAM,KACjB,QAAS,KAAK,QACd,QAAS,CAAA,CAEjB,CACJ,CAMO,MAAMK,EAA0B,CAInC,OAAO,yBAAmC,OAEtC,OACI,OAAO,kBAAoB,GAC3B,UAAU,qBAAuB,GACjC,GAAE7D,EAAA,UAAkB,aAAlB,MAAAA,EAA8B,SAExC,CAKA,OAAO,qBAAiD,CACpD,OAAI,KAAK,0BACE,OAGP,OAAO,kBAAoB,GAAK,UAAU,qBAAuB,EAC1D,SAGJ,KACX,CAKA,OAAO,gCAA2C,CAC9C,MAAM8D,EAA4B,CAAA,EAGlC,OAFc,KAAK,oBAAA,EAEX,CACJ,IAAK,MACDA,EAAgB,KAAK,QAAQ,EAC7BA,EAAgB,KAAK,SAAS,EAC9BA,EAAgB,KAAK,SAAS,EAC9BA,EAAgB,KAAK,MAAM,EAC3B,MACJ,IAAK,SACDA,EAAgB,KAAK,UAAU,EAC/BA,EAAgB,KAAK,YAAY,EACjCA,EAAgB,KAAK,WAAW,EAChC,MACJ,IAAK,OACDA,EAAgB,KAAK,UAAU,EAC/BA,EAAgB,KAAK,WAAW,EAChCA,EAAgB,KAAK,YAAY,EACjC,KAAA,CAGR,OAAOA,CACX,CACJ,CAMO,MAAMC,EAAN,MAAMA,CAA2B,CAK5B,aAAc,CAHdhF,EAAA,yBACAA,EAAA,6BAAiC,IAGrC,KAAK,iBAAmB,IAAI2C,GAAiB,EAAE,CACnD,CAKA,OAAO,aAA0C,CAC7C,OAAK,KAAK,WACN,KAAK,SAAW,IAAIqC,GAEjB,KAAK,QAChB,CAKA,oBAA2B,CACvB,KAAK,sBAAwB,EACjC,CAKA,qBAA4B,CACxB,KAAK,sBAAwB,EACjC,CAKA,uBACI5C,KACGG,EACiB,CACpB,OAAK,KAAK,sBAIH,KAAK,iBAAiB,QAAQH,EAAM,GAAGG,CAAI,EAHvCH,EAAK,GAAGG,CAAI,CAI3B,CACJ,EA7CIvC,EADSgF,EACM,WAA8C,MAD1D,IAAMC,EAAND,EAoDA,MAAME,EAAiB,CAU1B,YAAYC,EAAqC,CATzCnF,EAAA,kBAAqB,GACrBA,EAAA,gBAAmB,GACnBA,EAAA,kBAAqB,GACrBA,EAAA,kBAAuB,CAAA,GACdA,EAAA,mBAAsB,IAC/BA,EAAA,mBAA8C,MAC9CA,EAAA,kBAAsB,IACtBA,EAAA,eAAkB,GAGlBmF,IACA,KAAK,YAAcA,EAE3B,CAKA,OAAc,CACN,KAAK,aACT,KAAK,WAAa,GAClB,KAAK,SAAW,YAAY,IAAA,EAC5B,KAAK,QAAU,sBAAsB,KAAK,OAAO,KAAK,IAAI,CAAC,EAC/D,CAKA,MAAa,CACT,KAAK,WAAa,GACd,KAAK,SACL,qBAAqB,KAAK,OAAO,CAEzC,CAKQ,OAAOC,EAAyB,CACpC,GAAI,CAAC,KAAK,WAAY,OAEtB,KAAK,aACL,MAAMC,EAAUD,EAAY,KAAK,SAG7BC,GAAW,MACX,KAAK,WAAa,KAAK,MAAO,KAAK,WAAa,IAAQA,CAAO,EAG/D,KAAK,WAAW,KAAK,KAAK,UAAU,EAChC,KAAK,WAAW,OAAS,KAAK,aAC9B,KAAK,WAAW,MAAA,EAIhB,KAAK,aACL,KAAK,YAAY,KAAK,UAAU,EAIpC,KAAK,WAAa,EAClB,KAAK,SAAWD,GAGpB,KAAK,QAAU,sBAAsB,KAAK,OAAO,KAAK,IAAI,CAAC,CAC/D,CAKA,eAAwB,CACpB,OAAO,KAAK,UAChB,CAKA,eAAwB,CACpB,GAAI,KAAK,WAAW,SAAW,EAAG,MAAO,GACzC,MAAME,EAAM,KAAK,WAAW,OAAO,CAACnC,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EACrD,OAAO,KAAK,MAAMkC,EAAM,KAAK,WAAW,MAAM,CAClD,CAKA,eAA0B,CACtB,MAAO,CAAC,GAAG,KAAK,UAAU,CAC9B,CAKA,aAA8E,CAC1E,GAAI,KAAK,WAAW,SAAW,EAC3B,MAAO,CAAE,QAAS,KAAK,WAAY,QAAS,EAAG,IAAK,EAAG,IAAK,CAAA,EAGhE,MAAMtB,EAAM,KAAK,IAAI,GAAG,KAAK,UAAU,EACjCC,EAAM,KAAK,IAAI,GAAG,KAAK,UAAU,EACjCF,EAAU,KAAK,cAAA,EAErB,MAAO,CACH,QAAS,KAAK,WACd,QAAAA,EACA,IAAAC,EACA,IAAAC,CAAA,CAER,CACJ,CAMO,MAAMsB,WAAoC/B,EAAoB,CAA9D,kCACKxD,EAAA,0BAAkC,KAK1C,MAAMyD,EAAqB,CACvB,MAAM,MAAMA,CAAK,EACjB,KAAK,eAAe,IAAIA,CAAK,CACjC,CAKA,IAAIA,EAAuB,CACvB,YAAK,eAAe,OAAOA,CAAK,EACzB,MAAM,IAAIA,CAAK,CAC1B,CAKA,mBAA8B,CAC1B,OAAO,MAAM,KAAK,KAAK,cAAc,CACzC,CAKA,OAAc,CACV,KAAK,eAAe,MAAA,EACpB,KAAK,MAAA,CACT,CACJ,CAMO,MAAM+B,EAAkB,CAI3B,OAAO,gBAAgBC,EAAiE,CACpF,GAAI,CAACA,GAAcA,EAAW,SAAW,EACrC,eAAQ,KAAK,iCAAiC,EACvC,KAGX,GAAI,CAGA,eAAQ,KAAK,oDAAoD,EAC1D,IACX,OAAS1E,EAAO,CACZ,eAAQ,MAAM,+BAAgCA,CAAK,EAC5C,IACX,CACJ,CAKA,OAAO,2BAA2B2E,EAAsC,CAEpE,GAAI,CAACA,EAAS,WAAW,SAAU,CAC/B,QAAQ,KAAK,+BAA+B,EAC5C,MACJ,CAGKA,EAAS,aACVA,EAAS,mBAAA,EAERA,EAAS,gBACVA,EAAS,sBAAA,EAITA,EAAS,OAASA,EAAS,MAAM,MAAQ,GAEzC,QAAQ,IAAI,oCAAoC,CAExD,CAKA,OAAO,iBAAiBA,EAAgCC,EAAgB,GAA2B,CAE/F,eAAQ,IAAI,mCAAmCA,CAAK,EAAE,EAC/CD,CACX,CACJ,CAMO,MAAME,EAAiB,CAM1B,OAAO,gBAAgBC,EAAwB5D,EAAkB,KAAqB,CAClF,GAAI,CAAC4D,EAAQ,MACT,eAAQ,KAAK,6BAA6B,EACnCA,EAIX,MAAMxE,EAAQwE,EAAQ,MAAM,MACtBvE,EAASuE,EAAQ,MAAM,OAE7B,GAAIxE,GAASY,GAAWX,GAAUW,EAE9B,OAAO4D,EAIX,MAAMF,EAAQ,KAAK,IAAI1D,EAAUZ,EAAOY,EAAUX,CAAM,EAClDwE,EAAW,KAAK,MAAMzE,EAAQsE,CAAK,EACnCI,EAAY,KAAK,MAAMzE,EAASqE,CAAK,EAE3C,eAAQ,IAAI,4BAA4BtE,CAAK,IAAIC,CAAM,MAAMwE,CAAQ,IAAIC,CAAS,EAAE,EAI7EF,CACX,CAKA,OAAO,aAAapB,EAAaoB,EAA8B,CAC3D,KAAK,aAAa,IAAIpB,EAAKoB,CAAO,EAClC,QAAQ,IAAI,6BAA6BpB,CAAG,EAAE,CAClD,CAKA,OAAO,iBAAiBA,EAAwC,CAC5D,OAAO,KAAK,aAAa,IAAIA,CAAG,CACpC,CAKA,OAAO,YAAmB,CACtB,KAAK,aAAa,MAAA,EAClB,QAAQ,IAAI,4BAA4B,CAC5C,CACJ,CAtDIzE,EADS4F,GACM,eAA2C,IAAI,KA4D3D,MAAMI,EAAc,CAIvB,YAAYC,EAAoB,IAAK,CAH7BjG,EAAA,mBAA6C,KAC7CA,EAAA,iBAAoB,KAGxB,KAAK,UAAYiG,CACrB,CAKA,UAAUxB,EAAaxE,EAA8B,CAC5C,KAAK,QAAQ,IAAIwE,CAAG,GACrB,KAAK,QAAQ,IAAIA,EAAK,CAAA,CAAE,EAG5B,MAAMyB,EAAQ,KAAK,QAAQ,IAAIzB,CAAG,EAClCyB,EAAM,KAAKjG,CAAM,EAGbiG,EAAM,QAAU,KAAK,YACrB,KAAK,aAAazB,EAAKyB,CAAK,EAC5BA,EAAM,OAAS,EAEvB,CAKQ,aAAazB,EAAa0B,EAAiC,CAC/D,QAAQ,IAAI,wBAAwB1B,CAAG,OAAO0B,EAAQ,MAAM,MAAM,CAEtE,CAKA,OAAc,CACV,SAAW,CAAC1B,EAAKyB,CAAK,IAAK,KAAK,QACxBA,EAAM,OAAS,IACf,KAAK,aAAazB,EAAKyB,CAAK,EAC5BA,EAAM,OAAS,EAG3B,CACJ,CCz2BO,MAAME,WAAkCrG,CAAW,CA4BtD,YAAYsG,EAAqE,CAC7E,MAAA,EA5BJrG,EAAA,YAAO,6BAGCA,EAAA,kBAAqB,GACrBA,EAAA,wBAA2B,GAC3BA,EAAA,wBAA2B,KAG3BA,EAAA,wBAAwC,KAGxCA,EAAA,mBAAsB,GACtBA,EAAA,uBAA0B,GAC1BA,EAAA,2BAA8B,KAG9BA,EAAA,iBAAoB,GACpBA,EAAA,iBAAoB,GACpBA,EAAA,cAAiB,GACjBA,EAAA,aAAgB,GAGhBA,EAAA,gCAA2E,KAG3EA,EAAA,wBAA4B,IAK5BqG,IACA,KAAK,iBAAmBA,EAAQ,kBAAoB,GACpD,KAAK,iBAAmBA,EAAQ,kBAAoB,IAE5D,CAKgB,OAAc,QAC1BpF,EAAA,MAAM,QAAN,MAAAA,EAAA,UACJ,CAKgB,UAAiB,QAC7BA,EAAA,MAAM,WAAN,MAAAA,EAAA,UACJ,CAKA,MAAsB,OAAuB,QACzCA,EAAA,MAAM,QAAN,MAAAA,EAAA,WACA,KAAK,iBAAmB,YAAY,IAAA,CACxC,CAKgB,OAAOqF,EAAyB,QAC5CrF,EAAA,MAAM,SAAN,MAAAA,EAAA,UAAeqF,GAEf,KAAK,aACL,MAAMC,EAAc,YAAY,IAAA,EAG5BA,EAAc,KAAK,kBAAoB,KAAK,mBAC5C,KAAK,iBAAmBA,GAIxBA,EAAc,KAAK,iBAAmB,KAAK,sBAC3C,KAAK,iBAAA,EACL,KAAK,gBAAkBA,EAE/B,CAKQ,cAAqB,CAGzB,GAFA,KAAK,aAAa,MAAA,EAEd,CAAC,KAAK,MAAO,OAEjB,MAAMC,EAAevG,GAA2B,CAC5C,MAAMwG,EAAOxG,EAAO,KACpB,KAAK,aAAa,IAAIwG,GAAO,KAAK,aAAa,IAAIA,CAAI,GAAK,GAAK,CAAC,EAGlExG,EAAO,SAAS,QAAQyG,GAASF,EAAYE,CAAK,CAAC,CACvD,EAEA,KAAK,MAAM,SAAS,QAAQA,GAASF,EAAYE,CAAK,CAAC,CAC3D,CAKQ,kBAAyB,CACzB,WAAY,cACZ,KAAK,YAAe,YAAoB,OAAO,eAAiB,KAAO,KAE/E,CAKO,sBAAsBC,EAAoBC,EAA6B,CACrE,KAAK,qBAAqB,IAAID,CAAU,GACzC,KAAK,qBAAqB,IAAIA,EAAY,CAAE,MAAO,EAAG,MAAO,EAAG,EAGpE,MAAME,EAAQ,KAAK,qBAAqB,IAAIF,CAAU,EACtDE,EAAM,OAASD,EACfC,EAAM,OACV,CAKO,YAAmB,CACtB,KAAK,WAAa,EAClB,KAAK,aAAa,MAAA,EAClB,KAAK,qBAAqB,MAAA,CAC9B,CAKO,mBAAyB,CAC5B,MAAMC,EAAc,CAChB,UAAW,IAAI,KAAA,EAAO,YAAA,EACtB,aAAc,OAAO,YAAY,KAAK,YAAY,EAClD,YAAa,KAAK,YAClB,qBAAsB,CAAA,CAAC,EAG3B,SAAW,CAACH,EAAYE,CAAK,IAAK,KAAK,qBACnCC,EAAO,qBAAqBH,CAAU,EAAI,CACtC,YAAaE,EAAM,MAAQA,EAAM,MACjC,UAAWA,EAAM,MACjB,UAAWA,EAAM,KAAA,EAIzB,GAAI,KAAK,SAAU,CACf,MAAME,EAAO,KAAK,cAAc,KAChCD,EAAO,YAAc,CACjB,UAAWC,EAAK,OAAO,MACvB,UAAWA,EAAK,OAAO,UACvB,OAAQA,EAAK,OAAO,OACpB,MAAOA,EAAK,OAAO,MACnB,SAAUA,EAAK,SAAWA,EAAK,SAAS,OAAS,CAAA,CAEzD,CAEA,OAAOD,CACX,CAKgB,SAAgB,QAC5B7F,EAAA,MAAM,UAAN,MAAAA,EAAA,UACJ,CACJ,CC5KO,MAAM+F,EAAkB,CAO3B,YAAY9G,EAAe,CANnBF,EAAA,iBACAA,EAAA,uBAAoC,KACpCA,EAAA,iBAAqB,IACrBA,EAAA,0BAA6B,KAC7BA,EAAA,kBAA4B,MAGhC,KAAK,SAAWE,CACpB,CAKO,OAAc,CACb,KAAK,YAET,KAAK,UAAY,GACjB,KAAK,WAAa,OAAO,YAAY,IAAM,CAC3C,EAAG,KAAK,kBAAkB,EAC9B,CAKO,MAAa,CACX,KAAK,YAEV,KAAK,UAAY,GACb,KAAK,aACL,cAAc,KAAK,UAAU,EAC7B,KAAK,WAAa,MAE1B,CAKO,WAAiB,OACpB,MAAM4G,EAAc,CAChB,UAAW,IAAI,KAAA,EAAO,YAAA,EACtB,iBAAkB,CAAA,EAClB,SAAU,CAAA,EACV,MAAO,CAAA,EACP,QAAS,CAAA,EACT,OAAQ,CAAA,EACR,eAAgB,CAAA,CAAC,EAIrB,GAAI,KAAK,UAAY,KAAK,SAAS,mBAAoB,CACnD,MAAMG,EAAW,KAAK,SAAS,mBAAA,EAC3BA,IACAH,EAAO,iBAAmBG,EAAS,SAE3C,CAGA,GAAI,KAAK,UAAY,KAAK,SAAS,SAAU,CACzC,MAAMC,EAAS,KAAK,SAAS,SAAS,KACtCJ,EAAO,SAAW,CACd,UAAWI,EAAO,OAAO,MACzB,UAAWA,EAAO,OAAO,UACzB,OAAQA,EAAO,OAAO,OACtB,MAAOA,EAAO,OAAO,MACrB,SAAUA,EAAO,SACjB,WAAYA,EAAO,WACnB,WAAUjG,EAAAiG,EAAO,WAAP,YAAAjG,EAAiB,SAAU,CAAA,CAE7C,CAGA,GAAI,KAAK,UAAY,KAAK,SAAS,MAAO,CACtC,MAAMkG,EAAQ,KAAK,SAAS,MAC5B,IAAIC,EAAe,EACfC,EAAY,EACZC,EAAa,EACbC,EAAc,EAElB,MAAMC,EAAgBvH,GAAgB,CAClCmH,IACInH,EAAO,QAAQoH,IACfpH,EAAO,SAASqH,IAChBrH,EAAO,UAAUsH,IACrBtH,EAAO,SAAS,QAASyG,GAAec,EAAad,CAAK,CAAC,CAC/D,EAEAS,EAAM,SAAS,QAAST,GAAec,EAAad,CAAK,CAAC,EAE1DI,EAAO,MAAQ,CACX,aAAAM,EACA,OAAQC,EACR,OAAQC,EACR,QAASC,CAAA,CAEjB,CAWA,GARI,KAAK,UAAY,KAAK,SAAS,UAC/BT,EAAO,QAAU,CACb,MAAO,KAAK,SAAS,QAAQ,OAC7B,MAAO,KAAK,SAAS,QAAQ,IAAKW,GAAWA,EAAE,YAAY,IAAI,CAAA,GAKnE,WAAY,YAAa,CACzB,MAAMC,EAAU,YAAoB,OACpCZ,EAAO,OAAS,CACZ,KAAMY,EAAO,eACb,MAAOA,EAAO,gBACd,MAAOA,EAAO,eAAA,CAEtB,CAEA,OAAOZ,CACX,CAKO,iCAA4C,CAC/C,MAAMa,EAAwB,CAAA,EAE9B,GAAI,KAAK,SAAU,CACf,MAAMV,EAAW,KAAK,SAAS,mBAAA,EAc/B,GAbIA,GAAYA,EAAS,SAAS,QAAU,IACxCU,EAAY,KAAK,mBAAmB,EAIpC,KAAK,SAAS,UACA,KAAK,SAAS,SAAS,KAAK,OAAO,MACrC,KACRA,EAAY,KAAK,2BAA2B,EAKhD,KAAK,SAAS,MAAO,CACrB,IAAIP,EAAe,EACnB,MAAMI,EAAgBvH,GAAgB,CAClCmH,IACAnH,EAAO,SAAS,QAASyG,GAAec,EAAad,CAAK,CAAC,CAC/D,EACA,KAAK,SAAS,MAAM,SAAS,QAASA,GAAec,EAAad,CAAK,CAAC,EAEpEU,EAAe,KACfO,EAAY,KAAK,wBAAwB,CAEjD,CACJ,CAEA,OAAIA,EAAY,SAAW,GACvBA,EAAY,KAAK,YAAY,EAG1BA,CACX,CACJ,CC9JA,MAAMC,GAAK,CAKP,gBAA0B,CAEtB,GAAI,OAAO,OAAW,KAAe,CAAC,OAAO,UACzC,MAAO,GAGX,MAAMC,EAAY,OAAO,UAAU,UAC7BC,EAAW,UAAU,KAAKD,CAAS,EACnCE,EAAW,UAAU,KAAKF,CAAS,GAAK,CAAC,UAAU,KAAKA,CAAS,EAEvE,OAAOC,GAAYC,CACvB,EAMA,WAAqB,CACjB,OAAI,OAAO,OAAW,KAAe,CAAC,OAAO,UAClC,GAGJ,WAAW,KAAK,OAAO,UAAU,SAAS,CACrD,EAMA,OAAiB,CACb,OAAI,OAAO,OAAW,KAAe,CAAC,OAAO,UAClC,GAGJ,mBAAmB,KAAK,OAAO,UAAU,SAAS,CAC7D,EAMA,UAAoB,CAChB,OAAI,OAAO,OAAW,KAAe,CAAC,OAAO,UAClC,GAGJ,KAAK,SAAW,KAAK,UAAA,CAChC,EAMA,WAAqB,CACjB,MAAO,CAAC,KAAK,SAAA,CACjB,EAMA,WAAoB,CAChB,GAAI,OAAO,OAAW,KAAe,CAAC,OAAO,UACzC,MAAO,UAGX,MAAMF,EAAY,OAAO,UAAU,UAEnC,OAAI,KAAK,QACE,MACA,KAAK,YACL,UACA,WAAW,KAAKA,CAAS,EACzB,UACA,OAAO,KAAKA,CAAS,EACrB,QACA,SAAS,KAAKA,CAAS,EACvB,QAGJ,SACX,EAMA,UAAoB,CAChB,GAAI,OAAO,OAAW,KAAe,CAAC,OAAO,UACzC,MAAO,GAGX,MAAMA,EAAY,OAAO,UAAU,UACnC,MAAO,UAAU,KAAKA,CAAS,GAAK,CAAC,UAAU,KAAKA,CAAS,CACjE,EAMA,UAAoB,CAChB,OAAI,OAAO,OAAW,KAAe,CAAC,OAAO,UAClC,GAGJ,UAAU,KAAK,OAAO,UAAU,SAAS,CACpD,EAMA,WAAqB,CACjB,OAAI,OAAO,OAAW,KAAe,CAAC,OAAO,UAClC,GAGJ,WAAW,KAAK,OAAO,UAAU,SAAS,CACrD,CACJ,ECtGO,MAAMG,UAA+BjI,CAAW,CAqCnD,YAAYsG,EAAkC,CAC1C,MAAA,EArCJrG,EAAA,YAAO,0BAGCA,EAAA,eAGAA,EAAA,kBAGAA,EAAA,cAGAA,EAAA,qBAAuC,MAGvCA,EAAA,uBAAoC,CAAA,GAGpCA,EAAA,oBAAuB,GAGvBA,EAAA,iCAA4E,CAAA,GAC5EA,EAAA,gCAA2E,CAAA,GAC3EA,EAAA,mCAA8E,CAAA,GAG9EA,EAAA,sBAAyB,GACzBA,EAAA,sBAAyB,GAGzBA,EAAA,oBACAA,EAAA,yBAGAA,EAAA,oBAAuB,GA6DvBA,EAAA,4BAA6D,MA6S7DA,EAAA,0BAAsBwB,GAAsB,CAChD,KAAK,YAAYA,CAAK,CAC1B,GAEQxB,EAAA,sBAAkBwB,GAAsB,CAC5C,KAAK,QAAQA,CAAK,CACtB,GAEQxB,EAAA,2BAAuBwB,GAAsB,CACjD,KAAK,aAAaA,CAAK,CAC3B,GAEQxB,EAAA,0BAAsBwB,GAAsB,CAEhDA,EAAM,eAAA,CACV,GAGQxB,EAAA,yBAAqBwB,GAAsB,CAEnD,GAxXI,KAAK,OAAS,CACV,gBAAiB,QACjB,QAAS,GACT,WAAY,EACZ,YAAa,GACb,UAAW,WACX,eAAgB,CAAA,EAChB,aAAc,CAAA,EACd,gBAAiB,GACjB,GAAG6E,CAAA,EAIP,KAAK,UAAY,IAAI4B,EAAM,UAC3B,KAAK,MAAQ,IAAIA,EAAM,QAGvB,KAAK,UAAU,OAAO,KAAO,CAAE,UAAW,GAAA,EAC1C,KAAK,UAAU,OAAO,OAAS,CAAE,UAAW,GAAA,EAG5C,KAAK,YAAc,IAAInG,EACnB,IAAM,IAAImG,EAAM,QACfC,GAAQA,EAAI,IAAI,EAAG,CAAC,CAAA,EAGzB,KAAK,iBAAmB,IAAIpG,EACxB,IAAM,CAAA,EACLqG,GAAQA,EAAI,OAAS,CAAA,EAI1B,KAAK,qBAAuB,KAAK,SAAS,KAAK,YAAY,KAAK,IAAI,EAAG,KAAK,OAAO,eAAe,CACtG,CAKQ,SACJ/F,EACAC,EACwB,CACxB,IAAIC,EAAW,EACf,MAAO,IAAIC,IAAgB,CACvB,MAAMC,EAAM,KAAK,IAAA,EACbA,EAAMF,GAAYD,IAClBC,EAAWE,EACXJ,EAAK,GAAGG,CAAI,EAEpB,CACJ,CAOA,MAAsB,OAAuB,QACzCtB,EAAA,MAAM,QAAN,MAAAA,EAAA,WACA,KAAK,oBAAA,CACT,CAUgB,OAAOqF,EAAyB,OAC5C,MAAM5C,EAAY,YAAY,IAAA,EAG9B,IAFAzC,EAAA,MAAM,SAAN,MAAAA,EAAA,UAAeqF,GAEX,CAAC,KAAK,OAAO,QAAS,QAGtB,KAAK,OAAO,kBAAoB,SAAW,KAAK,OAAO,kBAAoB,SAC3E,KAAK,iBAAA,EAIT,MAAMM,EAAgB,YAAY,IAAA,EAAQlD,EACtC,KAAK,UAAa,KAAK,SAAiB,qBACvC,KAAK,SAAiB,oBAAoB,sBAAsB,yBAA0BkD,CAAa,CAEhH,CAEgB,UAAiB,CAC7B,MAAM,SAAA,CACV,CAKgB,WAAkB,QAC9B3F,EAAA,MAAM,YAAN,MAAAA,EAAA,WACA,KAAK,qBAAA,EACL,KAAK,qBAAA,CACT,CAKgB,SAAgB,QAC5BA,EAAA,MAAM,UAAN,MAAAA,EAAA,WACA,KAAK,qBAAA,EACL,KAAK,qBAAA,EAED,KAAK,eACL,aAAa,KAAK,YAAY,EAC9B,KAAK,aAAe,EAE5B,CAMO,4BAA4BQ,EAAyD,CACxF,KAAK,0BAA4B,CAACA,CAAQ,CAC9C,CAMO,4BAA4BA,EAAyD,CACxF,KAAK,0BAA0B,KAAKA,CAAQ,CAChD,CAMO,+BAA+BA,EAAyD,CAC3F,MAAML,EAAQ,KAAK,0BAA0B,QAAQK,CAAQ,EACzDL,EAAQ,IACR,KAAK,0BAA0B,OAAOA,EAAO,CAAC,CAEtD,CAMO,8BAA8BK,EAAyD,CAC1F,KAAK,4BAA8B,CAACA,CAAQ,CAChD,CAMO,8BAA8BA,EAAyD,CAC1F,KAAK,4BAA4B,KAAKA,CAAQ,CAClD,CAMO,iCAAiCA,EAAyD,CAC7F,MAAML,EAAQ,KAAK,4BAA4B,QAAQK,CAAQ,EAC3DL,EAAQ,IACR,KAAK,4BAA4B,OAAOA,EAAO,CAAC,CAExD,CAMO,2BAA2BK,EAAyD,CACvF,KAAK,yBAA2B,CAACA,CAAQ,CAC7C,CAMO,2BAA2BA,EAAyD,CACvF,KAAK,yBAAyB,KAAKA,CAAQ,CAC/C,CAMO,8BAA8BA,EAAyD,CAC1F,MAAML,EAAQ,KAAK,yBAAyB,QAAQK,CAAQ,EACxDL,EAAQ,IACR,KAAK,yBAAyB,OAAOA,EAAO,CAAC,CAErD,CAMO,aAAagH,EAAoB,CACpC,KAAK,OAAO,UAAYA,CAC5B,CAMO,kBAAkBC,EAA0B,CAC1C,KAAK,OAAO,eAAe,SAASA,CAAU,GAC/C,KAAK,OAAO,eAAe,KAAKA,CAAU,CAElD,CAEO,mBAAmBA,EAA4B,CAClD,UAAWjI,KAAQiI,EACf,KAAK,kBAAkBjI,CAAI,CAEnC,CAMO,qBAAqBiI,EAA0B,CAClD,MAAMjH,EAAQ,KAAK,OAAO,eAAe,QAAQiH,CAAU,EACvDjH,EAAQ,IACR,KAAK,OAAO,eAAe,OAAOA,EAAO,CAAC,CAElD,CAMO,iBAAiBkH,EAAuB,CAC3C,KAAK,OAAO,aAAe,CAAC,GAAGA,CAAK,CACxC,CAOQ,qBAAqBrI,EAAiC,CAiB1D,GAfI,CAACA,GAKD,CAACA,EAAO,SAKRA,EAAO,QAAW,EAAAA,EAAO,OAAO,KAAO,KAAK,OAAO,YAKnD,KAAK,OAAO,eAAe,SAASA,EAAO,IAAI,EAC/C,MAAO,GAIX,MAAMsI,EAAatI,EAAO,KAC1B,GAAI,KAAK,OAAO,aAAa,SAASsI,CAAU,EAC5C,MAAO,GAIX,GAAItI,aAAkBgI,EAAM,KAAM,CAE9B,GAAI,CAAChI,EAAO,SACR,MAAO,GAIX,GAAI,MAAM,QAAQA,EAAO,QAAQ,GAC7B,UAAWuI,KAAOvI,EAAO,SACrB,GAAI,CAACuI,EACD,MAAO,GAIvB,CAEA,MAAO,EACX,CAOQ,0BAA0BC,EAAwD,CACtF,OAAOA,EAAW,OAAOC,GAEhBA,EAAU,OAKR,KAAK,qBAAqBA,EAAU,MAAM,EAJtC,EAKd,CACL,CAKQ,qBAA4B,CAChC,GAAI,CACA,MAAMC,EAAS,KAAK,cAAc,YAE9B,KAAK,OAAO,kBAAoB,SAAW,KAAK,OAAO,kBAAoB,SACvE,KAAK,sBACLA,EAAO,iBAAiB,YAAa,KAAK,oBAAoB,GAIlE,KAAK,OAAO,kBAAoB,SAAW,KAAK,OAAO,kBAAoB,UAC3EA,EAAO,iBAAiB,QAAS,KAAK,cAAc,EAEpDA,EAAO,iBAAiB,aAAc,KAAK,mBAAmB,GAIlEA,EAAO,iBAAiB,YAAa,KAAK,kBAAkB,EAC5DA,EAAO,iBAAiB,WAAY,KAAK,iBAAiB,CAC9D,OAAS5H,EAAO,CACZ,QAAQ,MAAM,uCAAwCA,CAAK,CAC/D,CACJ,CAKQ,sBAA6B,CACjC,GAAI,CACA,MAAM4H,EAAS,KAAK,cAAc,WAE9B,KAAK,sBACLA,EAAO,oBAAoB,YAAa,KAAK,oBAAoB,EAErEA,EAAO,oBAAoB,QAAS,KAAK,cAAc,EAEvDA,EAAO,oBAAoB,aAAc,KAAK,mBAAmB,EACjEA,EAAO,oBAAoB,YAAa,KAAK,kBAAkB,EAC/DA,EAAO,oBAAoB,WAAY,KAAK,iBAAiB,CACjE,OAAS5H,EAAO,CACZ,QAAQ,MAAM,uCAAwCA,CAAK,CAC/D,CACJ,CA4BQ,YAAYS,EAAyB,CACzC,GAAI,CACA,MAAMoH,EAAO,KAAK,cAAc,WAAW,sBAAA,EAGrCC,EAAQ,KAAK,YAAY,QAAA,EAC/BA,EAAM,GAAMrH,EAAM,QAAUoH,EAAK,MAAQA,EAAK,MAAS,EAAI,EAC3DC,EAAM,EAAI,GAAGrH,EAAM,QAAUoH,EAAK,KAAOA,EAAK,QAAU,EAAI,EAE5D,KAAK,MAAM,KAAKC,CAAK,EAGrB,KAAK,YAAY,QAAQA,CAAK,CAClC,OAAS9H,EAAO,CACZ,QAAQ,MAAM,wCAAyCA,CAAK,CAChE,CACJ,CASQ,aAAaS,EAAyB,CAC1C,GAAI,CAOA,GALIA,GAAS,OAAOA,EAAM,gBAAmB,YACzCA,EAAM,eAAA,EAINA,EAAM,QAAQ,OAAS,EAAG,CAC1B,MAAMsH,EAAQtH,EAAM,QAAQ,CAAC,EACvBuH,EAAa,CACf,QAASD,EAAM,QACf,QAASA,EAAM,OAAA,EAInB,KAAK,QAAQC,CAAU,CAC3B,CACJ,OAAShI,EAAO,CACZ,QAAQ,MAAM,sCAAuCA,CAAK,CAC9D,CACJ,CAWQ,QAAQS,EAAyB,CACrC,GAAI,CAEA,MAAMgB,EAAM,YAAY,IAAA,EACxB,GAAIA,EAAM,KAAK,eAAiB,KAAK,OAAO,gBACxC,OAEJ,KAAK,eAAiBA,EAGlBhB,GAAS,OAAOA,EAAM,gBAAmB,YACzCA,EAAM,eAAA,EAKV,MAAMoH,EADS,KAAK,cAAc,WACd,sBAAA,EAGdC,EAAQ,KAAK,YAAY,QAAA,EAC/BA,EAAM,GAAMrH,EAAM,QAAUoH,EAAK,MAAQA,EAAK,MAAS,EAAI,EAC3DC,EAAM,EAAI,GAAGrH,EAAM,QAAUoH,EAAK,KAAOA,EAAK,QAAU,EAAI,EAE5D,KAAK,UAAU,cAAcC,EAAO,KAAK,MAAM,EAG/C,MAAMJ,EAAa,KAAK,iBAAiB,QAAA,EACzC,KAAK,UAAU,iBAAiB,KAAK,MAAM,SAAU,GAAMA,CAAU,EAGrE,MAAMO,EAAyB,KAAK,0BAA0BP,CAAU,EAExE,GAAIO,EAAuB,OAAS,EAAG,CACnC,MAAMC,EAAiBD,EAAuB,CAAC,EAAE,OAG7CC,GAAmBA,EAAuB,QAC1C,KAAK,aAAaA,CAAc,CAExC,MAEI,KAAK,eAAA,EAIT,KAAK,YAAY,QAAQJ,CAAK,EAC9B,KAAK,iBAAiB,QAAQJ,CAAU,CAC5C,OAAS1H,EAAO,CACZ,QAAQ,MAAM,sCAAuCA,CAAK,CAC9D,CACJ,CAWQ,kBAAyB,CAC7B,GAAI,CAEA,MAAMyB,EAAM,YAAY,IAAA,EACxB,GAAIA,EAAM,KAAK,eAAiB,KAAK,OAAO,gBACxC,OAEJ,KAAK,eAAiBA,EAGtB,MAAMiG,EAAa,KAAK,iBAAiB,QAAA,EACzC,KAAK,UAAU,cAAc,KAAK,MAAO,KAAK,MAAM,EACpD,KAAK,UAAU,iBAAiB,KAAK,MAAM,SAAU,GAAMA,CAAU,EAGrE,MAAMO,EAAyB,KAAK,0BAA0BP,CAAU,EAExE,GAAIO,EAAuB,OAAS,GAAMA,EAAuB,CAAC,EAAE,OAAe,OAAQ,CACvF,MAAME,EAAgBF,EAAuB,CAAC,EAAE,OAG5C,KAAK,gBAAkBE,GACvB,KAAK,YAAYA,CAAa,CAEtC,MAEQ,KAAK,eACL,KAAK,WAAA,EAKb,KAAK,iBAAiB,QAAQT,CAAU,CAC5C,OAAS1H,EAAO,CACZ,QAAQ,MAAM,wCAAyCA,CAAK,CAChE,CACJ,CAKQ,YAAYd,EAA8B,CAC9C,GAAI,CAEA,KAAK,WAAA,EAEL,KAAK,cAAgBA,EAGrB,UAAWwB,KAAY,KAAK,yBACxBA,EAASxB,CAAM,EAIf,KAAK,OAAO,WAAa,IACzB,KAAK,aAAe,OAAO,WAAW,IAAM,CAC5C,EAAG,KAAK,OAAO,UAAU,EAEjC,OAASc,EAAO,CACZ,QAAQ,MAAM,sCAAuCA,CAAK,CAC9D,CACJ,CAKQ,YAAmB,CACvB,GAAI,CACI,KAAK,eACL,aAAa,KAAK,YAAY,EAC9B,KAAK,aAAe,GAGxB,KAAK,cAAgB,KAGrB,UAAWU,KAAY,KAAK,yBACxBA,EAAS,IAAI,CAErB,OAASV,EAAO,CACZ,QAAQ,MAAM,sCAAuCA,CAAK,CAC9D,CACJ,CAKU,aAAad,EAAqC,CACxD,GAAI,CAEA,GAAI,CAACA,GAAU,CAAC,KAAK,qBAAqBA,CAAM,EAC5C,OAGJ,IAAIkJ,EAA0C,KAG9C,MAAM/H,EAAQ,KAAK,gBAAgB,QAAQnB,CAAM,EAC7CmB,EAAQ,IACR,KAAK,gBAAgB,OAAOA,EAAO,CAAC,EACpC+H,EAAmBlJ,GAGnB,KAAK,gBAAgB,KAAKA,CAAM,EAIpC,UAAWwB,KAAY,KAAK,0BACxBA,EAAS0H,EAAmB,KAAOlJ,CAAM,EAI7C,GAAIkJ,EACA,UAAW1H,KAAY,KAAK,4BACxBA,EAAS0H,CAAgB,CAGrC,OAASpI,EAAO,CACZ,QAAQ,MAAM,sCAAuCA,CAAK,CAC9D,CACJ,CAKQ,gBAAuB,CAC3B,GAAI,CACA,MAAMqI,EAAoB,CAAC,GAAG,KAAK,eAAe,EAClD,KAAK,gBAAkB,CAAA,EAGvB,UAAWD,KAAoBC,EAC3B,UAAW3H,KAAY,KAAK,4BACxBA,EAAS0H,CAAgB,CAGrC,OAASpI,EAAO,CACZ,QAAQ,MAAM,oCAAqCA,CAAK,CAC5D,CACJ,CAKQ,sBAA6B,CACjC,GAAI,CACA,KAAK,WAAA,EACL,KAAK,eAAA,CACT,OAASA,EAAO,CACZ,QAAQ,MAAM,sCAAuCA,CAAK,CAC9D,CACJ,CAKO,kBAA0C,CAC7C,OAAO,KAAK,aAChB,CAKO,oBAAuC,CAC1C,MAAO,CAAC,GAAG,KAAK,eAAe,CACnC,CAKO,mBAAmBsI,EAAwC,CAC9D,GAAI,CACA,KAAK,OAAO,gBAAkBA,EAG9B,KAAK,qBAAuB,KAAK,SAAS,KAAK,YAAY,KAAK,IAAI,EAAG,KAAK,OAAO,eAAe,EAGlG,KAAK,qBAAA,EACL,KAAK,oBAAA,CACT,OAAStI,EAAO,CACZ,QAAQ,MAAM,sCAAuCA,CAAK,CAC9D,CACJ,CAKO,WAAWuI,EAAwB,CACtC,GAAI,CACA,KAAK,OAAO,QAAUA,EAEjBA,GACD,KAAK,qBAAA,CAEb,OAASvI,EAAO,CACZ,QAAQ,MAAM,uCAAwCA,CAAK,CAC/D,CACJ,CAKO,WAAoC,CACvC,MAAO,CAAE,GAAG,KAAK,MAAA,CACrB,CAKO,aAAawI,EAAkD,CAClE,GAAI,CACA,MAAMC,EAAqB,KAAK,OAAO,gBACvC,KAAK,OAAS,CAAE,GAAG,KAAK,OAAQ,GAAGD,CAAA,EAG/BA,EAAU,kBAAoB,QAAaA,EAAU,kBAAoBC,IACzE,KAAK,qBAAuB,KAAK,SAAS,KAAK,YAAY,KAAK,IAAI,EAAG,KAAK,OAAO,eAAe,EAE1G,OAASzI,EAAO,CACZ,QAAQ,MAAM,oCAAqCA,CAAK,CAC5D,CACJ,CACJ,CC/uBO,MAAM0I,WAAiBlI,EAA6B,CAiGvD,YAAYmI,EAAkB,CAE1B,MAAA,EAlGI1J,EAAA,eACAA,EAAA,eAEDA,EAAA,iBACAA,EAAA,cACAA,EAAA,eAKCA,EAAA,8BAAwD,MAKxDA,EAAA,gCAA6E,MAC7EA,EAAA,+BAA4E,MAC5EA,EAAA,kCAA+E,MAM/EA,EAAA,8BAA8D,MAC9DA,EAAA,yBAA6B,IAM7BA,EAAA,eAAqB,CAAA,GACrBA,EAAA,0BAAmC,KAMnCA,EAAA,mBAAuB,IACvBA,EAAA,gBAAmB,GACnBA,EAAA,eAAkB,GAMlBA,EAAA,kBAAqB,GACrBA,EAAA,qBAAwB,GAGxBA,EAAA,qCAAgD,MAGhDA,EAAA,iBAAoB,GACpBA,EAAA,kBAAqB,GAGrBA,EAAA,yBACAA,EAAA,4BACAA,EAAA,eAAkB,IAGlBA,EAAA,iBAAoB,IACpBA,EAAA,qBAAwB,IAAO,IAC/BA,EAAA,qBAAwB,GAGxBA,EAAA,uBAA0B,GAC1BA,EAAA,qBAAwB,GAGzBA,EAAA,2BAAwD,MAGvDA,EAAA,yBAA8C,MAG9CA,EAAA,wBACAA,EAAA,2BACAA,EAAA,kCAGAA,EAAA,wBAGAA,EAAA,yBAAkF,CAAA,GAGlFA,EAAA,uBAA0B,KAC1BA,EAAA,yBAAsC,CAAA,GAMtCA,EAAA,uBAMJ,KAAK,OAAS0J,EACd,KAAK,OAASA,EAAO,QACrB,KAAK,kBAAoBA,EAAO,qBAChC,KAAK,SAAW,IAAIzB,EAAM,cAAc,CACpC,OAAQ,KAAK,OACb,UAAW,KAAK,OAAO,UACvB,MAAO,KAAK,OAAO,MACnB,gBAAgB,YAChB,QAAS,GACT,MAAO,GACP,uBAAwB,KAAK,OAAO,8BAAgC,EAAA,CACvE,EACD,KAAK,SAAS,UAAU,QAAU,GAClC,KAAK,SAAS,UAAU,KAAOA,EAAM,iBACrC,KAAK,SAAS,YAAcA,EAAM,sBAClC,KAAK,SAAS,oBAAsB,EACpC,KAAK,MAAQ,IAAIA,EAAM,MACvB,KAAK,MAAM,WAAayB,EAAO,gBAAkB,IAAIzB,EAAM,MAAMyB,EAAO,eAAe,EAAI,KAC3F,KAAK,OAAS,IAAIzB,EAAM,kBACpB,GACA,KAAK,OAAO,OACZ,GACA,GAAA,EAIAyB,EAAO,mBACP,KAAK,uBAAyB,IAAI1B,EAAuB0B,EAAO,gBAAgB,EAEhF,KAAK,+BAAA,EACL,KAAK,UAAU,KAAK,sBAAsB,GAI1C,KAAK,oBACL,KAAK,uBAAyB,IAAIhJ,GAA6B,IAAI,GAIvE,KAAK,mBAAA,EAGL,KAAK,eAAiB,KAAK,mBAAmB,KAAK,IAAI,EACvD,OAAO,iBAAiB,SAAU,KAAK,cAAc,EAGrD,KAAK,iBAAmB,IAAIwE,GAAkBtC,GAAQ,CAElD,MAAM+G,EAAW,KAAK,mBAAmB,QAAA,EAOzC,GANAA,EAAS,IAAM/G,EACf,KAAK,KAAK,kBAAmB+G,CAAQ,EAErC,KAAK,mBAAmB,QAAQA,CAAQ,EAGpC,KAAK,QAAU,IAAM/G,EAAM,GAAI,CAE/B,MAAMgH,EAAY,KAAK,0BAA0B,QAAA,EACjDA,EAAU,WAAahH,EACvBgH,EAAU,YAAc,KAAK,QAC7B,KAAK,KAAK,mBAAoBA,CAAS,EAEvC,KAAK,0BAA0B,QAAQA,CAAS,CACpD,CACA,KAAK,QAAUhH,CACnB,CAAC,EAED,KAAK,oBAAsB,IAAI2C,GAG3BmE,EAAO,8BACP,KAAK,oBAAsB,IAAItD,GAA0B,CACrD,iBAAkB,GAClB,iBAAkB,GAAA,CACrB,EACD,KAAK,UAAU,KAAK,mBAAmB,GAIvCsD,EAAO,8BACP,KAAK,kBAAoB,IAAI1C,GAAkB,IAAI,EACnD,KAAK,kBAAkB,MAAA,GAI3B,KAAK,gBAAkB,IAAIlF,EACvB,KAAO,CAAE,UAAW,EAAG,UAAW,CAAA,GACjCI,GAAQ,CAAEA,EAAI,UAAY,EAAGA,EAAI,UAAY,CAAG,EACjD,EAAA,EAGJ,KAAK,mBAAqB,IAAIJ,EAC1B,KAAO,CAAE,IAAK,IACbI,GAAQ,CAAEA,EAAI,IAAM,CAAG,EACxB,EAAA,EAGJ,KAAK,0BAA4B,IAAIJ,EACjC,KAAO,CAAE,WAAY,EAAG,YAAa,CAAA,GACpCI,GAAQ,CAAEA,EAAI,WAAa,EAAGA,EAAI,YAAc,CAAG,EACpD,EAAA,EAIJ,KAAK,gBAAkB,IAAIkC,EAC/B,CAKQ,yBAAmC,CACvC,OAAI,KAAK,gCAAkC,KAChC,KAAK,8BAYT,EACX,CAKQ,oBAA2B,CAC/B,MAAM/C,EAAQ,OAAO,WACfC,EAAS,OAAO,YAGtB,GAAI,KAAK,YAAcD,GAAS,KAAK,aAAeC,EAChD,OAGJ,KAAK,UAAYD,EACjB,KAAK,WAAaC,EAGlB,KAAK,OAAO,IAAI,IAAID,EAAOC,CAAM,EACjC,KAAK,OAAO,OAASD,EAAQC,EAE7B,KAAK,SAAS,QAAQD,EAAOC,CAAM,EAGnC,IAAIuI,EACA,KAAK,0BACLA,EAAM,KAAK,IAAI,EAAG,OAAO,gBAAgB,EAEzCA,EAAM,KAAK,IAAI,IAAK,OAAO,gBAAgB,EAI3C,KAAK,SAAS,cAAA,IAAoBA,GAClC,KAAK,SAAS,cAAcA,CAAG,EAInC,KAAK,SAAS,UAAU,QAAU,GAClC,KAAK,SAAS,UAAU,KAAO5B,EAAM,iBACrC,KAAK,SAAS,YAAcA,EAAM,sBAClC,KAAK,SAAS,oBAAsB,IAGpC,KAAK,OAAO,OAAS,KAAK,OAAO,OACjC,KAAK,OAAO,uBAAA,CAChB,CAMQ,oBAA2B,CAC/B,KAAK,mBAAA,EACL,KAAK,KAAK,eAAgB,CACtB,MAAO,OAAO,WACd,OAAQ,OAAO,WAAA,CAClB,CACL,CAKO,OAAc,CACb,KAAK,cAET,KAAK,YAAc,GACnB,KAAK,SAAW,YAAY,IAAA,EAC5B,KAAK,cAAgB,KAAK,SAC1B,KAAK,QAAU,sBAAsB,KAAK,WAAW,KAAK,IAAI,CAAC,EAG/D,KAAK,iBAAiB,MAAA,EAGtB,KAAK,KAAK,eAAgB,CAAE,UAAW,KAAK,SAAU,EAC1D,CAKO,MAAa,CACX,KAAK,cAEV,KAAK,YAAc,GACf,KAAK,UACL,qBAAqB,KAAK,OAAO,EACjC,KAAK,QAAU,GAInB,KAAK,iBAAiB,KAAA,EAGtB,KAAK,KAAK,cAAe,CAAE,UAAW,YAAY,IAAA,EAAO,EAC7D,CAKQ,WAAW6B,EAAoB,CACnC,GAAI,CAAC,KAAK,YAAa,OAIvB,GADgBA,EAAO,KAAK,cACd,KAAK,gBAEf,KAAK,kBACD,KAAK,iBAAmB,KAAK,eAAe,CAC5C,KAAK,QAAU,sBAAsB,KAAK,WAAW,KAAK,IAAI,CAAC,EAC/D,MACJ,CAGJ,KAAK,gBAAkB,EACvB,KAAK,cAAgBA,EAErB,MAAMxD,EAAY,KAAK,KAAKwD,EAAO,KAAK,UAAY,IAAM,IAAK,EAC/D,KAAK,SAAWA,EAChB,KAAK,iBAAiBA,CAAI,EAG1B,MAAMC,EAAa,KAAK,gBAAgB,QAAA,EACxCA,EAAW,UAAYzD,EACvByD,EAAW,UAAYD,EACvB,KAAK,KAAK,eAAgBC,CAAU,EAEpC,KAAK,gBAAgB,QAAQA,CAAU,EAGvC,KAAK,oBAAoB,MAAM,aAAa,EAE5C,KAAK,YAAY,EAAE,EAAE,EAGrB,KAAK,wBAAwB,aAAa,EAC1C,KAAK,cAAczD,CAAS,EAC5B,KAAK,wBAAwB,aAAcA,CAAS,EAGpD,KAAK,YAAA,EAEL,KAAK,wBAAwB,cAAc,EAG3C,KAAK,oBAAoB,IAAI,aAAa,EAG1C,KAAK,gBAAgB,eAAe,QAAS,IAAM,CACnD,CAAC,EACD,KAAK,QAAU,sBAAsB,KAAK,WAAW,KAAK,IAAI,CAAC,CACnE,CAMQ,iBAAiBwD,EAAoB,CAIzC,GAHA,KAAK,aAGDA,EAAO,KAAK,eAAiB,IAAM,CACnC,MAAMlH,EAAM,KAAK,MAAO,KAAK,WAAa,KAASkH,EAAO,KAAK,cAAc,EAGvEH,EAAW,KAAK,mBAAmB,QAAA,EACzCA,EAAS,IAAM/G,EACf,KAAK,KAAK,kBAAmB+G,CAAQ,EAErC,KAAK,mBAAmB,QAAQA,CAAQ,EAExC,KAAK,WAAa,EAClB,KAAK,cAAgBG,CACzB,CACJ,CAKQ,YAAYE,EAA6B,CAE7C,KAAK,wBAAwB,cAAeA,CAAa,CAC7D,CAKQ,cAAc1D,EAAyB,CAE3C,MAAM2D,EAA6B,CAAA,EAEnC,UAAW9J,KAAU,KAAK,QAAS,CAE/B,MAAM+J,EAAc/J,EAAO,MACrBgK,EAAehK,EAAO,OAG5B,GAAI,CAAC,KAAK,eAAe,IAAIA,CAAM,GAAK+J,EACpC,GAAI,CACA,MAAM/F,EAAS+F,EAAY,KAAK/J,CAAM,EAClCgE,aAAkB,QAClBA,EAAO,KAAK,IAAM,CACd,KAAK,eAAe,IAAIhE,CAAM,CAClC,CAAC,EAAE,MAAMY,GAAS,CACd,QAAQ,MAAM,gCAAiCA,CAAK,CACxD,CAAC,EAED,KAAK,eAAe,IAAIZ,CAAM,CAEtC,OAASY,EAAO,CACZ,QAAQ,MAAM,gCAAiCA,CAAK,CACxD,CAIAoJ,GAAgB,KAAK,eAAe,IAAIhK,CAAM,GAC9C8J,EAAgB,KAAK9J,CAAM,CAEnC,CAGA,UAAWA,KAAU8J,EACjB,GAAI,CAEA,KAAK,oBAAoB,MAAM,UAAU9J,EAAO,MAAQ,SAAS,EAAE,EACnEA,EAAO,OAAQ,KAAKA,EAAQmG,CAAS,EAErC,KAAK,oBAAoB,IAAI,UAAUnG,EAAO,MAAQ,SAAS,EAAE,CACrE,OAASY,EAAO,CACZ,QAAQ,MAAM,iCAAkCA,CAAK,CACzD,CAER,CAKQ,wBAAwBqJ,EAAuBC,EAAiB,CAEpE,KAAK,kBAAkB,OAAS,EAGhC,UAAWlK,KAAU,KAAK,QAAS,CAC/B,MAAMmK,EAAenK,EAAOiK,CAAM,EAC9BE,GAAgB,OAAOA,GAAiB,YACxC,KAAK,kBAAkB,KAAK,CAAE,OAAAnK,EAAQ,OAAAiK,EAAQ,IAAAC,EAAK,CAE3D,CAGA,UAAWxF,KAAQ,KAAK,kBACpB,GAAI,CAEA,KAAK,oBAAoB,MAAM,UAAUA,EAAK,OAAO,MAAQ,SAAS,IAAIA,EAAK,MAAM,EAAE,EACnFA,EAAK,MAAQ,OACZA,EAAK,OAAOA,EAAK,MAAM,EAA+B,KAAKA,EAAK,OAAQA,EAAK,GAAG,EAEhFA,EAAK,OAAOA,EAAK,MAAM,EAAiB,KAAKA,EAAK,MAAM,EAG7D,KAAK,oBAAoB,IAAI,UAAUA,EAAK,OAAO,MAAQ,SAAS,IAAIA,EAAK,MAAM,EAAE,CACzF,OAAS9D,EAAO,CACZ,QAAQ,MAAM,mBAAmB8D,EAAK,MAAM,WAAY9D,CAAK,CACjE,CAER,CAKQ,aAAoB,CACpB,KAAK,mBAAqB,KAAK,uBAC/B,KAAK,uBAAuB,OAAA,EAE5B,KAAK,SAAS,OAAO,KAAK,MAAO,KAAK,MAAM,CAEpD,CAQO,mBACHoF,EACA7B,EACAgC,EACI,CAEJ,QAASiE,EAAI,EAAGA,EAAIpE,EAAQ,OAAQoE,GAAK,KAAK,gBAAiB,CAC3D,MAAMrE,EAAQC,EAAQ,MAAMoE,EAAG,KAAK,IAAIA,EAAI,KAAK,gBAAiBpE,EAAQ,MAAM,CAAC,EAGjF,sBAAsB,IAAM,CACxB,UAAWlG,KAAUiG,EACjB5B,EAASrE,EAAQqG,CAAS,CAElC,CAAC,CACL,CACJ,CAMO,kBAAkBrG,EAA8B,CACnD,KAAK,kBAAkB,KAAKA,CAAM,CACtC,CAOO,yBACHqE,EACAgC,EACI,CACJ,KAAK,mBAAmB,KAAK,kBAAmBhC,EAAUgC,CAAS,EAEnE,KAAK,kBAAkB,OAAS,CACpC,CAEO,iBAAiBkE,EAAyB,QAC7CvJ,EAAA,KAAK,yBAAL,MAAAA,EAA6B,kBAAkBuJ,EACnD,CAEO,kBAAkBA,EAA2B,CAChDA,EAAU,QAAQpK,GAAQ,QACtBa,EAAA,KAAK,yBAAL,MAAAA,EAA6B,kBAAkBb,EACnD,CAAC,CACL,CAKO,UAAUD,EAAuB,CAKpC,GAJAA,EAAO,KAAO,KAAK,MACfA,aAAkBJ,GAClBI,EAAO,YAAY,IAAI,EAEvBA,EAAO,MACP,GAAI,CACAA,EAAO,MAAM,KAAKA,CAAM,CAC5B,OAASY,EAAO,CACZ,QAAQ,MAAM,gCAAiCA,CAAK,CACxD,CAEJ,GAAIZ,EAAO,SACP,GAAI,CACAA,EAAO,SAAS,KAAKA,CAAM,CAC/B,OAASY,EAAO,CACZ,QAAQ,MAAM,mCAAoCA,CAAK,CAC3D,CAEJ,KAAK,QAAQ,KAAKZ,CAAM,EACxB,KAAK,KAAK,eAAgB,CAAE,OAAAA,CAAA,CAAQ,CACxC,CAKO,aAAaA,EAAuB,CACvC,GAAIA,EAAO,UACP,GAAI,CACAA,EAAO,UAAU,KAAKA,CAAM,CAChC,OAASY,EAAO,CACZ,QAAQ,MAAM,oCAAqCA,CAAK,CAC5D,CAEJ,GAAIZ,EAAO,QACP,GAAI,CACAA,EAAO,QAAQ,KAAKA,CAAM,CAC9B,OAASY,EAAO,CACZ,QAAQ,MAAM,kCAAmCA,CAAK,CAC1D,CAEJ,KAAK,eAAe,OAAOZ,CAAM,EACjC,MAAMiB,EAAQ,KAAK,QAAQ,QAAQjB,CAAM,EACrCiB,IAAU,IACV,KAAK,QAAQ,OAAOA,EAAO,CAAC,EAEhC,KAAK,KAAK,iBAAkB,CAAE,OAAAjB,CAAA,CAAQ,CAC1C,CAKO,SAAyB,CAC5B,OAAO,IAAI8H,EAAM,QACb,KAAK,SAAS,WAAW,MACzB,KAAK,SAAS,WAAW,MAAA,CAEjC,CAKO,cAAcvD,EAAqB,CACtC,KAAK,SAAS,cAAcA,CAAK,CACrC,CAKO,QAAQkE,EAA2B,CACtC,KAAK,SAAS,QAAQA,EAAK,EAAGA,EAAK,CAAC,CACxC,CAKO,QAAe,CAClB,KAAK,mBAAA,CACT,CAKO,sBAA6B,CAC3B,KAAK,yBACN,KAAK,uBAAyB,IAAIlI,GAA6B,IAAI,GAEvE,KAAK,kBAAoB,GACzB,KAAK,uBAAuB,OAAA,EAC5B,KAAK,uBAAuB,cAAe,OAAO,gBAAiB,EACnE,KAAK,KAAK,yBAA0B,EAAE,CAC1C,CAKO,uBAA8B,CACjC,KAAK,kBAAoB,GACrB,KAAK,wBACL,KAAK,uBAAuB,QAAA,EAEhC,KAAK,KAAK,0BAA2B,EAAE,CAC3C,CAKO,yBAAmC,CACtC,OAAO,KAAK,mBAAqB,KAAK,yBAA2B,IACrE,CAKO,2BAAiE,CACpE,OAAO,KAAK,sBAChB,CAOO,sBAAsBF,EAAWC,EAAwB,GAAY,CACpE,KAAK,uBACL,KAAK,uBAAuB,QAAQD,EAAMC,CAAY,EAEtD,QAAQ,KAAK,kFAAkF,CAEvG,CAMO,yBAAyBD,EAAiB,CACzC,KAAK,wBACL,KAAK,uBAAuB,WAAWA,CAAI,CAEnD,CAKO,SAAgB,iBAEnB,KAAK,KAAA,EAGL,OAAO,oBAAoB,SAAU,KAAK,cAAc,EAGxD,UAAWL,KAAU,KAAK,QACtB,KAAK,aAAaA,CAAM,EAI5B,KAAK,QAAU,CAAA,EACf,KAAK,eAAe,MAAA,EAGhB,KAAK,yBACL,KAAK,uBAAuB,QAAA,EAC5B,KAAK,uBAAyB,MAIlC,KAAK,SAAS,QAAA,EAGd,KAAK,MAAA,EAGL,KAAK,oBAAoB,MAAA,GAGxBsK,GAAAxJ,EAAA,KAAK,iBAAwB,QAA7B,MAAAwJ,EAAA,KAAAxJ,IACAyJ,GAAAC,EAAA,KAAK,oBAA2B,QAAhC,MAAAD,EAAA,KAAAC,IACAC,GAAAC,EAAA,KAAK,2BAAkC,QAAvC,MAAAD,EAAA,KAAAC,GAGD,KAAK,gBAAgB,MAAA,EAGrB,KAAK,kBAAkB,OAAS,CACpC,CAKO,oBAAqB,CACxB,MAAO,CACH,SAAU,KAAK,iBAAiB,YAAA,EAChC,YAAa,KAAK,oBAAoB,cAAA,CAAc,CAE5D,CAKO,aAAajI,EAAmB,CACnC,KAAK,UAAYA,EACjB,KAAK,cAAgB,IAAOA,CAChC,CAMO,4BAA4BnB,EAAyD,CACxF,KAAK,yBAA2BA,EAG5B,KAAK,wBACL,KAAK,uBAAuB,4BAA4BA,CAAQ,CAExE,CAMO,8BAA8BA,EAAyD,CAC1F,KAAK,2BAA6BA,EAG9B,KAAK,wBACL,KAAK,uBAAuB,8BAA8BA,CAAQ,CAE1E,CAMO,2BAA2BA,EAAyD,CACvF,KAAK,wBAA0BA,EAG3B,KAAK,wBACL,KAAK,uBAAuB,2BAA2BA,CAAQ,CAEvE,CAKO,2BAA2D,CAC9D,OAAO,KAAK,sBAChB,CAKO,0BAA0BiI,EAA+F,CACxH,KAAK,uBACL,KAAK,uBAAuB,aAAaA,CAAM,GAG/C,KAAK,uBAAyB,IAAI1B,EAAuB0B,CAAM,EAE/D,KAAK,+BAAA,EACL,KAAK,UAAU,KAAK,sBAAsB,EAElD,CAKO,mBAAyB,CAC5B,OAAI,KAAK,kBACE,KAAK,kBAAkB,UAAA,EAE3B,IACX,CAKO,4BAAuC,CAC1C,OAAI,KAAK,kBACE,KAAK,kBAAkB,gCAAA,EAE3B,CAAA,CACX,CAKQ,gCAAuC,CACvC,KAAK,yBAEL,KAAK,uBAAuB,4BAA6BzJ,GAAkC,CAEvF,KAAK,KAAK,uBAAwB,CAAE,OAAAA,CAAA,CAAQ,EAGxC,KAAK,0BACL,KAAK,yBAAyBA,CAAM,CAE5C,CAAC,EAGD,KAAK,uBAAuB,8BAA+BA,GAAkC,CAEzF,KAAK,KAAK,yBAA0B,CAAE,OAAAA,CAAA,CAAQ,EAG1C,KAAK,4BACL,KAAK,2BAA2BA,CAAM,CAE9C,CAAC,EAGD,KAAK,uBAAuB,2BAA4BA,GAAkC,CAEtF,KAAK,KAAK,sBAAuB,CAAE,OAAAA,CAAA,CAAQ,EAGvC,KAAK,yBACL,KAAK,wBAAwBA,CAAM,CAE3C,CAAC,EAET,CACJ,CC15BA,SAAS6K,GAAa1K,EAAc2K,EAAyC,CACzE,MAAMC,EAAS,IAAI/C,EAAM,kBAAkB,GAAI8C,EAAQ,GAAK,GAAI,EAChE,OAAAC,EAAO,KAAO5K,EACP4K,CACX,CAEO,MAAMC,CAAa,CAItB,OAAO,SAAS7K,EAAc8K,EAA2B,CACrD,GAAI,KAAK,OAAO,IAAIA,EAAU,IAAI,EAC9B,MAAM,IAAI,MAAM,UAAUA,EAAU,IAAI,kBAAkB,EAE9D,KAAK,OAAO,IAAIA,EAAU,KAAMA,CAAS,CAC7C,CAEA,OAAO,aAAa9K,EAAyB,CACzC,GAAI,CAAC,KAAK,IAAIA,CAAI,EAAG,CAEjB,MAAM+G,EAAQ,IAAIc,EAAM,MACxBd,EAAM,KAAO/G,EACb,MAAM8K,EAAuB,CACzB,KAAA9K,EACA,MAAA+G,EACA,OAAQ2D,GAAa1K,EAAO,SAAU,OAAO,WAAa,OAAO,WAAW,EAC5E,QAAS,CAAA,EACT,kBAAmB,IACnB,mBAAoB,GAAI,EAE5B,YAAK,SAASA,EAAM8K,CAAS,EACtBA,CACX,CACA,OAAO,KAAK,OAAO,IAAI9K,CAAI,CAC/B,CAEA,OAAO,SAASA,EAA2B,CACvC,GAAI,CAAC,KAAK,IAAIA,CAAI,EACd,MAAM,IAAI,MAAM,UAAUA,CAAI,aAAa,EAE/C,OAAO,KAAK,OAAO,IAAIA,CAAI,EAAG,KAClC,CAEA,OAAO,IAAIA,EAAuB,CAC9B,OAAO,KAAK,OAAO,IAAIA,CAAI,CAC/B,CAEA,OAAO,UAAUA,EAAyB,CACtC,GAAI,CAAC,KAAK,IAAIA,CAAI,EACd,MAAM,IAAI,MAAM,UAAUA,CAAI,aAAa,EAE/C,YAAK,gBAAkBA,EACvB+K,EAAe,UAAY,KAAK,OAAO,IAAI/K,CAAI,EAC/C+K,EAAe,MAAQA,EAAe,UAAU,MAChDA,EAAe,OAAQA,EAAe,UAAU,OACzCA,EAAe,SAC1B,CAEA,OAAO,eAAe/J,EAA0B,CAC5C,GAAIA,EAAQ,GAAKA,GAAS,KAAK,OAAO,KAClC,MAAM,IAAI,MAAM,wBAAwBA,CAAK,EAAE,EAEnD,YAAK,gBAAkB,MAAM,KAAK,KAAK,OAAO,MAAM,EAAEA,CAAK,EAC3D+J,EAAe,UAAY,MAAM,KAAK,KAAK,OAAO,QAAQ,EAAE/J,CAAK,EACjE+J,EAAe,MAAQA,EAAe,UAAU,MAChDA,EAAe,OAAQA,EAAe,UAAU,OACzCA,EAAe,SAC1B,CAEA,OAAO,YAAY/K,EAAoB,CACnC,GAAI,CAAC,KAAK,IAAIA,CAAI,EACd,MAAM,IAAI,MAAM,UAAUA,CAAI,aAAa,EAE/C,KAAK,OAAO,OAAOA,CAAI,CAC3B,CAEA,OAAO,SAAgB,CACnB,KAAK,OAAO,MAAA,EACZ,KAAK,gBAAkB,EAC3B,CACJ,CAzEIJ,EADSiL,EACM,SAAiC,IAAI,KACpDjL,EAFSiL,EAEM,kBAA0B,ICLtC,MAAME,EAYT,CACA,SAAU,KACV,MAAO,KACP,UAAW,KACX,OAAQ,KACR,MAAO,EACP,QAAS,EACT,YAAa,GACb,qBAAsB,GACtB,SAAU,KACV,WAAY,KACZ,WAAY,IAChB,EAMO,SAASC,IAAiC,CAC7C,MAAO,CAAC,CAACD,EAAe,OAAS,CAAC,CAACA,EAAe,QAAU,CAAC,CAACA,EAAe,QACjF,CAMO,SAASE,GAAYjL,EAA0B,CAClD,GAAI6K,EAAa,IAAI7K,CAAI,EAErB,OAAO6K,EAAa,SAAS7K,CAAI,EAErC,MAAM+G,EAAQ,IAAIc,EAAM,MACxBd,EAAM,KAAO/G,EACb,MAAM8K,EAAsB,CACxB,KAAA9K,EACA,MAAA+G,EACA,OAAQ2D,GAAa1K,EAAO,SAAU,OAAO,WAAW,OAAO,WAAW,EAC1E,QAAS,CAAA,EACT,kBAAmB,IACnB,mBAAoB,GAAI,EAE5B,OAAA6K,EAAa,SAAS7K,EAAK8K,CAAS,EAC7B/D,CACX,CAKO,SAASmE,IAAe,CACvB,CAACH,EAAe,UAAY,CAACA,EAAe,OAAS,CAACA,EAAe,SACrEA,EAAe,sBAAwBA,EAAe,SACtDA,EAAe,SAAS,OAAA,EAExBA,EAAe,SAAS,OAAOA,EAAe,MAAOA,EAAe,MAAM,EAElF,CAOO,SAASL,GAAa1K,EAAcmL,EAA8C,CACrF,MAAMP,EAAS,IAAI/C,EAAM,kBAAkB,GAAIsD,EAAa,GAAK,GAAI,EACrE,OAAAP,EAAO,KAAO5K,EACP4K,CACX,CAKO,SAASQ,IAA6B,CACrC,CAACL,EAAe,UAAY,CAACA,EAAe,OAAS,CAACA,EAAe,SACzEA,EAAe,SAAW,IAAIxK,iBAAewK,EAAe,QAAQ,EACpEA,EAAe,WAAa,IAAItK,EAAAA,WAAWsK,EAAe,MAAOA,EAAe,MAAM,EAC1F,CAKO,SAASM,IAA2B,CACvC,GAAI,CAACN,EAAe,SAAU,OAC9B,MAAMxC,EAASwC,EAAe,SAAS,WACvCxC,EAAO,iBAAiB,mBAAqBnH,GAAiB,CAC1DA,EAAM,eAAA,EACN2J,EAAe,YAAc,GAC7B,QAAQ,KAAK,oDAAoD,CACrE,EAAG,EAAK,EACRxC,EAAO,iBAAiB,uBAAwB,IAAM,CAClDwC,EAAe,YAAc,GAC7B,QAAQ,KAAK,yDAAyD,CAC1E,EAAG,EAAK,CACZ,CC7FO,SAASO,GAAUC,EAAmBC,EAA0CzL,EAAwB,CAC3G,GAAI,CAAC8K,EAAa,IAAIU,CAAS,EAC3B,MAAM,IAAI,MAAM,UAAUA,CAAS,aAAa,EAGpD,MAAMT,EAAYD,EAAa,aAAaU,CAAS,EAGrD,GAAIC,aAA0B3D,EAAM,SAAU,CAC1C,GAAI,CAAC9H,EACD,MAAM,IAAI,MAAM,8DAA8D,EAG7E+K,EAAU,cAAc,IAAIU,CAAc,GAC3CV,EAAU,cAAc,IAAIU,EAAgB,CAAA,CAAE,EAElDV,EAAU,cAAc,IAAIU,CAAc,EAAG,KAAKzL,CAAM,CAC5D,MAGI+K,EAAU,QAAQ,KAAKU,CAAyB,CAExD,CAgBO,SAASC,GAAaF,EAAmBC,EAA0CzL,EAAwB,CAC9G,GAAI,CAAC8K,EAAa,IAAIU,CAAS,EAC3B,MAAM,IAAI,MAAM,UAAUA,CAAS,aAAa,EAEpD,MAAMT,EAAYD,EAAa,aAAaU,CAAS,EAGrD,GAAIC,aAA0B3D,EAAM,SAAU,CAC1C,GAAI,CAAC9H,EACD,MAAM,IAAI,MAAM,kEAAkE,EAItF,GAAI,CAAC+K,EAAU,cAAc,IAAIU,CAAc,EAC3C,MAAM,IAAI,MAAM,kCAAkC,EAGtD,MAAME,EAAUZ,EAAU,cAAc,IAAIU,CAAc,EACpDG,EAAcD,EAAQ,QAAQ3L,CAAM,EAE1C,GAAI4L,IAAgB,GAChB,MAAM,IAAI,MAAM,4BAA4B,EAIhD,GAAI,OAAO5L,EAAO,SAAY,WAC1B,GAAI,CACAA,EAAO,QAAA,CACX,OAASY,EAAO,CACZ,QAAQ,KAAK,+BAAgCA,CAAK,CACtD,CAIJ+K,EAAQ,OAAOC,EAAa,CAAC,EAGzBD,EAAQ,SAAW,GACnBZ,EAAU,cAAc,OAAOU,CAAc,CAErD,KAEK,CACD,MAAMG,EAAcb,EAAU,QAAQ,QAAQU,CAAyB,EAEvE,GAAIG,IAAgB,GAChB,MAAM,IAAI,MAAM,2BAA2B,EAG/C,MAAM5L,EAAS+K,EAAU,QAAQa,CAAW,EAG5C,GAAI,OAAO5L,EAAO,SAAY,WAC1B,GAAI,CACAA,EAAO,QAAA,CACX,OAASY,EAAO,CACZ,QAAQ,KAAK,+BAAgCA,CAAK,CACtD,CAIJmK,EAAU,QAAQ,OAAOa,EAAa,CAAC,CAC3C,CACJ,CChHO,MAAMC,WAA+BjM,CAAW,CAyBnD,YAAYsG,EAUT,CACC,MAAA,EAlCIrG,EAAA,gBAAmB,MACnBA,EAAA,oBAAuB,MACvBA,EAAA,qBAAwB,MACxBA,EAAA,aAAgB,SAChBA,EAAA,eAAkB,GAClBA,EAAA,oBAAuB,GACvBA,EAAA,kBAAqB,GACrBA,EAAA,oBAAwB,IACxBA,EAAA,kBAA4B,IAAIiI,EAAM,QAAQ,GAAK,EAAG,GAGtDjI,EAAA,iBAA8B,MAC9BA,EAAA,gBAAwC,MACxCA,EAAA,uBAAoC,MAGpCA,EAAA,yBAAoD,MACpDA,EAAA,yBAAoD,MACpDA,EAAA,iBAA+B,MAC/BA,EAAA,qBAA6C,MAC7CA,EAAA,qBAA6C,MAC7CA,EAAA,uBAA2B,IAc/B,KAAK,KAAO,yBAERqG,IAEIA,EAAQ,WAAa,SAAW,KAAK,SAAWA,EAAQ,UACxDA,EAAQ,eAAiB,SAAW,KAAK,aAAeA,EAAQ,cAChEA,EAAQ,gBAAkB,SAAW,KAAK,cAAgBA,EAAQ,eAClEA,EAAQ,QAAU,SAAW,KAAK,MAAQA,EAAQ,OAClDA,EAAQ,UAAY,SAAW,KAAK,QAAUA,EAAQ,SACtDA,EAAQ,eAAiB,SAAW,KAAK,aAAeA,EAAQ,cAChEA,EAAQ,aAAe,SAAW,KAAK,WAAaA,EAAQ,YAC5DA,EAAQ,eAAiB,SAAW,KAAK,aAAeA,EAAQ,cAEhEA,EAAQ,aAAe,aAAgB,WAAW,KAAKA,EAAQ,UAAU,EAErF,CAKO,OAAc,CAGrB,CAEO,cAAcX,EAAqC,CACtD,GAAI,CAEA,GAAI,KAAK,WACL,KAAK,SAAWA,EAEZ,KAAK,UAAU,CAiBf,GAhBA,KAAK,UAAY,IAAIuG,YAAU,KAAK,SAAU,CAC1C,SAAU,KAAK,SACf,aAAc,KAAK,aACnB,cAAe,KAAK,cACpB,MAAO,IAAIhE,EAAM,MAAM,KAAK,KAAK,CAAA,CACpC,EAGD,KAAK,gBAAkB,KAAK,UAC5B,KAAK,gBAAgB,SAAS,IAAI,EAAG,EAAG,CAAC,EAEzC,KAAK,gBAAgB,QAAU,GAC/B,KAAK,gBAAgB,KAAO,aAIxB,KAAK,iBAAmB,KAAK,gBAAgB,SAAU,CACvD,MAAMiE,EAAW,KAAK,gBAAgB,SAClC,MAAM,QAAQA,CAAQ,EACtBA,EAAS,QAAQ1D,GAAO,EAChBA,aAAeP,EAAM,mBAAqBO,aAAeP,EAAM,kBAC/DO,EAAI,YAAc,GAClBA,EAAI,QAAU,KAAK,QAE3B,CAAC,GAEG0D,aAAoBjE,EAAM,mBAAqBiE,aAAoBjE,EAAM,kBACzEiE,EAAS,YAAc,GACvBA,EAAS,QAAU,KAAK,QAGpC,CAII,KAAK,OACL,KAAK,MAAM,IAAI,KAAK,eAAe,EAEvC,QAAQ,IAAI,8EAA8E,CAC9F,CAER,OAASnL,EAAO,CACZ,QAAQ,MAAM,8DAA+DA,CAAK,CACtF,CACJ,CAKQ,iBAAwB,CAC5B,GAAI,CAEA,GAAI,KAAK,WACL,KAAK,SAAW,IAAIkH,EAAM,cAAc,IAAM,GAAI,EAG9C,KAAK,UAAU,CAiBf,GAhBA,KAAK,UAAY,IAAIgE,YAAU,KAAK,SAAU,CAC1C,SAAU,KAAK,SACf,aAAc,KAAK,aACnB,cAAe,KAAK,cACpB,MAAO,IAAIhE,EAAM,MAAM,KAAK,KAAK,CAAA,CACpC,EAGD,KAAK,gBAAkB,KAAK,UAC5B,KAAK,gBAAgB,SAAS,IAAI,EAAG,EAAG,CAAC,EACzC,KAAK,gBAAgB,SAAS,EAAI,CAAC,KAAK,GAAK,EAC7C,KAAK,gBAAgB,QAAU,GAC/B,KAAK,gBAAgB,KAAO,aAIxB,KAAK,iBAAmB,KAAK,gBAAgB,SAAU,CACvD,MAAMiE,EAAW,KAAK,gBAAgB,SAClC,MAAM,QAAQA,CAAQ,EACtBA,EAAS,QAAQ1D,GAAO,EAChBA,aAAeP,EAAM,mBAAqBO,aAAeP,EAAM,kBAC/DO,EAAI,YAAc,GAClBA,EAAI,QAAU,KAAK,QAE3B,CAAC,GAEG0D,aAAoBjE,EAAM,mBAAqBiE,aAAoBjE,EAAM,kBACzEiE,EAAS,YAAc,GACvBA,EAAS,QAAU,KAAK,QAGpC,CAII,KAAK,OACL,KAAK,MAAM,IAAI,KAAK,eAAe,EAEvC,QAAQ,IAAI,8EAA8E,CAC9F,CAER,OAASnL,EAAO,CACZ,QAAQ,MAAM,8DAA+DA,CAAK,CACtF,CACJ,CAKO,sBAA6B,CAChC,GAAI,CAAC,KAAK,SAAU,OAGpB,KAAK,kBAAoB,IAAIkH,EAAM,kBAAkB,KAAK,aAAc,KAAK,aAAa,EAC1F,KAAK,kBAAoB,IAAIA,EAAM,kBAAkB,KAAK,aAAc,KAAK,aAAa,EAG1F,KAAK,cAAgB,IAAIA,EAAM,eAAe,CAC1C,KAAM,yBACN,SAAU,CACN,SAAU,CAAE,MAAO,IAAA,EACnB,EAAG,CAAE,MAAO,KAAK,WAAa,KAAK,YAAA,CAAa,EAEpD,aAAckE,EAAAA,qBAAqB,aACnC,eAAgBA,EAAAA,qBAAqB,cAAA,CACxC,EAED,KAAK,cAAgB,IAAIlE,EAAM,eAAe,CAC1C,KAAM,uBACN,SAAU,CACN,SAAU,CAAE,MAAO,IAAA,EACnB,EAAG,CAAE,MAAO,KAAK,WAAa,KAAK,aAAA,CAAc,EAErD,aAAcmE,EAAAA,mBAAmB,aACjC,eAAgBA,EAAAA,mBAAmB,cAAA,CACtC,EAGD,MAAMC,EAAoB,IAAIpE,EAAM,cAAc,EAAG,CAAC,EACtD,KAAK,UAAY,IAAIA,EAAM,KAAKoE,EAAmB,KAAK,aAAa,EACrE,KAAK,UAAU,QAAU,EAC7B,CAKQ,UAAUnM,EAAqC,CACnD,GAAI,CAAC,KAAK,WAAa,CAAC,KAAK,mBAAqB,CAAC,KAAK,mBACpD,CAAC,KAAK,eAAiB,CAAC,KAAK,eAAiB,CAAC,KAAK,UACpD,OAIJ,GAAI,KAAK,cAAgB,EAAG,CAExB,GAAI,KAAK,UAAU,SAAU,CACzB,MAAMgM,EAAW,KAAK,UAAU,SAC5BA,EAAS,UAAYA,EAAS,SAAS,WACvCA,EAAS,SAAS,SAAS,MAAQ,KAAK,UAAU,kBAAkB,QAE5E,CACA,MACJ,CAGA,MAAMI,EAAmB,KAAK,UAAU,gBAAA,EAAkB,QAiB1D,GAdA,KAAK,cAAc,SAAS,SAAS,MAAQA,EAC7C,KAAK,cAAc,SAAS,EAAE,MAAQ,KAAK,WAAa,KAAK,aAAe,KAAK,aAEjFpM,EAAS,gBAAgB,KAAK,iBAAiB,EAC/CA,EAAS,OAAO,KAAK,UAAW,KAAK,MAAM,EAG3C,KAAK,cAAc,SAAS,SAAS,MAAQ,KAAK,kBAAkB,QACpE,KAAK,cAAc,SAAS,EAAE,MAAQ,KAAK,WAAa,KAAK,cAAgB,KAAK,aAElFA,EAAS,gBAAgB,KAAK,iBAAiB,EAC/CA,EAAS,OAAO,KAAK,UAAW,KAAK,MAAM,EAGvC,KAAK,UAAU,SAAU,CACzB,MAAMgM,EAAW,KAAK,UAAU,SAC5BA,EAAS,UAAYA,EAAS,SAAS,WACvCA,EAAS,SAAS,SAAS,MAAQ,KAAK,kBAAkB,QAElE,CAEA,KAAK,gBAAkB,EAC3B,CAKO,iBAAiB7F,EAUf,CACL,IAAIkG,EAAgB,GAGhBlG,EAAQ,eAAiB,QAAaA,EAAQ,eAAiB,KAAK,eACpE,KAAK,aAAeA,EAAQ,aAC5BkG,EAAgB,IAEhBlG,EAAQ,gBAAkB,QAAaA,EAAQ,gBAAkB,KAAK,gBACtE,KAAK,cAAgBA,EAAQ,cAC7BkG,EAAgB,IAIhBlG,EAAQ,WAAa,SAAW,KAAK,SAAWA,EAAQ,UACxDA,EAAQ,QAAU,SAAW,KAAK,MAAQA,EAAQ,OAClDA,EAAQ,UAAY,SAAW,KAAK,QAAUA,EAAQ,SACtDA,EAAQ,eAAiB,SACzB,KAAK,aAAeA,EAAQ,aAC5B,KAAK,gBAAkB,IAEvBA,EAAQ,aAAe,SACvB,KAAK,WAAaA,EAAQ,WAC1B,KAAK,gBAAkB,IAEvBA,EAAQ,eAAiB,SAAW,KAAK,aAAeA,EAAQ,cAChEA,EAAQ,aAAe,aAAgB,WAAW,KAAKA,EAAQ,UAAU,EAGzEkG,GACA,KAAK,QAAA,EACL,KAAK,gBAAA,EACL,KAAK,qBAAA,IAGL,KAAK,0BAAA,EAEL,KAAK,qBAAA,EAEb,CAKQ,sBAA6B,CAC7B,KAAK,eAAiB,KAAK,gBAC3B,KAAK,cAAc,SAAS,EAAE,MAAQ,KAAK,WAAa,KAAK,aAAe,KAAK,aACjF,KAAK,cAAc,SAAS,EAAE,MAAQ,KAAK,WAAa,KAAK,cAAgB,KAAK,aAClF,KAAK,gBAAkB,GAE/B,CAKQ,2BAAkC,CAEtC,GAAI,CAAC,KAAK,iBAAmB,CAAC,KAAK,gBAAgB,SAAU,OAE7D,MAAML,EAAW,KAAK,gBAAgB,SAClC,MAAM,QAAQA,CAAQ,EACtBA,EAAS,QAAQ1D,GAAO,EAChBA,aAAeP,EAAM,mBAAqBO,aAAeP,EAAM,kBAC/DO,EAAI,YAAc,GAClBA,EAAI,QAAU,KAAK,QAE3B,CAAC,GAEG0D,aAAoBjE,EAAM,mBAAqBiE,aAAoBjE,EAAM,kBACzEiE,EAAS,YAAc,GACvBA,EAAS,QAAU,KAAK,QAGpC,CAKO,gBAAgBM,EAAwB,CAC3C,KAAK,aAAe,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGA,CAAQ,CAAC,EACrD,KAAK,gBAAkB,GACvB,KAAK,qBAAA,EACL,QAAQ,IAAI,kDAAkD,KAAK,YAAY,EAAE,CACrF,CAKO,cAAcC,EAAsB,CACvC,KAAK,WAAa,KAAK,IAAI,EAAGA,CAAM,EACpC,KAAK,gBAAkB,GACvB,KAAK,qBAAA,EACL,QAAQ,IAAI,gDAAgD,KAAK,UAAU,EAAE,CACjF,CAKO,cAAcpM,EAAWC,EAAiB,CAC7C,KAAK,WAAW,IAAID,EAAGC,CAAC,EACxB,QAAQ,IAAI,iDAAiDD,CAAC,KAAKC,CAAC,GAAG,CAC3E,CAKO,uBAAuBgJ,EAAwB,CAClD,KAAK,aAAeA,EACpB,KAAK,gBAAkB,GACvB,QAAQ,IAAI,0CAA0CA,EAAU,UAAY,UAAU,EAAE,CAC5F,CAKO,WAAWoD,EAAuB,CACrC,KAAK,QAAUA,EACf,KAAK,0BAAA,CACT,CAKO,SAASC,EAAqB,CAGjC,GAFA,KAAK,MAAQA,EAET,KAAK,WAAa,KAAK,UAAU,SAAU,CAC3C,MAAMT,EAAW,KAAK,UAAU,SAC5B,CAAC,MAAM,QAAQA,CAAQ,GACtBA,EAAiB,UACjBA,EAAiB,SAAS,QAC1BA,EAAiB,SAAS,MAAM,MAAQ,IAAIjE,EAAM,MAAM0E,CAAK,EAEtE,CACJ,CAKO,oBAAuC,CAC1C,OAAO,KAAK,eAChB,CAKO,QAAe,CAEtB,CAKO,aAAoB,CAEnB,KAAK,UAAY,KAAK,iBACtB,KAAK,UAAU,KAAK,SAAS,QAAQ,CAE7C,CAKO,SAAgB,CAEf,KAAK,iBAAmB,KAAK,OAC7B,KAAK,MAAM,OAAO,KAAK,eAAe,EAItC,KAAK,UACL,KAAK,SAAS,QAAA,EAId,KAAK,WAAa,OAAO,KAAK,UAAU,SAAY,YACpD,KAAK,UAAU,QAAA,EAIf,KAAK,mBACL,KAAK,kBAAkB,QAAA,EAEvB,KAAK,mBACL,KAAK,kBAAkB,QAAA,EAEvB,KAAK,eACL,KAAK,cAAc,QAAA,EAEnB,KAAK,eACL,KAAK,cAAc,QAAA,EAEnB,KAAK,WACL,KAAK,UAAU,SAAS,QAAA,EAG5B,KAAK,UAAY,KACjB,KAAK,gBAAkB,KACvB,KAAK,SAAW,KAChB,KAAK,kBAAoB,KACzB,KAAK,kBAAoB,KACzB,KAAK,UAAY,KACjB,KAAK,cAAgB,KACrB,KAAK,cAAgB,IACzB,CACJ,CC1ZO,MAAMC,WAA4B7M,CAAW,CA0EhD,YAAYsG,EAA+B,CACvC,MAAA,EA1EJrG,EAAA,YAAO,uBAECA,EAAA,eAGAA,EAAA,qBAAsC,MAGtCA,EAAA,iBAAiC,MAGjCA,EAAA,mBAA0C,MAG1CA,EAAA,gBAAW,IAGXA,EAAA,mBAAc,IAEdA,EAAA,aAA6B,MAE7BA,EAAA,iBAAiC,MAEjCA,EAAA,mBAAoC,MAGpCA,EAAA,eAA4D,CAChE,OAAQ,CACJ,cAAe,GACf,cAAe,IACf,YAAa,GACb,SAAU,IACV,UAAW,EAAA,EAEf,WAAY,CACR,cAAe,GACf,cAAe,IACf,YAAa,GACb,SAAU,IACV,UAAW,GAAA,EAEf,aAAc,CACV,WAAY,GACZ,gBAAiB,EACjB,cAAe,GACf,cAAe,IACf,YAAa,GACb,SAAU,GAAA,EAEd,OAAQ,CACJ,cAAe,GACf,cAAe,IACf,YAAa,GACb,gBAAiB,GACjB,cAAe,KAAK,GAAK,EACzB,cAAe,KAAK,GAAK,EAAI,EAC7B,SAAU,GAAA,EAEd,OAAQ,CACJ,cAAe,GACf,cAAe,IACf,YAAa,GACb,SAAU,IACV,UAAW,IACX,gBAAiB,CAAA,CACrB,GAWA,KAAK,OAAS,CACV,cAAe,GACf,cAAe,IACf,WAAY,GACZ,UAAW,EACX,UAAW,GACX,SAAU,EACV,aAAc,GACd,YAAa,GACb,WAAY,GACZ,gBAAiB,EACjB,YAAa,EACb,YAAa,IACb,cAAe,EACf,cAAe,KAAK,GACpB,gBAAiB,KACjB,gBAAiB,IACjB,OAAQ,IAAIiI,EAAM,QAAQ,EAAG,EAAG,CAAC,EACjC,GAAG5B,CAAA,CAEX,CAKgB,UAAiB,QAC7BpF,EAAA,MAAM,WAAN,MAAAA,EAAA,WACI,KAAK,gBACL,KAAK,cAAc,QAAU,GAErC,CAYA,MAAsB,OAAuB,QACzCA,EAAA,MAAM,QAAN,MAAAA,EAAA,WAEA,GAAI,CACA,KAAK,UAAY,KAAK,OACtB,KAAK,YAAc,KAAK,cAEpB,CAAC,KAAK,aAAe,KAAK,YAC1B,KAAK,YAAc,KAAK,UAAU,SAAS,MAAA,EAEnD,OAASF,EAAO,CACZ,QAAQ,KAAK,sCAAuCA,CAAK,CAC7D,CAEI,CAAC,KAAK,WAAa,CAAC,KAAK,YACzB,QAAQ,KAAK,2CAA2C,EAGxD,KAAK,oBAAA,CAEb,CAOgB,OAAOuF,EAAyB,YAC5CrF,EAAA,MAAM,SAAN,MAAAA,EAAA,UAAeqF,IAEX,CAAC,KAAK,WAAa,CAAC,KAAK,cACzB,KAAK,aAAA,EAIL,KAAK,eAAiB,KAAK,UAC3B,KAAK,cAAc,OAAA,GAIvBmE,EAAA,KAAK,QAAL,MAAAA,EAAY,UACZE,EAAA,KAAK,YAAL,MAAAA,EAAgB,QACpB,CAEgB,UAAiB,CAC7B,MAAM,SAAA,CACV,CAKgB,WAAkB,QAC9B1J,EAAA,MAAM,YAAN,MAAAA,EAAA,WACI,KAAK,gBACL,KAAK,cAAc,QAAU,GAErC,CAKgB,SAAgB,QAC5BA,EAAA,MAAM,UAAN,MAAAA,EAAA,WAEA,KAAK,cAAA,EAGD,KAAK,gBACL,KAAK,cAAc,QAAA,EACnB,KAAK,cAAgB,KAE7B,CASQ,cAAqB,CACzB,GAAI,CACK,KAAK,YACN,KAAK,UAAY,KAAK,QAGrB,KAAK,cACN,KAAK,YAAc,KAAK,eAIxB,KAAK,WAAa,KAAK,aAAe,CAAC,KAAK,eAC5C,KAAK,oBAAA,CAEb,OAASF,EAAO,CAEZ,QAAQ,KAAK,uCAAwCA,CAAK,CAC9D,CACJ,CAKQ,qBAA4B,CAChC,GAAI,CAAC,KAAK,WAAa,CAAC,KAAK,YAAa,CACtC,QAAQ,KAAK,iCAAiC,EAC9C,MACJ,CAEA,GAAI,CAEI,KAAK,eACL,KAAK,cAAc,QAAA,EAIvB,KAAK,cAAgB,IAAI8L,iBAAc,KAAK,UAAW,KAAK,YAAY,UAAU,EAGlF,KAAK,YAAA,CACT,OAAS9L,EAAO,CACZ,QAAQ,MAAM,2CAA4CA,CAAK,CACnE,CACJ,CAKQ,aAAoB,CACxB,GAAI,CAAC,KAAK,cAAe,OAEzB,MAAM+L,EAAW,KAAK,cAChBpD,EAAS,KAAK,OAGpBoD,EAAS,cAAgBpD,EAAO,cAChCoD,EAAS,cAAgBpD,EAAO,cAChCoD,EAAS,WAAapD,EAAO,WAC7BoD,EAAS,UAAYpD,EAAO,UAC5BoD,EAAS,UAAYpD,EAAO,UAC5BoD,EAAS,SAAWpD,EAAO,SAC3BoD,EAAS,aAAepD,EAAO,aAC/BoD,EAAS,YAAcpD,EAAO,YAC9BoD,EAAS,WAAapD,EAAO,WAC7BoD,EAAS,gBAAkBpD,EAAO,gBAGlCoD,EAAS,YAAcpD,EAAO,YAC9BoD,EAAS,YAAcpD,EAAO,YAG9BoD,EAAS,cAAgBpD,EAAO,cAChCoD,EAAS,cAAgBpD,EAAO,cAChCoD,EAAS,gBAAkBpD,EAAO,gBAClCoD,EAAS,gBAAkBpD,EAAO,gBAGlCoD,EAAS,OAAO,KAAKpD,EAAO,MAAM,EAClCoD,EAAS,OAAA,CACb,CAKA,eAAsB,CACd,KAAK,QACL,KAAK,MAAM,KAAA,EACX,KAAK,MAAQ,MAEb,KAAK,YACL,KAAK,UAAU,KAAA,EACf,KAAK,UAAY,MAErB,KAAK,YAAc,EACvB,CAKQ,kBAAkBC,EAA8BC,EAA4B3G,EAAuC,CACvH,GAAI,CAAC,KAAK,WAAa,CAAC,KAAK,cAAe,OAC5C,KAAK,cAAA,EACL,KAAK,YAAc,GACnB,MAAM4G,EAAgB,KAAK,UAAU,SAAS,MAAA,EACxCC,EAAc,KAAK,cAAc,OAAO,MAAA,EAC9C,KAAK,MAAQ,IAAIC,EAAM,MAAM,CAC3B,EAAGF,EAAc,EACjB,EAAGA,EAAc,EACjB,EAAGA,EAAc,EACjB,QAASC,EAAY,EACrB,QAASA,EAAY,EACrB,QAASA,EAAY,CAAA,CACtB,EACE,GAAG,CACF,EAAGH,EAAe,EAClB,EAAGA,EAAe,EAClB,EAAGA,EAAe,EAClB,QAASC,EAAa,EACtB,QAASA,EAAa,EACtB,QAASA,EAAa,CAAA,EACrB3G,EAAQ,QAAQ,EAClB,OAAO,KAAK,eAAeA,EAAQ,MAAM,CAAC,EAC1C,SAAUpG,GAAW,CACpB,KAAK,UAAW,SAAS,IAAIA,EAAO,EAAGA,EAAO,EAAGA,EAAO,CAAC,EACzD,KAAK,cAAe,OAAO,IAAIA,EAAO,QAASA,EAAO,QAASA,EAAO,OAAO,EAC7E,KAAK,cAAe,OAAA,CACtB,CAAC,EACA,WAAW,IAAM,CAChB,KAAK,YAAc,GACnB,KAAK,OAAO,OAAO,KAAK+M,CAAY,EACpC3G,EAAQ,WAAA,CACV,CAAC,EAEH,KAAK,MAAM,MAAA,CACf,CAEQ,eAAe+G,EAA4D,CAC/E,OAAQA,EAAA,CACN,IAAK,SACH,OAAOD,EAAM,OAAO,OAAO,KAC7B,IAAK,SACH,OAAOA,EAAM,OAAO,UAAU,GAChC,IAAK,UACH,OAAOA,EAAM,OAAO,UAAU,IAChC,IAAK,YACH,OAAOA,EAAM,OAAO,UAAU,MAChC,QACE,OAAOA,EAAM,OAAO,UAAU,KAAA,CAEtC,CAEQ,qBAAqBlN,EAAoC,CAC7D,MAAMoN,EAAM,IAAIpF,EAAM,KAGtB,OAAAhI,EAAO,SAAUyG,GAAU,CACvB,GAAKA,EAAqB,OAAQ,CAC9B,MAAM4G,EAAO5G,EACb,GAAI4G,EAAK,SAAU,CAEfA,EAAK,kBAAkB,GAAM,EAAK,EAClC,MAAM5H,EAAW4H,EAAK,SACtB,GAAI5H,EAAS,YACT2H,EAAI,MAAM3H,EAAS,YAAY,MAAA,EAAQ,aAAa4H,EAAK,WAAW,CAAC,MAClE,CACH,MAAMC,EAAc,IAAItF,EAAM,KAAA,EAAO,cAAcqF,CAAI,EACvDD,EAAI,MAAME,CAAW,CACzB,CACJ,CACJ,CACJ,CAAC,EAGGF,EAAI,WACJA,EAAI,cAAcpN,CAAM,EAGrBoN,CACX,CAEA,QAAe,CACX,KAAK,SAAW,GACZ,KAAK,gBACL,KAAK,cAAc,QAAU,GAErC,CAEA,SAAgB,CACZ,KAAK,SAAW,GACZ,KAAK,gBACL,KAAK,cAAc,QAAU,GAErC,CAEA,OAAc,CACN,KAAK,eACL,KAAK,cAAc,MAAA,CAE3B,CAEA,aAAa9D,EAA+C,CACxD,OAAO,OAAO,KAAK,OAAQA,CAAS,EACpC,KAAK,YAAA,CACT,CAEA,WAAiC,CAC7B,MAAO,CAAE,GAAG,KAAK,MAAA,CACrB,CAEA,YAAYiE,EAA8B,CACtC,MAAMC,EAAS,KAAK,QAAQD,CAAU,EAClCC,EACA,KAAK,aAAaA,CAAM,EAExB,QAAQ,KAAK,gCAAgCD,CAAU,EAAE,CAEjE,CAEA,YAA2B,CACvB,OAAO,OAAO,KAAK,KAAK,OAAO,CACnC,CAEA,gBAAgBT,EAAgC1G,EAA8B,CAE1E,MAAMqH,EAAgBX,GAAkB,KAAK,YAE7C,GAAIW,GAAiB,KAAK,WAAa,KAAK,cAAe,CAEvD,MAAMC,EAA6B,CAC/B,SAAU,IACV,SAAU,GACV,UAAW,IAAI1F,EAAM,QAAQ,EAAG,EAAG,CAAC,EAAE,UAAA,EACtC,OAAQ,GACR,OAAQ,YACR,WAAY,IAAM,CAAC,EACnB,KAAM,SACN,OAAQ,IAAIA,EAAM,QAAQ,EAAG,EAAG,CAAC,EACjC,GAAG5B,CAAA,EAIP,KAAK,cAAA,EACL,KAAK,YAAc,GAGnB,MAAM4G,EAAgB,KAAK,UAAU,SAAS,MAAA,EACxCC,EAAc,KAAK,cAAc,OAAO,MAAA,EAGxCU,EAAoBF,EAAc,MAAA,EAElCV,EAAe,IAAI/E,EAAM,QAAQ,EAAG,EAAG,CAAC,EAE9C,KAAK,UAAY,IAAIkF,EAAM,MAAM,CAC/B,EAAGF,EAAc,EACjB,EAAGA,EAAc,EACjB,EAAGA,EAAc,EACjB,QAASC,EAAY,EACrB,QAASA,EAAY,EACrB,QAASA,EAAY,CAAA,CACtB,EACE,GAAG,CACF,EAAGU,EAAkB,EACrB,EAAGA,EAAkB,EACrB,EAAGA,EAAkB,EACrB,QAASZ,EAAa,EACtB,QAASA,EAAa,EACtB,QAASA,EAAa,CAAA,EACrBW,EAAa,QAAQ,EACvB,OAAO,KAAK,eAAeA,EAAa,MAAM,CAAC,EAC/C,SAAU1N,GAAW,CACpB,KAAK,UAAW,SAAS,IAAIA,EAAO,EAAGA,EAAO,EAAGA,EAAO,CAAC,EACzD,KAAK,cAAe,OAAO,IAAIA,EAAO,QAASA,EAAO,QAASA,EAAO,OAAO,EAC7E,KAAK,cAAe,OAAA,CACtB,CAAC,EACA,WAAW,IAAM,OAChB,KAAK,YAAc,GACnB,KAAK,OAAO,OAAO,KAAK+M,CAAY,GACpC/L,EAAA0M,EAAa,aAAb,MAAA1M,EAAA,KAAA0M,EACF,CAAC,EAEH,KAAK,UAAU,MAAA,CACnB,MACI,QAAQ,KAAK,uCAAuC,CAE5D,CAQA,cAAc1N,EAAwBoG,EAAwB,GAAU,CACpE,GAAI,CAAC,KAAK,WAAa,CAAC,KAAK,cAAe,CACxC,QAAQ,KAAK,iCAAiC,EAC9C,MACJ,CAYA,MAAMwH,EAAe,CAAE,GAXwB,CAC3C,SAAU,IACV,SAAU,GACV,UAAW,IAAI5F,EAAM,QAAQ,EAAG,EAAG,CAAC,EAAE,UAAA,EACtC,OAAQ,GACR,OAAQ,YACR,WAAY,IAAM,CAAC,EACnB,KAAM,SACN,OAAQ,IAAIA,EAAM,QAAQ,EAAG,EAAG,CAAC,CAAA,EAGK,GAAG5B,CAAA,EAGvCkH,EAAc,KAAK,qBAAqBtN,CAAM,EAC9C6N,EAASP,EAAY,UAAU,IAAItF,EAAM,OAAS,EAClD8F,EAAOR,EAAY,QAAQ,IAAItF,EAAM,OAAS,EAGpD,IAAI8E,EACJ,MAAMiB,EAAeH,EAAa,QAAU,IAAI5F,EAAM,QAAQ,EAAG,EAAG,CAAC,EAG/DgG,EAAS,KAAK,IAAIF,EAAK,EAAGA,EAAK,EAAGA,EAAK,CAAC,EACxCG,EAAO,KAAK,UAAsC,KAAO,GACzDC,EAAeF,GAAU,EAAI,KAAK,IAAIhG,EAAM,UAAU,SAASiG,CAAG,EAAI,CAAC,GAAK,IAC5EE,EAAiBP,EAAa,WAAa,GAAKM,EAAeN,EAAa,SAElF,OAAQA,EAAa,KAAA,CACjB,IAAK,QACDd,EAAiBe,EAAO,MAAA,EAAQ,IAAI,IAAI7F,EAAM,QAAQ,EAAG,EAAG,CAAC,EAAE,eAAemG,CAAc,CAAC,EAAE,IAAIJ,CAAY,EAC/G,MACJ,IAAK,OACDjB,EAAiBe,EAAO,MAAA,EAAQ,IAAI,IAAI7F,EAAM,QAAQ,EAAG,EAAG,EAAE,EAAE,eAAemG,CAAc,CAAC,EAAE,IAAIJ,CAAY,EAChH,MACJ,IAAK,MACDjB,EAAiBe,EAAO,MAAA,EAAQ,IAAI,IAAI7F,EAAM,QAAQ,EAAG,EAAG,CAAC,EAAE,eAAemG,CAAc,CAAC,EAAE,IAAIJ,CAAY,EAC/G,MACJ,IAAK,SACDjB,EAAiBe,EAAO,MAAA,EAAQ,IAAI,IAAI7F,EAAM,QAAQ,EAAG,GAAI,CAAC,EAAE,eAAemG,CAAc,CAAC,EAAE,IAAIJ,CAAY,EAChH,MACJ,IAAK,OACDjB,EAAiBe,EAAO,MAAA,EAAQ,IAAI,IAAI7F,EAAM,QAAQ,GAAI,EAAG,CAAC,EAAE,eAAemG,CAAc,CAAC,EAAE,IAAIJ,CAAY,EAChH,MACJ,IAAK,QACDjB,EAAiBe,EAAO,MAAA,EAAQ,IAAI,IAAI7F,EAAM,QAAQ,EAAG,EAAG,CAAC,EAAE,eAAemG,CAAc,CAAC,EAAE,IAAIJ,CAAY,EAC/G,MACJ,IAAK,SACL,QACIjB,EAAiBe,EAAO,QAAQ,IAC5BD,EAAa,UAAU,MAAA,EAAQ,eAAeO,CAAc,CAAA,EAC9D,IAAIJ,CAAY,EAClB,KAAA,CAER,GAAI,CAACH,EAAa,OAAQ,CACtB,KAAK,UAAU,SAAS,KAAKd,CAAc,EAC3C,KAAK,cAAc,OAAO,KAAKe,CAAM,EACrC,KAAK,cAAc,OAAA,EACnBD,EAAa,WAAA,EACb,MACJ,CACA,KAAK,kBAAkBd,EAAgBe,EAAQD,CAAY,CAC/D,CAKA,mBAA0C,CACtC,OAAO,KAAK,UAAY,KAAK,UAAU,SAAS,QAAU,IAC9D,CAKA,mBAA0C,CACtC,OAAO,KAAK,cAAgB,KAAK,cAAc,OAAO,QAAU,IACpE,CAKA,gBAA0B,CACtB,OAAO,KAAK,WAChB,CAKA,YAAsB,CAClB,OAAO,KAAK,UAAY,KAAK,gBAAkB,IACnD,CAEA,aAAoC,CAChC,OAAO,KAAK,aAChB,CAMA,mBAAmBQ,EAA+B,CAC9C,KAAK,YAAcA,EAAS,MAAA,CAChC,CAKA,oBAA2C,CACvC,OAAO,KAAK,YAAc,KAAK,YAAY,QAAU,IACzD,CAKA,uBAA8B,CACtB,KAAK,YACL,KAAK,YAAc,KAAK,UAAU,SAAS,MAAA,EAEnD,CAOA,yBAAyBA,EAAyBC,EAA6B,CAC3E,KAAK,YAAcD,EAAS,MAAA,EAC5B,KAAK,OAAO,OAASC,EAAO,MAAA,EACxB,KAAK,gBACL,KAAK,cAAc,OAAO,KAAKA,CAAM,EACrC,KAAK,cAAc,OAAA,EAE3B,CACJ,CCjoBO,MAAMC,WAA4BxO,CAAW,CAahD,YAAYsG,EAA+B,CACvC,MAAA,EAbJrG,EAAA,YAAO,uBAGCA,EAAA,eACAA,EAAA,oBAA6C,MAC7CA,EAAA,iBAAoC,MACpCA,EAAA,uBAAgD,MAChDA,EAAA,gBAAoD,CAAE,KAAM,IAAA,GAC5DA,EAAA,aAA4B,MAC5BA,EAAA,oBAAmC,MACnCA,EAAA,sBAA0B,IAK9B,KAAK,OAAS,CACV,mBAAoB,GACpB,kBAAmB,SACnB,wBAAyB,QACzB,sBAAuB,EAEvB,gBAAiB,GACjB,eAAgB,SAChB,mBAAoB,IACpB,kBAAmB,CAAC,IAAK,EAAG,GAAG,EAC/B,gBAAiB,CAAC,EAAG,EAAG,CAAC,EACzB,eAAgB,KAAK,GAAK,EAC1B,kBAAmB,EACnB,eAAgB,EAChB,kBAAmB,EACnB,aAAc,aAEd,gBAAiB,CACb,QAAS,GACT,aAAc,KACd,cAAe,KACf,WAAY,EACZ,UAAW,EACX,MAAO,CAAA,EAGX,iBAAkB,GAClB,WAAY,GACZ,aAAc,KACd,gBAAiB,GACjB,GAAGqG,CAAA,CAEX,CAKgB,OAAc,QAC1BpF,EAAA,MAAM,QAAN,MAAAA,EAAA,WAGA,KAAK,aAAA,EAGD,KAAK,OAAO,oBACZ,KAAK,mBAAA,EAIL,KAAK,OAAO,iBACZ,KAAK,gBAAA,EAIL,KAAK,OAAO,YACZ,KAAK,YAAA,CAEb,CAKgB,OAAOqF,EAAyB,QAC5CrF,EAAA,MAAM,SAAN,MAAAA,EAAA,UAAeqF,GAGX,KAAK,iBACL,KAAK,gBAAgB,OAAA,EAIrB,KAAK,OAAS,KAAK,WACnB,KAAK,MAAM,SAAS,KAAK,KAAK,UAAU,QAAQ,CAExD,CAKQ,cAAqB,CACzB,GAAI,CACA,MAAMkI,EAAS,IAAIvG,EAAM,cAAA,EAAgB,QAAQ,YAAY,EACvDwG,EAAY,CAAC,aAAa,cAAc,oBAAoB,EAElE,QAAS,EAAI,EAAG,EAAIA,EAAU,OAAQ,IAAK,CACvC,MAAMC,EAAWD,EAAU,CAAC,EACtB5I,EAAU2I,EAAO,KAAKE,CAAQ,EACpC7I,EAAQ,UAAYoC,EAAM,aAC1BpC,EAAQ,UAAYoC,EAAM,aAC1BpC,EAAQ,gBAAkB,GAC1BA,EAAQ,WAAaoC,EAAM,eAC3B,KAAK,SAASyG,CAAQ,EAAI7I,CAC9B,CACJ,OAAS9E,EAAO,CACZ,QAAQ,MAAM,gCAAiCA,CAAK,CACxD,CACJ,CAKQ,oBAA2B,CAC/B,GAAI,CACI,KAAK,QACL,KAAK,aAAe,IAAIkH,EAAM,gBAC1B,KAAK,OAAO,kBACZ,KAAK,OAAO,wBACZ,KAAK,OAAO,qBAAA,EAEhB,KAAK,MAAM,IAAI,KAAK,YAAY,EAExC,OAASlH,EAAO,CACZ,QAAQ,MAAM,iCAAkCA,CAAK,CACzD,CACJ,CAKQ,iBAAwB,OAC5B,GAAI,CACA,GAAI,KAAK,MAAO,CACZ,KAAK,UAAY,IAAIkH,EAAM,UACvB,KAAK,OAAO,eACZ,KAAK,OAAO,kBAAA,EAIhB,KAAK,UAAU,SAAS,IACpB,KAAK,OAAO,kBAAkB,CAAC,EAC/B,KAAK,OAAO,kBAAkB,CAAC,EAC/B,KAAK,OAAO,kBAAkB,CAAC,CAAA,EAInC,KAAK,UAAU,MAAQ,KAAK,OAAO,eACnC,KAAK,UAAU,SAAW,KAAK,OAAO,kBACtC,KAAK,UAAU,MAAQ,KAAK,OAAO,eACnC,KAAK,UAAU,SAAW,KAAK,OAAO,kBAGlC,KAAK,OAAO,cAAgB,KAAK,SAAS,KAAK,OAAO,YAAY,IAClE,KAAK,UAAU,IAAM,KAAK,SAAS,KAAK,OAAO,YAAY,IAI3DhH,EAAA,KAAK,OAAO,kBAAZ,MAAAA,EAA6B,UAC7B,KAAK,UAAU,WAAa,GAC5B,KAAK,UAAU,OAAO,QAAQ,MAAQ,KAAK,OAAO,gBAAgB,cAAgB,KAClF,KAAK,UAAU,OAAO,QAAQ,OAAS,KAAK,OAAO,gBAAgB,eAAiB,KACpF,KAAK,UAAU,OAAO,OAAO,KAAO,KAAK,OAAO,gBAAgB,YAAc,EAC9E,KAAK,UAAU,OAAO,OAAO,IAAM,KAAK,OAAO,gBAAgB,WAAa,EAC5E,KAAK,UAAU,OAAO,MAAQ,KAAK,OAAO,gBAAgB,OAAS,GAIvE,MAAM0N,EAAe,IAAI1G,EAAM,SAC/B0G,EAAa,SAAS,IAClB,KAAK,OAAO,gBAAgB,CAAC,EAC7B,KAAK,OAAO,gBAAgB,CAAC,EAC7B,KAAK,OAAO,gBAAgB,CAAC,CAAA,EAEjC,KAAK,MAAM,IAAIA,CAAY,EAC3B,KAAK,UAAU,OAASA,EAExB,KAAK,MAAM,IAAI,KAAK,SAAS,EAGzB,KAAK,OAAO,kBAAoB,KAAK,YACrC,KAAK,gBAAkB,IAAI1G,EAAM,gBAAgB,KAAK,SAAS,EAC/D,KAAK,MAAM,IAAI,KAAK,eAAe,EAE3C,CACJ,OAASlH,EAAO,CACZ,QAAQ,MAAM,iCAAkCA,CAAK,CACzD,CACJ,CAKQ,aAAoB,CACxB,GAAI,CACI,KAAK,WAAa,KAAK,QAEvB,KAAK,aAAe,SAAS,cAAc,KAAK,EAChD,KAAK,aAAa,UAAY,oBAC9B,KAAK,aAAa,YAAc,KAAK,OAAO,cAAgB,KAC5D,KAAK,aAAa,MAAM,QAAU,WAClC,KAAK,aAAa,MAAM,WAAa,sBACrC,KAAK,aAAa,MAAM,MAAQ,UAChC,KAAK,aAAa,MAAM,aAAe,MACvC,KAAK,aAAa,MAAM,SAAW,OACnC,KAAK,aAAa,MAAM,WAAa,uCACrC,KAAK,aAAa,MAAM,WAAa,MACrC,KAAK,aAAa,MAAM,WAAa,SACrC,KAAK,aAAa,MAAM,WAAa,OACrC,KAAK,aAAa,MAAM,OAAS,sCACjC,KAAK,aAAa,MAAM,UAAY,gCACpC,KAAK,aAAa,MAAM,eAAiB,YACzC,KAAK,aAAa,MAAM,cAAgB,KAAK,OAAO,gBAAkB,OAAS,OAC/E,KAAK,aAAa,MAAM,OAAS,OACjC,KAAK,aAAa,MAAM,OAAS,KAAK,OAAO,gBAAkB,UAAY,UAGvE,KAAK,OAAO,kBACZ,KAAK,aAAa,iBAAiB,aAAc,IAAM,CACnD,KAAK,aAAc,MAAM,UAAY,cACrC,KAAK,aAAc,MAAM,UAAY,+BACzC,CAAC,EAED,KAAK,aAAa,iBAAiB,aAAc,IAAM,CACnD,KAAK,aAAc,MAAM,UAAY,WACrC,KAAK,aAAc,MAAM,UAAY,+BACzC,CAAC,EAGD,KAAK,aAAa,iBAAiB,QAAUS,GAAU,CACnDA,EAAM,gBAAA,EACN,KAAK,YAAA,CACT,CAAC,GAIL,KAAK,MAAQ,IAAIoN,cAAY,KAAK,YAAY,EAC9C,KAAK,MAAM,SAAS,KAAK,KAAK,UAAU,QAAQ,EAGhD,KAAK,MAAM,IAAI,KAAK,KAAK,EAEjC,OAAS7N,EAAO,CACZ,QAAQ,MAAM,gCAAiCA,CAAK,CACxD,CACJ,CAKO,yBAAyBwI,EAItB,CACD,KAAK,eAENA,EAAU,QAAU,QACpB,KAAK,aAAa,MAAM,IAAIA,EAAU,KAAK,EAG3CA,EAAU,cAAgB,QAC1B,KAAK,aAAa,YAAY,IAAIA,EAAU,WAAW,EAGvDA,EAAU,YAAc,SACxB,KAAK,aAAa,UAAYA,EAAU,WAEhD,CAKO,sBAAsB+E,EAAwC,CAC7D,KAAK,WACJ,KAAK,UAAU,OAA0B,SAAS,IAAIA,EAAO,CAAC,EAAGA,EAAO,CAAC,EAAGA,EAAO,CAAC,CAAC,CAE9F,CAKO,sBAAsB/E,EASnB,CACD,KAAK,YAENA,EAAU,QAAU,QACpB,KAAK,UAAU,MAAM,IAAIA,EAAU,KAAK,EAGxCA,EAAU,YAAc,SACxB,KAAK,UAAU,UAAYA,EAAU,WAGrCA,EAAU,WAAa,SACvB,KAAK,UAAU,SAAS,IACpBA,EAAU,SAAS,CAAC,EACpBA,EAAU,SAAS,CAAC,EACpBA,EAAU,SAAS,CAAC,CAAA,EAGpB,KAAK,OACL,KAAK,MAAM,SAAS,KAAK,KAAK,UAAU,QAAQ,GAIpDA,EAAU,SAAW,QACpB,KAAK,UAAU,OAA0B,SAAS,IAC/CA,EAAU,OAAO,CAAC,EAClBA,EAAU,OAAO,CAAC,EAClBA,EAAU,OAAO,CAAC,CAAA,EAItBA,EAAU,QAAU,SACpB,KAAK,UAAU,MAAQA,EAAU,OAGjCA,EAAU,WAAa,SACvB,KAAK,UAAU,SAAWA,EAAU,UAGpCA,EAAU,QAAU,SACpB,KAAK,UAAU,MAAQA,EAAU,OAGjCA,EAAU,WAAa,SACvB,KAAK,UAAU,SAAWA,EAAU,UAE5C,CAKO,4BAA4BA,EAOzB,CACD,KAAK,YAENA,EAAU,UAAY,SACtB,KAAK,UAAU,WAAaA,EAAU,SAGtCA,EAAU,eAAiB,SAC3B,KAAK,UAAU,OAAO,QAAQ,MAAQA,EAAU,cAGhDA,EAAU,gBAAkB,SAC5B,KAAK,UAAU,OAAO,QAAQ,OAASA,EAAU,eAGjDA,EAAU,aAAe,SACzB,KAAK,UAAU,OAAO,OAAO,KAAOA,EAAU,YAG9CA,EAAU,YAAc,SACxB,KAAK,UAAU,OAAO,OAAO,IAAMA,EAAU,WAG7CA,EAAU,QAAU,SACpB,KAAK,UAAU,OAAO,MAAQA,EAAU,OAEhD,CAKO,gBAAgBsF,EAAuB,CAC1C,KAAK,OAAO,aAAeA,EACvB,KAAK,eACL,KAAK,aAAa,YAAcA,EAExC,CAKO,cAAcC,EAAqB,CACtC,KAAK,OAAO,WAAaA,EACrB,KAAK,QACL,KAAK,MAAM,QAAUA,EAE7B,CAKO,mBAAmBC,EAA0B,CAChD,KAAK,OAAO,gBAAkBA,EAC1B,KAAK,eACL,KAAK,aAAa,MAAM,cAAgBA,EAAY,OAAS,OAC7D,KAAK,aAAa,MAAM,OAASA,EAAY,UAAY,UAEjE,CAKO,iBAAiB9O,EAA8B,CAC9C,KAAK,YACL,KAAK,UAAU,OAASA,EAEpB,KAAK,iBACL,KAAK,gBAAgB,OAAA,EAGjC,CAKO,cAAuC,CAC1C,OAAO,KAAK,SAChB,CAKO,oBAAmD,CACtD,OAAO,KAAK,eAChB,CAKO,uBAAuBqJ,EAAwB,CAC9CA,GAAW,CAAC,KAAK,aACjB,KAAK,mBAAA,EACE,CAACA,GAAW,KAAK,eACpB,KAAK,OACL,KAAK,MAAM,OAAO,KAAK,YAAY,EAEvC,KAAK,aAAe,KAE5B,CAKO,oBAAoBA,EAAwB,CAC3CA,GAAW,CAAC,KAAK,UACjB,KAAK,gBAAA,EACE,CAACA,GAAW,KAAK,YACpB,KAAK,QACL,KAAK,MAAM,OAAO,KAAK,SAAS,EAC5B,KAAK,kBACL,KAAK,MAAM,OAAO,KAAK,eAAe,EACtC,KAAK,gBAAkB,MAEvB,KAAK,QACL,KAAK,MAAM,OAAO,KAAK,KAAK,EAC5B,KAAK,MAAQ,KACb,KAAK,aAAe,OAG5B,KAAK,UAAY,MAIrB,KAAK,eAAiBA,EACtB,KAAK,iBAAA,CACT,CAKO,iBAAgD,CACnD,OAAO,KAAK,YAChB,CAKO,aAAoB,CACvB,KAAK,eAAiB,CAAC,KAAK,eAGxB,KAAK,eACL,KAAK,aAAa,QAAU,KAAK,gBAIjC,KAAK,YACL,KAAK,UAAU,QAAU,KAAK,eAC9B,KAAK,UAAU,UAAY,KAAK,eAAiB,KAAK,OAAO,mBAAqB,GAIlF,KAAK,kBACL,KAAK,gBAAgB,QAAU,KAAK,gBAIxC,KAAK,iBAAA,EAEL,QAAQ,IAAI,4BAA4B,KAAK,eAAiB,KAAO,IAAI,EAAE,CAC/E,CAKQ,kBAAyB,CACzB,KAAK,eAED,KAAK,gBACL,KAAK,aAAa,MAAM,WAAa,sBACrC,KAAK,aAAa,MAAM,OAAS,wCAEjC,KAAK,aAAa,MAAM,WAAa,4BACrC,KAAK,aAAa,MAAM,OAAS,uCAG7C,CAKgB,SAAgB,UAC5BrI,EAAA,MAAM,UAAN,MAAAA,EAAA,WAGI,KAAK,cAAgB,KAAK,OAC1B,KAAK,MAAM,OAAO,KAAK,YAAY,EAInC,KAAK,WAAa,KAAK,QAEnB,KAAK,UAAU,QAAU,KAAK,UAAU,SAAW,KAAK,OACxD,KAAK,MAAM,OAAO,KAAK,UAAU,MAAM,EAE3C,KAAK,MAAM,OAAO,KAAK,SAAS,GAIhC,KAAK,iBAAmB,KAAK,OAC7B,KAAK,MAAM,OAAO,KAAK,eAAe,EAItC,KAAK,OAAS,KAAK,OACnB,KAAK,MAAM,OAAO,KAAK,KAAK,EAIhC,UAAWwD,KAAO,KAAK,SACf,KAAK,SAASA,CAAG,KACjBgG,EAAA,KAAK,SAAShG,CAAG,IAAjB,MAAAgG,EAAoB,WAI5B,KAAK,aAAe,KACpB,KAAK,UAAY,KACjB,KAAK,gBAAkB,KACvB,KAAK,MAAQ,KACb,KAAK,aAAe,KACpB,KAAK,SAAW,CAAE,KAAM,IAAA,CAC5B,CACJ,CCrnBO,MAAMuE,WAA0BjP,CAAW,CAO9C,YAAYyM,EAAmBC,EAAiBwC,EAAoB,CAChE,MAAA,EANIjP,EAAA,gBAAmB,IACnBA,EAAA,cAAiB,IACjBA,EAAA,iBAAoB,KACpBA,EAAA,YAAY,MAIhB,KAAK,KAAO,oBAERwM,IAAa,SAAW,KAAK,SAAWA,GACxCC,IAAW,SAAW,KAAK,OAASA,GACpCwC,IAAc,SAAW,KAAK,UAAYA,EAClD,CAKgB,OAAc,QAC1BhO,EAAA,MAAM,QAAN,MAAAA,EAAA,WAGA,KAAK,WAAA,CACT,CAKgB,UAAiB,QAC7BA,EAAA,MAAM,WAAN,MAAAA,EAAA,WAGI,KAAK,MAAQ,KAAK,UACD,KAAK,SAAS,0BAAA,IAE3B,KAAK,SAAS,sBAAsB,KAAK,IAAI,EAC7C,QAAQ,IAAI,8DAA8D,EAGtF,CAKgB,WAAkB,QAC9BA,EAAA,MAAM,YAAN,MAAAA,EAAA,WAGI,KAAK,MAAQ,KAAK,WAClB,KAAK,SAAS,yBAAyB,KAAK,IAAI,EAChD,QAAQ,IAAI,mEAAmE,EAEvF,CAKgB,SAAgB,QAC5BA,EAAA,MAAM,UAAN,MAAAA,EAAA,WAGI,KAAK,MAAQ,KAAK,UAClB,KAAK,SAAS,yBAAyB,KAAK,IAAI,EAIhD,KAAK,MAAQ,OAAO,KAAK,KAAK,SAAY,aAC1C,KAAK,KAAK,QAAA,EACV,KAAK,KAAO,MAGhB,QAAQ,IAAI,0CAA0C,CAC1D,CAKQ,YAAmB,CACvB,GAAI,CACA,GAAI,KAAK,SAAU,CAEf,MAAM8M,EAAO,IAAI9F,EAAM,QAAQ,OAAO,WAAY,OAAO,WAAW,EACpE,QAAQ,IAAI,uDAAwD,CAChE,KAAM,GAAG8F,EAAK,CAAC,IAAIA,EAAK,CAAC,GACzB,SAAU,KAAK,SACf,OAAQ,KAAK,OACb,UAAW,KAAK,SAAA,CACnB,EAED,KAAK,KAAO,IAAImB,GAAAA,gBACZnB,EACA,KAAK,SACL,KAAK,OACL,KAAK,SAAA,EAIL,KAAK,SAAS,2BACd,KAAK,SAAS,sBAAsB,KAAK,IAAI,EAC7C,QAAQ,IAAI,8DAA8D,GAE1E,QAAQ,IAAI,2EAA2E,CAE/F,MACI,QAAQ,KAAK,qEAAqE,CAE1F,OAAShN,EAAO,CACZ,QAAQ,MAAM,mDAAoDA,CAAK,CAC3E,CACJ,CAKO,iBAAiByL,EAAmBC,EAAiBwC,EAA0B,CAC9EzC,IAAa,SAAW,KAAK,SAAWA,GACxCC,IAAW,SAAW,KAAK,OAASA,GACpCwC,IAAc,SAAW,KAAK,UAAYA,GAG1C,KAAK,OACDzC,IAAa,SAAW,KAAK,KAAK,SAAWA,GAC7CC,IAAW,SAAW,KAAK,KAAK,OAASA,GACzCwC,IAAc,SAAW,KAAK,KAAK,UAAYA,GAEnD,QAAQ,IAAI,gDAAiD,CACzD,SAAUzC,IAAa,OAAYA,EAAW,KAAK,SACnD,OAAQC,IAAW,OAAYA,EAAS,KAAK,OAC7C,UAAWwC,IAAc,OAAYA,EAAY,KAAK,SAAA,CACzD,EAET,CAKgB,OAAO3I,EAAyB,QAC5CrF,EAAA,MAAM,SAAN,MAAAA,EAAA,UAAeqF,EAInB,CAKgB,WAAWA,EAAyB,QAChDrF,EAAA,MAAM,aAAN,MAAAA,EAAA,UAAmBqF,EACvB,CAKO,SAAe,CAClB,OAAO,KAAK,IAChB,CACJ,CC1HO,MAAM6I,EAAN,MAAMA,UAA4BpP,CAAW,CAgBhD,YAAYsG,EAA+B,CACvC,MAAA,EAhBJrG,EAAA,YAAO,uBAGCA,EAAA,eACAA,EAAA,qBAA4C,MAC5CA,EAAA,2BAAkC,MAClCA,EAAA,aAA4B,MAC5BA,EAAA,oBAAmC,MACnCA,EAAA,sBAA0B,IAC1BA,EAAA,sBAA0B,IAE1BA,EAAA,kBAAiC,MACjCA,EAAA,mBAAkC,MAMtC,KAAK,OAAS,CACV,QAAS,GACT,MAAO,IAAIiI,EAAM,MAAM,SAAS,EAChC,UAAW,EACX,MAAO,GACP,OAAQ,GACR,SAAU,CAAC,EAAG,EAAG,CAAC,EAClB,SAAU,CAAC,EAAG,EAAG,CAAC,EAClB,iBAAkB,GAClB,WAAY,GACZ,aAAc,QACd,gBAAiB,GACjB,GAAG5B,CAAA,EAIP,KAAK,eAAiB,EAC1B,CAKgB,OAAc,QAC1BpF,EAAA,MAAM,QAAN,MAAAA,EAAA,WAGKkO,EAAoB,yBACrBC,GAAAA,yBAAyB,KAAA,EACzBD,EAAoB,uBAAyB,IAI7C,KAAK,OAAO,UACZ,KAAK,oBAAA,EAED,KAAK,gBACL,KAAK,cAAc,QAAU,GAC7B,KAAK,cAAc,UAAY,IAKnC,KAAK,OAAO,aACZ,KAAK,YAAA,EAEL,KAAK,iBAAA,EAEb,CAKgB,OAAO7I,EAAyB,QAC5CrF,EAAA,MAAM,SAAN,MAAAA,EAAA,UAAeqF,GAGX,KAAK,OAAS,KAAK,eACnB,KAAK,MAAM,SAAS,KAAK,KAAK,cAAc,QAAQ,CAE5D,CAKQ,qBAA4B,CAChC,GAAI,CACI,KAAK,QAEL,KAAK,cAAgB,IAAI2B,EAAM,cAC3B,KAAK,OAAO,MACZ,KAAK,OAAO,UACZ,KAAK,OAAO,MACZ,KAAK,OAAO,MAAA,EAIhB,KAAK,cAAc,SAAS,IACxB,KAAK,OAAO,SAAS,CAAC,EACtB,KAAK,OAAO,SAAS,CAAC,EACtB,KAAK,OAAO,SAAS,CAAC,CAAA,EAI1B,KAAK,cAAc,SAAS,IACxB,KAAK,OAAO,SAAS,CAAC,EACtB,KAAK,OAAO,SAAS,CAAC,EACtB,KAAK,OAAO,SAAS,CAAC,CAAA,EAG1B,KAAK,MAAM,IAAI,KAAK,aAAa,EAG7B,KAAK,OAAO,kBAAoB,KAAK,gBACrC,KAAK,oBAAsB,IAAIoH,uBAAoB,KAAK,aAAc,EAClE,KAAK,MAAO,IAAI,KAAK,mBAAmB,GAGxD,OAAStO,EAAO,CACZ,QAAQ,MAAM,mCAAoCA,CAAK,CAC3D,CACJ,CAKQ,aAAoB,CACxB,GAAI,CACA,GAAI,KAAK,eAAiB,KAAK,MAAO,CAElC,KAAK,aAAe,SAAS,cAAc,KAAK,EAChD,KAAK,aAAa,UAAY,wBAG9B,MAAMuO,EAAc,SAAS,cAAc,KAAK,EAChDA,EAAY,UAAY,uBACxBA,EAAY,MAAM,YAAc,MAChCA,EAAY,MAAM,MAAQ,OAC1BA,EAAY,MAAM,OAAS,OAC3BA,EAAY,MAAM,UAAY,UAG9B,MAAMC,EAAc,SAAS,cAAc,MAAM,EACjDA,EAAY,UAAY,uBACxBA,EAAY,YAAc,KAAK,OAAO,cAAgB,QAGtD,KAAK,aAAa,YAAYD,CAAW,EACzC,KAAK,aAAa,YAAYC,CAAW,EAGzC,KAAK,aAAa,MAAM,QAAU,OAClC,KAAK,aAAa,MAAM,WAAa,SACrC,KAAK,aAAa,MAAM,QAAU,WAClC,KAAK,aAAa,MAAM,WAAa,4BACrC,KAAK,aAAa,MAAM,MAAQ,UAChC,KAAK,aAAa,MAAM,aAAe,OACvC,KAAK,aAAa,MAAM,SAAW,OACnC,KAAK,aAAa,MAAM,WAAa,uCACrC,KAAK,aAAa,MAAM,WAAa,MACrC,KAAK,aAAa,MAAM,WAAa,SACrC,KAAK,aAAa,MAAM,WAAa,OACrC,KAAK,aAAa,MAAM,OAAS,qCACjC,KAAK,aAAa,MAAM,UAAY;AAAA;AAAA;AAAA,kBAIpC,KAAK,aAAa,MAAM,eAAiB,aAExC,KAAK,aAAa,MAAc,qBAAuB,aACxD,KAAK,aAAa,MAAM,cAAgB,KAAK,OAAO,gBAAkB,OAAS,OAC/E,KAAK,aAAa,MAAM,OAAS,OACjC,KAAK,aAAa,MAAM,OAAS,KAAK,OAAO,gBAAkB,UAAY,UAC3E,KAAK,aAAa,MAAM,SAAW,WACnC,KAAK,aAAa,MAAM,SAAW,SACnC,KAAK,aAAa,MAAM,WAAa,gBACrC,KAAK,aAAa,MAAM,QAAU,IAGlC,MAAMC,EAAgB,SAAS,cAAc,KAAK,EAClDA,EAAc,MAAM,SAAW,WAC/BA,EAAc,MAAM,IAAM,IAC1BA,EAAc,MAAM,KAAO,IAC3BA,EAAc,MAAM,MAAQ,IAC5BA,EAAc,MAAM,OAAS,IAC7BA,EAAc,MAAM,WAAa,8EACjCA,EAAc,MAAM,aAAe,OACnCA,EAAc,MAAM,OAAS,KAC7BA,EAAc,MAAM,cAAgB,OACpC,KAAK,aAAa,YAAYA,CAAa,EAG3C,MAAMC,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,MAAM,SAAW,WAC9BA,EAAa,MAAM,IAAM,IACzBA,EAAa,MAAM,KAAO,IAC1BA,EAAa,MAAM,MAAQ,IAC3BA,EAAa,MAAM,OAAS,IAC5BA,EAAa,MAAM,WAAa,kFAChCA,EAAa,MAAM,aAAe,OAClCA,EAAa,MAAM,OAAS,KAC5BA,EAAa,MAAM,cAAgB,OACnC,KAAK,aAAa,YAAYA,CAAY,EAGtC,KAAK,OAAO,iBAEZ,KAAK,aAAa,iBAAiB,QAAUjO,GAAU,CACnDA,EAAM,gBAAA,EACN,KAAK,YAAA,CACT,CAAC,EAIL,KAAK,MAAQ,IAAIoN,cAAY,KAAK,YAAY,EAC9C,KAAK,MAAM,SAAS,KAAK,KAAK,cAAc,QAAQ,EAGpD,KAAK,MAAM,IAAI,KAAK,KAAK,EAGzB,KAAK,gBAAA,CACT,CACJ,OAAS7N,EAAO,CACZ,QAAQ,MAAM,gCAAiCA,CAAK,CACxD,CACJ,CAKO,aAAawI,EAA+C,CAC1D,KAAK,gBAENA,EAAU,QAAU,QACpB,KAAK,cAAc,MAAM,IAAIA,EAAU,KAAK,EAG5CA,EAAU,YAAc,SACxB,KAAK,cAAc,UAAYA,EAAU,WAGzCA,EAAU,QAAU,SACpB,KAAK,cAAc,MAAQA,EAAU,OAGrCA,EAAU,SAAW,SACrB,KAAK,cAAc,OAASA,EAAU,QAGtCA,EAAU,WAAa,SACvB,KAAK,cAAc,SAAS,IACxBA,EAAU,SAAS,CAAC,EACpBA,EAAU,SAAS,CAAC,EACpBA,EAAU,SAAS,CAAC,CAAA,EAGpB,KAAK,OACL,KAAK,MAAM,SAAS,KAAK,KAAK,cAAc,QAAQ,GAIxDA,EAAU,WAAa,QACvB,KAAK,cAAc,SAAS,IACxBA,EAAU,SAAS,CAAC,EACpBA,EAAU,SAAS,CAAC,EACpBA,EAAU,SAAS,CAAC,CAAA,EAGhC,CAKO,gBAAgBsF,EAAuB,CAC1C,KAAK,OAAO,aAAeA,EACvB,KAAK,eACL,KAAK,aAAa,YAAcA,EAExC,CAKO,cAAcC,EAAqB,CACtC,KAAK,OAAO,WAAaA,EACrB,KAAK,OAAS,KAAK,cAEnB,KAAK,aAAa,MAAM,WAAa,2BAEjCA,GAEA,KAAK,MAAM,QAAU,GAErB,sBAAsB,IAAM,CACxB,KAAK,aAAc,MAAM,QAAU,GACvC,CAAC,IAGD,KAAK,aAAa,MAAM,QAAU,IAGlC,WAAW,IAAM,CACT,KAAK,QACL,KAAK,MAAM,QAAU,GAE7B,EAAG,GAAG,IAEH,KAAK,QAEZ,KAAK,MAAM,QAAUA,EAE7B,CAKO,mBAAmBC,EAA0B,CAChD,KAAK,OAAO,gBAAkBA,EAC1B,KAAK,eACL,KAAK,aAAa,MAAM,cAAgBA,EAAY,OAAS,OAC7D,KAAK,aAAa,MAAM,OAASA,EAAY,UAAY,UAEjE,CAKO,kBAA+C,CAClD,OAAO,KAAK,aAChB,CAKO,wBAAqC,CACxC,OAAO,KAAK,mBAChB,CAKO,WAAWzF,EAAwB,CAClCA,GAAW,CAAC,KAAK,cACjB,KAAK,oBAAA,EACE,CAACA,GAAW,KAAK,gBACpB,KAAK,QACL,KAAK,MAAM,OAAO,KAAK,aAAa,EAChC,KAAK,sBACL,KAAK,MAAM,OAAO,KAAK,mBAAmB,EAC1C,KAAK,oBAAsB,MAE3B,KAAK,QACL,KAAK,MAAM,OAAO,KAAK,KAAK,EAC5B,KAAK,MAAQ,KACb,KAAK,aAAe,OAG5B,KAAK,cAAgB,MAIzB,KAAK,eAAiBA,EACtB,KAAK,iBAAA,CACT,CAKO,aAAoB,CACvB,KAAK,eAAiB,CAAC,KAAK,eAGxB,KAAK,gBACL,KAAK,cAAc,QAAU,KAAK,eAClC,KAAK,cAAc,UAAY,KAAK,eAAiB,KAAK,OAAO,UAAY,GAI7E,KAAK,sBACL,KAAK,oBAAoB,QAAU,KAAK,gBAI5C,KAAK,iBAAA,EAEL,QAAQ,IAAI,+BAA+B,KAAK,eAAiB,KAAO,IAAI,EAAE,CAClF,CAKO,QAAe,CACb,KAAK,gBACN,KAAK,YAAA,CAEb,CAKO,SAAgB,CACf,KAAK,gBACL,KAAK,YAAA,CAEb,CAKO,WAAqB,CACxB,OAAO,KAAK,cAChB,CAKQ,kBAAyB,CACzB,KAAK,eAED,KAAK,gBACL,KAAK,aAAa,MAAM,WAAa,4BACrC,KAAK,aAAa,MAAM,OAAS,sCACjC,KAAK,aAAa,MAAM,UAAY;AAAA;AAAA;AAAA,oBAKpC,KAAK,aAAa,MAAM,WAAa,4BACrC,KAAK,aAAa,MAAM,OAAS,sCACjC,KAAK,aAAa,MAAM,UAAY;AAAA;AAAA;AAAA,mBAOxC,KAAK,gBAAA,EAEb,CAKQ,iBAAwB,CAC5B,GAAI,KAAK,aAAc,CACnB,MAAMgG,EAAc,KAAK,aAAa,cAAc,uBAAuB,EACvEA,IAEI,KAAK,eAELA,EAAY,IAAM,8FAIlBA,EAAY,IAAM,6FAElBA,EAAY,MAAM,QAAU,KAI5B,KAAK,eACLA,EAAY,MAAM,QAAU,IAE5BA,EAAY,MAAM,QAAU,MAGxC,CACJ,CAKgB,SAAgB,QAC5BrO,EAAA,MAAM,UAAN,MAAAA,EAAA,WAGI,KAAK,eAAiB,KAAK,OAC3B,KAAK,MAAM,OAAO,KAAK,aAAa,EAIpC,KAAK,qBAAuB,KAAK,OACjC,KAAK,MAAM,OAAO,KAAK,mBAAmB,EAI1C,KAAK,OAAS,KAAK,OACnB,KAAK,MAAM,OAAO,KAAK,KAAK,EAGhC,KAAK,cAAgB,KACrB,KAAK,oBAAsB,KAC3B,KAAK,MAAQ,KACb,KAAK,aAAe,IACxB,CACJ,EAneIjB,EAXSmP,EAWM,yBAAkC,IAX9C,IAAMO,EAANP,EC8vBP,SAASQ,GAAqBjK,EAAUkK,EAAW,CAElD,GAAKA,IAAaC,EAAAA,kBAEjB,eAAQ,KAAM,yFAAyF,EAChGnK,EAIR,GAAKkK,IAAaE,EAAAA,qBAAuBF,IAAaG,wBAAwB,CAE7E,IAAI3O,EAAQsE,EAAS,SAAQ,EAI7B,GAAKtE,IAAU,KAAO,CAErB,MAAM4O,EAAU,CAAA,EAEV3B,EAAW3I,EAAS,aAAc,UAAU,EAElD,GAAK2I,IAAa,OAAY,CAE7B,QAAU9D,EAAI,EAAGA,EAAI8D,EAAS,MAAO9D,IAEpCyF,EAAQ,KAAMzF,CAAC,EAIhB7E,EAAS,SAAUsK,CAAO,EAC1B5O,EAAQsE,EAAS,SAAQ,CAE1B,KAEC,gBAAQ,MAAO,yGAAyG,EACjHA,CAIT,CAIA,MAAMuK,EAAoB7O,EAAM,MAAQ,EAClC8O,EAAa,CAAA,EAEnB,GAAKN,IAAaE,EAAAA,oBAIjB,QAAUvF,EAAI,EAAGA,GAAK0F,EAAmB1F,IAExC2F,EAAW,KAAM9O,EAAM,KAAM,CAAC,CAAE,EAChC8O,EAAW,KAAM9O,EAAM,KAAMmJ,CAAC,CAAE,EAChC2F,EAAW,KAAM9O,EAAM,KAAMmJ,EAAI,CAAC,CAAE,MAQrC,SAAUA,EAAI,EAAGA,EAAI0F,EAAmB1F,IAElCA,EAAI,IAAM,GAEd2F,EAAW,KAAM9O,EAAM,KAAMmJ,CAAC,CAAE,EAChC2F,EAAW,KAAM9O,EAAM,KAAMmJ,EAAI,CAAC,CAAE,EACpC2F,EAAW,KAAM9O,EAAM,KAAMmJ,EAAI,CAAC,CAAE,IAIpC2F,EAAW,KAAM9O,EAAM,KAAMmJ,EAAI,CAAC,CAAE,EACpC2F,EAAW,KAAM9O,EAAM,KAAMmJ,EAAI,CAAC,CAAE,EACpC2F,EAAW,KAAM9O,EAAM,KAAMmJ,CAAC,CAAE,GAQ5B2F,EAAW,OAAS,IAAQD,GAElC,QAAQ,MAAO,kGAAkG,EAMlH,MAAME,EAAczK,EAAS,MAAK,EAClC,OAAAyK,EAAY,SAAUD,CAAU,EAChCC,EAAY,YAAW,EAEhBA,CAER,KAEC,gBAAQ,MAAO,sEAAuEP,CAAQ,EACvFlK,CAIT,CCzxBA,MAAM0K,WAAmBC,EAAAA,MAAO,CAO/B,YAAaC,EAAU,CAEtB,MAAOA,CAAO,EAEd,KAAK,YAAc,KACnB,KAAK,WAAa,KAClB,KAAK,eAAiB,KAEtB,KAAK,gBAAkB,CAAA,EAEvB,KAAK,SAAU,SAAWC,EAAS,CAElC,OAAO,IAAIC,GAAiCD,CAAM,CAEnD,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIE,GAAkCF,CAAM,CAEpD,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIG,GAA4BH,CAAM,CAE9C,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAII,GAA0BJ,CAAM,CAE5C,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIK,GAA0BL,CAAM,CAE5C,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIM,GAA6BN,CAAM,CAE/C,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIO,GAAoCP,CAAM,CAEtD,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIQ,GAA8BR,CAAM,CAEhD,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIS,GAA2BT,CAAM,CAE7C,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIU,GAAwCV,CAAM,CAE1D,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIW,GAAgCX,CAAM,CAElD,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIY,GAAmCZ,CAAM,CAErD,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIa,GAAkCb,CAAM,CAEpD,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIc,GAA4Bd,CAAM,CAE9C,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIe,GAAqBf,CAAM,CAEvC,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIgB,GAAwBhB,CAAM,CAE1C,CAAC,EAED,KAAK,SAAU,SAAWA,EAAS,CAElC,OAAO,IAAIiB,GAAuBjB,CAAM,CAEzC,CAAC,CAEF,CAWA,KAAMkB,EAAKC,EAAQC,EAAYC,EAAU,CAExC,MAAMC,EAAQ,KAEd,IAAIC,EAEJ,GAAK,KAAK,eAAiB,GAE1BA,EAAe,KAAK,qBAET,KAAK,OAAS,GAAK,CAO9B,MAAMC,EAAcC,EAAAA,YAAY,eAAgBP,CAAG,EACnDK,EAAeE,EAAAA,YAAY,WAAYD,EAAa,KAAK,IAAI,CAE9D,MAECD,EAAeE,EAAAA,YAAY,eAAgBP,CAAG,EAO/C,KAAK,QAAQ,UAAWA,CAAG,EAE3B,MAAMQ,EAAW,SAAWC,EAAI,CAE1BN,EAEJA,EAASM,CAAC,EAIV,QAAQ,MAAOA,CAAC,EAIjBL,EAAM,QAAQ,UAAWJ,CAAG,EAC5BI,EAAM,QAAQ,QAASJ,CAAG,CAE3B,EAEMjD,EAAS,IAAI2D,aAAY,KAAK,OAAO,EAE3C3D,EAAO,QAAS,KAAK,IAAI,EACzBA,EAAO,gBAAiB,aAAa,EACrCA,EAAO,iBAAkB,KAAK,aAAa,EAC3CA,EAAO,mBAAoB,KAAK,eAAe,EAE/CA,EAAO,KAAMiD,EAAK,SAAW7P,EAAO,CAEnC,GAAI,CAEHiQ,EAAM,MAAOjQ,EAAMkQ,EAAc,SAAWM,EAAO,CAElDV,EAAQU,CAAI,EAEZP,EAAM,QAAQ,QAASJ,CAAG,CAE3B,EAAGQ,CAAQ,CAEZ,OAAUC,EAAI,CAEbD,EAAUC,CAAC,CAEZ,CAED,EAAGP,EAAYM,CAAQ,CAExB,CASA,eAAgBI,EAAc,CAE7B,YAAK,YAAcA,EACZ,IAER,CASA,cAAeC,EAAa,CAE3B,YAAK,WAAaA,EACX,IAER,CASA,kBAAmBC,EAAiB,CAEnC,YAAK,eAAiBA,EACf,IAER,CAUA,SAAU9Q,EAAW,CAEpB,OAAK,KAAK,gBAAgB,QAASA,CAAQ,IAAO,IAEjD,KAAK,gBAAgB,KAAMA,CAAQ,EAI7B,IAER,CAQA,WAAYA,EAAW,CAEtB,OAAK,KAAK,gBAAgB,QAASA,CAAQ,IAAO,IAEjD,KAAK,gBAAgB,OAAQ,KAAK,gBAAgB,QAASA,CAAQ,EAAI,CAAC,EAIlE,IAER,CAUA,MAAOG,EAAM4Q,EAAMd,EAAQE,EAAU,CAEpC,IAAIa,EACJ,MAAMC,EAAa,CAAA,EACbC,EAAU,CAAA,EACVC,EAAc,IAAI,YAExB,GAAK,OAAOhR,GAAS,SAEpB6Q,EAAO,KAAK,MAAO7Q,CAAI,UAEZA,aAAgB,YAI3B,GAFcgR,EAAY,OAAQ,IAAI,WAAYhR,EAAM,EAAG,EAAG,IAE/CiR,GAAgC,CAE9C,GAAI,CAEHH,EAAYI,EAAW,eAAe,EAAK,IAAIC,GAAqBnR,CAAI,CAEzE,OAAUb,EAAQ,CAEZ6Q,GAAUA,EAAS7Q,CAAK,EAC7B,MAED,CAEA0R,EAAO,KAAK,MAAOC,EAAYI,EAAW,eAAe,EAAG,OAAO,CAEpE,MAECL,EAAO,KAAK,MAAOG,EAAY,OAAQhR,CAAI,CAAE,OAM9C6Q,EAAO7Q,EAIR,GAAK6Q,EAAK,QAAU,QAAaA,EAAK,MAAM,QAAS,CAAC,EAAK,EAAI,CAEzDb,GAAUA,EAAS,IAAI,MAAO,yEAAyE,CAAE,EAC9G,MAED,CAEA,MAAMrB,EAAS,IAAIyC,GAAYP,EAAM,CAEpC,KAAMD,GAAQ,KAAK,cAAgB,GACnC,YAAa,KAAK,YAClB,cAAe,KAAK,cACpB,QAAS,KAAK,QACd,WAAY,KAAK,WACjB,eAAgB,KAAK,cAExB,CAAG,EAEDjC,EAAO,WAAW,iBAAkB,KAAK,aAAa,EAEtD,QAAUhG,EAAI,EAAGA,EAAI,KAAK,gBAAgB,OAAQA,IAAO,CAExD,MAAM0I,EAAS,KAAK,gBAAiB1I,CAAC,EAAIgG,CAAM,EAEzC0C,EAAO,MAAO,QAAQ,MAAO,sDAAsD,EAE1FN,EAASM,EAAO,IAAI,EAAKA,EAMzBP,EAAYO,EAAO,IAAI,EAAK,EAE7B,CAEA,GAAKR,EAAK,eAET,QAAUlI,EAAI,EAAGA,EAAIkI,EAAK,eAAe,OAAQ,EAAGlI,EAAI,CAEvD,MAAM2I,EAAgBT,EAAK,eAAgBlI,CAAC,EACtC4I,EAAqBV,EAAK,oBAAsB,CAAA,EAEtD,OAASS,EAAa,CAErB,KAAKJ,EAAW,oBACfJ,EAAYQ,GAAkB,IAAIE,GAClC,MAED,KAAKN,EAAW,2BACfJ,EAAYQ,CAAa,EAAK,IAAIG,GAAmCZ,EAAM,KAAK,WAAW,EAC3F,MAED,KAAKK,EAAW,sBACfJ,EAAYQ,GAAkB,IAAII,GAClC,MAED,KAAKR,EAAW,sBACfJ,EAAYQ,GAAkB,IAAIK,GAClC,MAED,QAEMJ,EAAmB,QAASD,CAAa,GAAM,GAAKP,EAASO,CAAa,IAAO,QAErF,QAAQ,KAAM,wCAA0CA,EAAgB,IAAI,CAInF,CAEG,CAID3C,EAAO,cAAemC,CAAU,EAChCnC,EAAO,WAAYoC,CAAO,EAC1BpC,EAAO,MAAOmB,EAAQE,CAAO,CAE9B,CAUA,WAAYhQ,EAAM4Q,EAAO,CAExB,MAAMX,EAAQ,KAEd,OAAO,IAAI,QAAS,SAAW2B,EAASC,EAAS,CAEhD5B,EAAM,MAAOjQ,EAAM4Q,EAAMgB,EAASC,CAAM,CAEzC,CAAC,CAEF,CAED,CAIA,SAASC,IAAe,CAEvB,IAAIvN,EAAU,CAAA,EAEd,MAAO,CAEN,IAAK,SAAW1B,EAAM,CAErB,OAAO0B,EAAS1B,CAAG,CAEpB,EAEA,IAAK,SAAWA,EAAKxE,EAAS,CAE7BkG,EAAS1B,CAAG,EAAKxE,CAElB,EAEA,OAAQ,SAAWwE,EAAM,CAExB,OAAO0B,EAAS1B,CAAG,CAEpB,EAEA,UAAW,UAAY,CAEtB0B,EAAU,CAAA,CAEX,CAEF,CAEA,CAMA,MAAM2M,EAAa,CAClB,gBAAiB,kBACjB,2BAA4B,6BAC5B,oBAAqB,sBACrB,wBAAyB,0BACzB,yBAA0B,2BAC1B,kBAAmB,oBACnB,oBAAqB,sBACrB,uBAAwB,yBACxB,2BAA4B,6BAC5B,0BAA2B,4BAC3B,yBAA0B,2BAC1B,oBAAqB,sBACrB,qBAAsB,uBACtB,mBAAoB,qBACpB,sBAAuB,wBACvB,sBAAuB,wBACvB,gCAAiC,kCACjC,mBAAoB,qBACpB,iBAAkB,mBAClB,iBAAkB,mBAClB,wBAAyB,0BACzB,wBAAyB,yBAC1B,EASA,MAAMxB,EAAoB,CAEzB,YAAaf,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,oBAGvB,KAAK,MAAQ,CAAE,KAAM,CAAA,EAAI,KAAM,CAAA,CAAE,CAElC,CAEA,WAAY,CAEX,MAAMvC,EAAS,KAAK,OACdoD,EAAW,KAAK,OAAO,KAAK,OAAS,CAAA,EAE3C,QAAUC,EAAY,EAAGC,EAAaF,EAAS,OAAQC,EAAYC,EAAYD,IAAe,CAE7F,MAAME,EAAUH,EAAUC,CAAS,EAE9BE,EAAQ,YACRA,EAAQ,WAAY,KAAK,IAAI,GAC7BA,EAAQ,WAAY,KAAK,IAAI,EAAG,QAAU,QAE9CvD,EAAO,YAAa,KAAK,MAAOuD,EAAQ,WAAY,KAAK,IAAI,EAAG,KAAK,CAIvE,CAED,CAEA,WAAYC,EAAa,CAExB,MAAMxD,EAAS,KAAK,OACdyD,EAAW,SAAWD,EAC5B,IAAIE,EAAa1D,EAAO,MAAM,IAAKyD,CAAQ,EAE3C,GAAKC,EAAa,OAAOA,EAEzB,MAAMxB,EAAOlC,EAAO,KAGd2D,IAFezB,EAAK,YAAcA,EAAK,WAAY,KAAK,IAAI,GAAQ,CAAA,GAC7C,QAAU,CAAA,GACXsB,CAAU,EACtC,IAAII,EAEJ,MAAMxH,EAAQ,IAAIyH,EAAAA,MAAO,QAAQ,EAE5BF,EAAS,QAAU,QAAYvH,EAAM,OAAQuH,EAAS,MAAO,CAAC,EAAIA,EAAS,MAAO,CAAC,EAAIA,EAAS,MAAO,CAAC,EAAIG,sBAAoB,EAErI,MAAMC,EAAQJ,EAAS,QAAU,OAAYA,EAAS,MAAQ,EAE9D,OAASA,EAAS,KAAI,CAErB,IAAK,cACJC,EAAY,IAAII,EAAAA,iBAAkB5H,CAAK,EACvCwH,EAAU,OAAO,SAAS,IAAK,EAAG,EAAG,EAAG,EACxCA,EAAU,IAAKA,EAAU,MAAM,EAC/B,MAED,IAAK,QACJA,EAAY,IAAIK,EAAAA,WAAY7H,CAAK,EACjCwH,EAAU,SAAWG,EACrB,MAED,IAAK,OACJH,EAAY,IAAIM,EAAAA,UAAW9H,CAAK,EAChCwH,EAAU,SAAWG,EAErBJ,EAAS,KAAOA,EAAS,MAAQ,CAAA,EACjCA,EAAS,KAAK,eAAiBA,EAAS,KAAK,iBAAmB,OAAYA,EAAS,KAAK,eAAiB,EAC3GA,EAAS,KAAK,eAAiBA,EAAS,KAAK,iBAAmB,OAAYA,EAAS,KAAK,eAAiB,KAAK,GAAK,EACrHC,EAAU,MAAQD,EAAS,KAAK,eAChCC,EAAU,SAAW,EAAMD,EAAS,KAAK,eAAiBA,EAAS,KAAK,eACxEC,EAAU,OAAO,SAAS,IAAK,EAAG,EAAG,EAAG,EACxCA,EAAU,IAAKA,EAAU,MAAM,EAC/B,MAED,QACC,MAAM,IAAI,MAAO,4CAA8CD,EAAS,IAAI,CAEhF,CAIE,OAAAC,EAAU,SAAS,IAAK,EAAG,EAAG,CAAC,EAE/BO,EAAwBP,EAAWD,CAAQ,EAEtCA,EAAS,YAAc,SAAYC,EAAU,UAAYD,EAAS,WAEvEC,EAAU,KAAO5D,EAAO,iBAAkB2D,EAAS,MAAU,SAAWH,CAAY,EAEpFE,EAAa,QAAQ,QAASE,CAAS,EAEvC5D,EAAO,MAAM,IAAKyD,EAAUC,CAAU,EAE/BA,CAER,CAEA,cAAexN,EAAMrF,EAAQ,CAE5B,GAAKqF,IAAS,QAEd,OAAO,KAAK,WAAYrF,CAAK,CAE9B,CAEA,qBAAsBwS,EAAY,CAEjC,MAAMe,EAAO,KACPpE,EAAS,KAAK,OAEduD,EADOvD,EAAO,KACC,MAAOqD,CAAS,EAE/BG,GADaD,EAAQ,YAAcA,EAAQ,WAAY,KAAK,IAAI,GAAQ,CAAA,GAClD,MAE5B,OAAKC,IAAe,OAAmB,KAEhC,KAAK,WAAYA,CAAU,EAAG,KAAM,SAAWa,EAAQ,CAE7D,OAAOrE,EAAO,YAAaoE,EAAK,MAAOZ,EAAYa,CAAK,CAEzD,CAAC,CAEF,CAED,CASA,MAAMxB,EAA4B,CAEjC,aAAc,CAEb,KAAK,KAAON,EAAW,mBAExB,CAEA,iBAAkB,CAEjB,OAAO+B,EAAAA,iBAER,CAEA,aAAcC,EAAgBC,EAAaxE,EAAS,CAEnD,MAAMyE,EAAU,CAAA,EAEhBF,EAAe,MAAQ,IAAIV,EAAAA,MAAO,EAAK,EAAK,CAAG,EAC/CU,EAAe,QAAU,EAEzB,MAAMG,EAAoBF,EAAY,qBAEtC,GAAKE,EAAoB,CAExB,GAAK,MAAM,QAASA,EAAkB,eAAe,EAAK,CAEzD,MAAMC,EAAQD,EAAkB,gBAEhCH,EAAe,MAAM,OAAQI,EAAO,CAAC,EAAIA,EAAO,GAAKA,EAAO,CAAC,EAAIb,EAAAA,oBAAoB,EACrFS,EAAe,QAAUI,EAAO,CAAC,CAElC,CAEKD,EAAkB,mBAAqB,QAE3CD,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,MAAOG,EAAkB,iBAAkBE,EAAAA,eAAgB,CAIjH,CAEA,OAAO,QAAQ,IAAKH,CAAO,CAE5B,CAED,CASA,MAAM/D,EAAuC,CAE5C,YAAaV,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,+BAExB,CAEA,qBAAsBsC,EAAeN,EAAiB,CAGrD,MAAMC,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,GAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,MAE/D,OAAO,QAAQ,QAAO,EAIvB,MAAMM,EAAmBN,EAAY,WAAY,KAAK,IAAI,EAAG,iBAE7D,OAAKM,IAAqB,SAEzBP,EAAe,kBAAoBO,GAI7B,QAAQ,QAAO,CAEvB,CAED,CASA,MAAM7E,EAAgC,CAErC,YAAaD,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,uBAExB,CAEA,gBAAiBsC,EAAgB,CAGhC,MAAML,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,MAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,IAAI,EAAY,KAEzEO,EAAAA,oBAER,CAEA,qBAAsBF,EAAeN,EAAiB,CAErD,MAAMvE,EAAS,KAAK,OACdwE,EAAcxE,EAAO,KAAK,UAAW6E,CAAa,EAExD,GAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,MAE/D,OAAO,QAAQ,QAAO,EAIvB,MAAMC,EAAU,CAAA,EAEVO,EAAYR,EAAY,WAAY,KAAK,IAAI,EA0BnD,GAxBKQ,EAAU,kBAAoB,SAElCT,EAAe,UAAYS,EAAU,iBAIjCA,EAAU,mBAAqB,QAEnCP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,eAAgBS,EAAU,iBAAkB,EAI5FA,EAAU,2BAA6B,SAE3CT,EAAe,mBAAqBS,EAAU,0BAI1CA,EAAU,4BAA8B,QAE5CP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,wBAAyBS,EAAU,0BAA2B,EAI9GA,EAAU,yBAA2B,SAEzCP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,qBAAsBS,EAAU,uBAAwB,EAEvGA,EAAU,uBAAuB,QAAU,QAAY,CAE3D,MAAMC,EAAQD,EAAU,uBAAuB,MAE/CT,EAAe,qBAAuB,IAAIW,UAASD,EAAOA,CAAK,CAEhE,CAID,OAAO,QAAQ,IAAKR,CAAO,CAE5B,CAED,CASA,MAAMvE,EAAiC,CAEtC,YAAaF,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,wBAExB,CAEA,gBAAiBsC,EAAgB,CAGhC,MAAML,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,MAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,IAAI,EAAY,KAEzEO,EAAAA,oBAER,CAEA,qBAAsBF,EAAeN,EAAiB,CAGrD,MAAMC,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,GAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,MAE/D,OAAO,QAAQ,QAAO,EAIvB,MAAMQ,EAAYR,EAAY,WAAY,KAAK,IAAI,EAEnD,OAAAD,EAAe,WAAaS,EAAU,aAAe,OAAYA,EAAU,WAAa,EAEjF,QAAQ,QAAO,CAEvB,CAED,CASA,MAAMpE,EAAkC,CAEvC,YAAaZ,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,yBAExB,CAEA,gBAAiBsC,EAAgB,CAGhC,MAAML,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,MAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,IAAI,EAAY,KAEzEO,EAAAA,oBAER,CAEA,qBAAsBF,EAAeN,EAAiB,CAErD,MAAMvE,EAAS,KAAK,OACdwE,EAAcxE,EAAO,KAAK,UAAW6E,CAAa,EAExD,GAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,MAE/D,OAAO,QAAQ,QAAO,EAIvB,MAAMC,EAAU,CAAA,EAEVO,EAAYR,EAAY,WAAY,KAAK,IAAI,EAEnD,OAAKQ,EAAU,oBAAsB,SAEpCT,EAAe,YAAcS,EAAU,mBAInCA,EAAU,qBAAuB,QAErCP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,iBAAkBS,EAAU,mBAAoB,EAIhGA,EAAU,iBAAmB,SAEjCT,EAAe,eAAiBS,EAAU,gBAItCT,EAAe,4BAA8B,SAEjDA,EAAe,0BAA4B,CAAE,IAAK,GAAG,GAIjDS,EAAU,8BAAgC,SAE9CT,EAAe,0BAA2B,CAAC,EAAKS,EAAU,6BAItDA,EAAU,8BAAgC,SAE9CT,EAAe,0BAA2B,CAAC,EAAKS,EAAU,6BAItDA,EAAU,8BAAgC,QAE9CP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,0BAA2BS,EAAU,4BAA6B,EAIhH,QAAQ,IAAKP,CAAO,CAE5B,CAED,CASA,MAAMnE,EAA4B,CAEjC,YAAaN,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,mBAExB,CAEA,gBAAiBsC,EAAgB,CAGhC,MAAML,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,MAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,IAAI,EAAY,KAEzEO,EAAAA,oBAER,CAEA,qBAAsBF,EAAeN,EAAiB,CAErD,MAAMvE,EAAS,KAAK,OACdwE,EAAcxE,EAAO,KAAK,UAAW6E,CAAa,EAExD,GAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,MAE/D,OAAO,QAAQ,QAAO,EAIvB,MAAMC,EAAU,CAAA,EAEhBF,EAAe,WAAa,IAAIV,EAAAA,MAAO,EAAG,EAAG,CAAC,EAC9CU,EAAe,eAAiB,EAChCA,EAAe,MAAQ,EAEvB,MAAMS,EAAYR,EAAY,WAAY,KAAK,IAAI,EAEnD,GAAKQ,EAAU,mBAAqB,OAAY,CAE/C,MAAMG,EAAcH,EAAU,iBAC9BT,EAAe,WAAW,OAAQY,EAAa,CAAC,EAAIA,EAAa,GAAKA,EAAa,CAAC,EAAIrB,EAAAA,oBAAoB,CAE7G,CAEA,OAAKkB,EAAU,uBAAyB,SAEvCT,EAAe,eAAiBS,EAAU,sBAItCA,EAAU,oBAAsB,QAEpCP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,gBAAiBS,EAAU,kBAAmBJ,EAAAA,eAAgB,EAI9GI,EAAU,wBAA0B,QAExCP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,oBAAqBS,EAAU,sBAAuB,EAIpG,QAAQ,IAAKP,CAAO,CAE5B,CAED,CAUA,MAAMlE,EAAmC,CAExC,YAAaP,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,0BAExB,CAEA,gBAAiBsC,EAAgB,CAGhC,MAAML,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,MAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,IAAI,EAAY,KAEzEO,EAAAA,oBAER,CAEA,qBAAsBF,EAAeN,EAAiB,CAErD,MAAMvE,EAAS,KAAK,OACdwE,EAAcxE,EAAO,KAAK,UAAW6E,CAAa,EAExD,GAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,MAE/D,OAAO,QAAQ,QAAO,EAIvB,MAAMC,EAAU,CAAA,EAEVO,EAAYR,EAAY,WAAY,KAAK,IAAI,EAEnD,OAAKQ,EAAU,qBAAuB,SAErCT,EAAe,aAAeS,EAAU,oBAIpCA,EAAU,sBAAwB,QAEtCP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,kBAAmBS,EAAU,oBAAqB,EAIhG,QAAQ,IAAKP,CAAO,CAE5B,CAED,CASA,MAAMjE,EAA6B,CAElC,YAAaR,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,oBAExB,CAEA,gBAAiBsC,EAAgB,CAGhC,MAAML,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,MAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,IAAI,EAAY,KAEzEO,EAAAA,oBAER,CAEA,qBAAsBF,EAAeN,EAAiB,CAErD,MAAMvE,EAAS,KAAK,OACdwE,EAAcxE,EAAO,KAAK,UAAW6E,CAAa,EAExD,GAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,MAE/D,OAAO,QAAQ,QAAO,EAIvB,MAAMC,EAAU,CAAA,EAEVO,EAAYR,EAAY,WAAY,KAAK,IAAI,EAEnDD,EAAe,UAAYS,EAAU,kBAAoB,OAAYA,EAAU,gBAAkB,EAE5FA,EAAU,mBAAqB,QAEnCP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,eAAgBS,EAAU,iBAAkB,EAIjGT,EAAe,oBAAsBS,EAAU,qBAAuB,IAEtE,MAAMI,EAAaJ,EAAU,kBAAoB,CAAE,EAAG,EAAG,CAAC,EAC1D,OAAAT,EAAe,iBAAmB,IAAIV,EAAAA,MAAK,EAAG,OAAQuB,EAAY,GAAKA,EAAY,CAAC,EAAIA,EAAY,CAAC,EAAItB,EAAAA,oBAAoB,EAEtH,QAAQ,IAAKW,CAAO,CAE5B,CAED,CASA,MAAMhE,EAA0B,CAE/B,YAAaT,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,iBAExB,CAEA,gBAAiBsC,EAAgB,CAGhC,MAAML,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,MAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,IAAI,EAAY,KAEzEO,EAAAA,oBAER,CAEA,qBAAsBF,EAAeN,EAAiB,CAGrD,MAAMC,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,GAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,MAE/D,OAAO,QAAQ,QAAO,EAIvB,MAAMQ,EAAYR,EAAY,WAAY,KAAK,IAAI,EAEnD,OAAAD,EAAe,IAAMS,EAAU,MAAQ,OAAYA,EAAU,IAAM,IAE5D,QAAQ,QAAO,CAEvB,CAED,CASA,MAAMrE,EAA+B,CAEpC,YAAaX,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,sBAExB,CAEA,gBAAiBsC,EAAgB,CAGhC,MAAML,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,MAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,IAAI,EAAY,KAEzEO,EAAAA,oBAER,CAEA,qBAAsBF,EAAeN,EAAiB,CAErD,MAAMvE,EAAS,KAAK,OACdwE,EAAcxE,EAAO,KAAK,UAAW6E,CAAa,EAExD,GAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,MAE/D,OAAO,QAAQ,QAAO,EAIvB,MAAMC,EAAU,CAAA,EAEVO,EAAYR,EAAY,WAAY,KAAK,IAAI,EAEnDD,EAAe,kBAAoBS,EAAU,iBAAmB,OAAYA,EAAU,eAAiB,EAElGA,EAAU,kBAAoB,QAElCP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,uBAAwBS,EAAU,gBAAiB,EAIxG,MAAMI,EAAaJ,EAAU,qBAAuB,CAAE,EAAG,EAAG,CAAC,EAC7D,OAAAT,EAAe,cAAgB,IAAIV,EAAAA,MAAK,EAAG,OAAQuB,EAAY,GAAKA,EAAY,CAAC,EAAIA,EAAY,CAAC,EAAItB,EAAAA,oBAAoB,EAErHkB,EAAU,uBAAyB,QAEvCP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,mBAAoBS,EAAU,qBAAsBJ,EAAAA,eAAgB,EAIlH,QAAQ,IAAKH,CAAO,CAE5B,CAED,CAUA,MAAM3D,EAA2B,CAEhC,YAAad,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,kBAExB,CAEA,gBAAiBsC,EAAgB,CAGhC,MAAML,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,MAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,IAAI,EAAY,KAEzEO,EAAAA,oBAER,CAEA,qBAAsBF,EAAeN,EAAiB,CAErD,MAAMvE,EAAS,KAAK,OACdwE,EAAcxE,EAAO,KAAK,UAAW6E,CAAa,EAExD,GAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,MAE/D,OAAO,QAAQ,QAAO,EAIvB,MAAMC,EAAU,CAAA,EAEVO,EAAYR,EAAY,WAAY,KAAK,IAAI,EAEnD,OAAAD,EAAe,UAAYS,EAAU,aAAe,OAAYA,EAAU,WAAa,EAElFA,EAAU,cAAgB,QAE9BP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,UAAWS,EAAU,YAAa,EAIhF,QAAQ,IAAKP,CAAO,CAE5B,CAED,CASA,MAAM5D,EAAiC,CAEtC,YAAab,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,wBAExB,CAEA,gBAAiBsC,EAAgB,CAGhC,MAAML,EADS,KAAK,OACO,KAAK,UAAWK,CAAa,EAExD,MAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,IAAI,EAAY,KAEzEO,EAAAA,oBAER,CAEA,qBAAsBF,EAAeN,EAAiB,CAErD,MAAMvE,EAAS,KAAK,OACdwE,EAAcxE,EAAO,KAAK,UAAW6E,CAAa,EAExD,GAAK,CAAEL,EAAY,YAAc,CAAEA,EAAY,WAAY,KAAK,MAE/D,OAAO,QAAQ,QAAO,EAIvB,MAAMC,EAAU,CAAA,EAEVO,EAAYR,EAAY,WAAY,KAAK,IAAI,EAEnD,OAAKQ,EAAU,qBAAuB,SAErCT,EAAe,WAAaS,EAAU,oBAIlCA,EAAU,qBAAuB,SAErCT,EAAe,mBAAqBS,EAAU,oBAI1CA,EAAU,oBAAsB,QAEpCP,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,gBAAiBS,EAAU,kBAAmB,EAI5F,QAAQ,IAAKP,CAAO,CAE5B,CAED,CASA,MAAMtE,EAA2B,CAEhC,YAAaH,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,kBAExB,CAEA,YAAa8C,EAAe,CAE3B,MAAMrF,EAAS,KAAK,OACdkC,EAAOlC,EAAO,KAEdsF,EAAapD,EAAK,SAAUmD,CAAY,EAE9C,GAAK,CAAEC,EAAW,YAAc,CAAEA,EAAW,WAAY,KAAK,MAE7D,OAAO,KAIR,MAAMN,EAAYM,EAAW,WAAY,KAAK,IAAI,EAC5CrH,EAAS+B,EAAO,QAAQ,WAE9B,GAAK,CAAE/B,EAAS,CAEf,GAAKiE,EAAK,oBAAsBA,EAAK,mBAAmB,QAAS,KAAK,IAAI,GAAM,EAE/E,MAAM,IAAI,MAAO,6EAA6E,EAK9F,OAAO,IAIT,CAEA,OAAOlC,EAAO,iBAAkBqF,EAAcL,EAAU,OAAQ/G,CAAM,CAEvE,CAED,CASA,MAAMmC,EAAyB,CAE9B,YAAaJ,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,gBAExB,CAEA,YAAa8C,EAAe,CAE3B,MAAMxV,EAAO,KAAK,KACZmQ,EAAS,KAAK,OACdkC,EAAOlC,EAAO,KAEdsF,EAAapD,EAAK,SAAUmD,CAAY,EAE9C,GAAK,CAAEC,EAAW,YAAc,CAAEA,EAAW,WAAYzV,GAExD,OAAO,KAIR,MAAMmV,EAAYM,EAAW,WAAYzV,CAAI,EACvC0V,EAASrD,EAAK,OAAQ8C,EAAU,MAAM,EAE5C,IAAI/G,EAAS+B,EAAO,cACpB,GAAKuF,EAAO,IAAM,CAEjB,MAAMC,EAAUxF,EAAO,QAAQ,QAAQ,WAAYuF,EAAO,GAAG,EACxDC,IAAY,OAAOvH,EAASuH,EAElC,CAEA,OAAOxF,EAAO,iBAAkBqF,EAAcL,EAAU,OAAQ/G,CAAM,CAEvE,CAED,CASA,MAAMoC,EAAyB,CAE9B,YAAaL,EAAS,CAErB,KAAK,OAASA,EACd,KAAK,KAAOuC,EAAW,gBAExB,CAEA,YAAa8C,EAAe,CAE3B,MAAMxV,EAAO,KAAK,KACZmQ,EAAS,KAAK,OACdkC,EAAOlC,EAAO,KAEdsF,EAAapD,EAAK,SAAUmD,CAAY,EAE9C,GAAK,CAAEC,EAAW,YAAc,CAAEA,EAAW,WAAYzV,GAExD,OAAO,KAIR,MAAMmV,EAAYM,EAAW,WAAYzV,CAAI,EACvC0V,EAASrD,EAAK,OAAQ8C,EAAU,MAAM,EAE5C,IAAI/G,EAAS+B,EAAO,cACpB,GAAKuF,EAAO,IAAM,CAEjB,MAAMC,EAAUxF,EAAO,QAAQ,QAAQ,WAAYuF,EAAO,GAAG,EACxDC,IAAY,OAAOvH,EAASuH,EAElC,CAEA,OAAOxF,EAAO,iBAAkBqF,EAAcL,EAAU,OAAQ/G,CAAM,CAEvE,CAED,CASA,MAAM+C,EAAuB,CAE5B,YAAahB,EAAS,CAErB,KAAK,KAAOuC,EAAW,wBACvB,KAAK,OAASvC,CAEf,CAEA,eAAgBnP,EAAQ,CAEvB,MAAMqR,EAAO,KAAK,OAAO,KACnBuD,EAAavD,EAAK,YAAarR,CAAK,EAE1C,GAAK4U,EAAW,YAAcA,EAAW,WAAY,KAAK,MAAS,CAElE,MAAMC,EAAeD,EAAW,WAAY,KAAK,IAAI,EAE/CE,EAAS,KAAK,OAAO,cAAe,SAAUD,EAAa,MAAM,EACjEE,EAAU,KAAK,OAAO,QAAQ,eAEpC,GAAK,CAAEA,GAAW,CAAEA,EAAQ,UAAY,CAEvC,GAAK1D,EAAK,oBAAsBA,EAAK,mBAAmB,QAAS,KAAK,IAAI,GAAM,EAE/E,MAAM,IAAI,MAAO,oFAAoF,EAKrG,OAAO,IAIT,CAEA,OAAOyD,EAAO,KAAM,SAAWE,EAAM,CAEpC,MAAMC,EAAaJ,EAAa,YAAc,EACxCK,EAAaL,EAAa,YAAc,EAExCpS,EAAQoS,EAAa,MACrBM,EAASN,EAAa,WAEtBH,EAAS,IAAI,WAAYM,EAAKC,EAAYC,CAAU,EAE1D,OAAKH,EAAQ,sBAELA,EAAQ,sBAAuBtS,EAAO0S,EAAQT,EAAQG,EAAa,KAAMA,EAAa,MAAM,EAAG,KAAM,SAAWG,EAAM,CAE5H,OAAOA,EAAI,MAEZ,CAAC,EAKMD,EAAQ,MAAM,KAAM,UAAY,CAEtC,MAAMhS,EAAS,IAAI,YAAaN,EAAQ0S,CAAM,EAC9C,OAAAJ,EAAQ,iBAAkB,IAAI,WAAYhS,CAAM,EAAIN,EAAO0S,EAAQT,EAAQG,EAAa,KAAMA,EAAa,MAAM,EAC1G9R,CAER,CAAC,CAIH,CAAC,CAEF,KAEC,QAAO,IAIT,CAED,CASA,MAAMqN,EAAsB,CAE3B,YAAajB,EAAS,CAErB,KAAK,KAAOuC,EAAW,wBACvB,KAAK,OAASvC,CAEf,CAEA,eAAgBqD,EAAY,CAE3B,MAAMnB,EAAO,KAAK,OAAO,KACnBqB,EAAUrB,EAAK,MAAOmB,CAAS,EAErC,GAAK,CAAEE,EAAQ,YAAc,CAAEA,EAAQ,WAAY,KAAK,IAAI,GAC3DA,EAAQ,OAAS,OAEjB,OAAO,KAIR,MAAM0C,EAAU/D,EAAK,OAAQqB,EAAQ,IAAI,EAIzC,UAAY2C,KAAaD,EAAQ,WAEhC,GAAKC,EAAU,OAASC,EAAgB,WACtCD,EAAU,OAASC,EAAgB,gBACnCD,EAAU,OAASC,EAAgB,cACnCD,EAAU,OAAS,OAEpB,OAAO,KAOT,MAAME,EADe7C,EAAQ,WAAY,KAAK,IAAI,EACf,WAI7BkB,EAAU,CAAA,EACV4B,EAAa,CAAA,EAEnB,UAAYnS,KAAOkS,EAElB3B,EAAQ,KAAM,KAAK,OAAO,cAAe,WAAY2B,EAAelS,CAAG,GAAK,KAAMoS,IAEjFD,EAAYnS,CAAG,EAAKoS,EACbD,EAAYnS,CAAG,GAEpB,EAIJ,OAAKuQ,EAAQ,OAAS,EAEd,MAIRA,EAAQ,KAAM,KAAK,OAAO,eAAgBpB,CAAS,CAAE,EAE9C,QAAQ,IAAKoB,CAAO,EAAG,KAAM9Q,GAAW,CAE9C,MAAM4S,EAAa5S,EAAQ,IAAG,EACxB6S,EAASD,EAAW,QAAUA,EAAW,SAAW,CAAEA,CAAU,EAChEjT,EAAQK,EAAS,CAAC,EAAG,MACrB8S,EAAkB,CAAA,EAExB,UAAY1J,KAAQyJ,EAAS,CAG5B,MAAME,EAAI,IAAIC,UACRC,EAAI,IAAIC,UACRC,EAAI,IAAIC,aACR7P,EAAI,IAAI2P,EAAAA,QAAS,EAAG,EAAG,CAAC,EAExBG,EAAgB,IAAIC,gBAAelK,EAAK,SAAUA,EAAK,SAAUzJ,CAAK,EAE5E,QAAU0G,EAAI,EAAGA,EAAI1G,EAAO0G,IAEtBqM,EAAW,aAEfO,EAAE,oBAAqBP,EAAW,YAAarM,CAAC,EAI5CqM,EAAW,UAEfS,EAAE,oBAAqBT,EAAW,SAAUrM,CAAC,EAIzCqM,EAAW,OAEfnP,EAAE,oBAAqBmP,EAAW,MAAOrM,CAAC,EAI3CgN,EAAc,YAAahN,EAAG0M,EAAE,QAASE,EAAGE,EAAG5P,EAAG,EAKnD,UAAYgQ,KAAiBb,EAE5B,GAAKa,IAAkB,WAAa,CAEnC,MAAMC,EAAOd,EAAYa,CAAa,EACtCF,EAAc,cAAgB,IAAII,EAAAA,yBAA0BD,EAAK,MAAOA,EAAK,SAAUA,EAAK,UAAU,CAEvG,MAAYD,IAAkB,eAC5BA,IAAkB,YAClBA,IAAkB,SAEnBnK,EAAK,SAAS,aAAcmK,EAAeb,EAAYa,CAAa,CAAE,EAOxEG,EAAAA,SAAS,UAAU,KAAK,KAAML,EAAejK,CAAI,EAEjD,KAAK,OAAO,oBAAqBiK,CAAa,EAE9CP,EAAgB,KAAMO,CAAa,CAEpC,CAEA,OAAKT,EAAW,SAEfA,EAAW,MAAK,EAEhBA,EAAW,IAAK,GAAIE,CAAe,EAE5BF,GAIDE,EAAiB,CAAC,CAE1B,CAAC,EAEF,CAED,CAGA,MAAMnE,GAAgC,OAChCgF,EAAiC,GACjCC,GAA+B,CAAE,KAAM,WAAY,IAAK,OAAU,EAExE,MAAM/E,EAAoB,CAEzB,YAAanR,EAAO,CAEnB,KAAK,KAAOkR,EAAW,gBACvB,KAAK,QAAU,KACf,KAAK,KAAO,KAEZ,MAAMiF,EAAa,IAAI,SAAUnW,EAAM,EAAGiW,CAA8B,EAClEjF,EAAc,IAAI,YAQxB,GANA,KAAK,OAAS,CACb,MAAOA,EAAY,OAAQ,IAAI,WAAYhR,EAAK,MAAO,EAAG,CAAC,EAAI,EAC/D,QAASmW,EAAW,UAAW,EAAG,EAAI,EACtC,OAAQA,EAAW,UAAW,EAAG,EAAI,CACxC,EAEO,KAAK,OAAO,QAAUlF,GAE1B,MAAM,IAAI,MAAO,mDAAmD,EAE9D,GAAK,KAAK,OAAO,QAAU,EAEjC,MAAM,IAAI,MAAO,gDAAgD,EAIlE,MAAMmF,EAAsB,KAAK,OAAO,OAASH,EAC3CI,EAAY,IAAI,SAAUrW,EAAMiW,CAA8B,EACpE,IAAIK,EAAa,EAEjB,KAAQA,EAAaF,GAAsB,CAE1C,MAAMG,EAAcF,EAAU,UAAWC,EAAY,EAAI,EACzDA,GAAc,EAEd,MAAME,EAAYH,EAAU,UAAWC,EAAY,EAAI,EAGvD,GAFAA,GAAc,EAETE,IAAcN,GAA6B,KAAO,CAEtD,MAAMO,EAAe,IAAI,WAAYzW,EAAMiW,EAAiCK,EAAYC,CAAW,EACnG,KAAK,QAAUvF,EAAY,OAAQyF,CAAY,CAEhD,SAAYD,IAAcN,GAA6B,IAAM,CAE5D,MAAMzB,EAAawB,EAAiCK,EACpD,KAAK,KAAOtW,EAAK,MAAOyU,EAAYA,EAAa8B,CAAW,CAE7D,CAIAD,GAAcC,CAEf,CAEA,GAAK,KAAK,UAAY,KAErB,MAAM,IAAI,MAAO,2CAA2C,CAI9D,CAED,CASA,MAAM9E,EAAkC,CAEvC,YAAaZ,EAAMJ,EAAc,CAEhC,GAAK,CAAEA,EAEN,MAAM,IAAI,MAAO,qDAAqD,EAIvE,KAAK,KAAOS,EAAW,2BACvB,KAAK,KAAOL,EACZ,KAAK,YAAcJ,EACnB,KAAK,YAAY,QAAO,CAEzB,CAEA,gBAAiBoE,EAAWlG,EAAS,CAEpC,MAAMkC,EAAO,KAAK,KACZJ,EAAc,KAAK,YACnBiG,EAAkB7B,EAAU,WAAY,KAAK,IAAI,EAAG,WACpD8B,EAAmB9B,EAAU,WAAY,KAAK,IAAI,EAAG,WACrD+B,EAAoB,CAAA,EACpBC,EAAyB,CAAA,EACzBC,EAAmB,CAAA,EAEzB,UAAYjB,KAAiBc,EAAmB,CAE/C,MAAMI,EAAqBC,GAAYnB,CAAa,GAAMA,EAAc,YAAW,EAEnFe,EAAmBG,CAAkB,EAAKJ,EAAkBd,CAAa,CAE1E,CAEA,UAAYA,KAAiBhB,EAAU,WAAa,CAEnD,MAAMkC,EAAqBC,GAAYnB,CAAa,GAAMA,EAAc,YAAW,EAEnF,GAAKc,EAAkBd,CAAa,IAAO,OAAY,CAEtD,MAAMoB,EAAcpG,EAAK,UAAWgE,EAAU,WAAYgB,EAAe,EACnEqB,EAAgBC,EAAuBF,EAAY,aAAa,EAEtEH,EAAkBC,GAAuBG,EAAc,KACvDL,EAAwBE,CAAkB,EAAKE,EAAY,aAAe,EAE3E,CAED,CAEA,OAAOtI,EAAO,cAAe,aAAc+H,CAAe,EAAG,KAAM,SAAWtC,EAAa,CAE1F,OAAO,IAAI,QAAS,SAAWxC,EAASC,EAAS,CAEhDpB,EAAY,gBAAiB2D,EAAY,SAAWtQ,EAAW,CAE9D,UAAY+R,KAAiB/R,EAAS,WAAa,CAElD,MAAMsT,EAAYtT,EAAS,WAAY+R,CAAa,EAC9CwB,EAAaR,EAAwBhB,CAAa,EAEnDwB,IAAe,SAAYD,EAAU,WAAaC,EAExD,CAEAzF,EAAS9N,CAAQ,CAElB,EAAG8S,EAAmBE,EAAkBrE,EAAAA,qBAAsBZ,CAAM,CAErE,CAAC,CAEF,CAAC,CAEF,CAED,CASA,MAAMH,EAA8B,CAEnC,aAAc,CAEb,KAAK,KAAOR,EAAW,qBAExB,CAEA,cAAejN,EAASqT,EAAY,CAEnC,OAAOA,EAAU,WAAa,QAAaA,EAAU,WAAarT,EAAQ,UACtEqT,EAAU,SAAW,QACrBA,EAAU,WAAa,QACvBA,EAAU,QAAU,SAOxBrT,EAAUA,EAAQ,MAAK,EAElBqT,EAAU,WAAa,SAE3BrT,EAAQ,QAAUqT,EAAU,UAIxBA,EAAU,SAAW,QAEzBrT,EAAQ,OAAO,UAAWqT,EAAU,MAAM,EAItCA,EAAU,WAAa,SAE3BrT,EAAQ,SAAWqT,EAAU,UAIzBA,EAAU,QAAU,QAExBrT,EAAQ,OAAO,UAAWqT,EAAU,KAAK,EAI1CrT,EAAQ,YAAc,IAEfA,CAER,CAED,CASA,MAAM0N,EAA8B,CAEnC,aAAc,CAEb,KAAK,KAAOT,EAAW,qBAExB,CAED,CAQA,MAAMqG,WAAmCC,EAAAA,WAAY,CAEpD,YAAaC,EAAoBC,EAAcC,EAAYC,EAAe,CAEzE,MAAOH,EAAoBC,EAAcC,EAAYC,CAAY,CAElE,CAEA,iBAAkBpY,EAAQ,CAKzB,MAAM+C,EAAS,KAAK,aACnBsV,EAAS,KAAK,aACdC,EAAY,KAAK,UACjBC,EAASvY,EAAQsY,EAAY,EAAIA,EAElC,QAAUnP,EAAI,EAAGA,IAAMmP,EAAWnP,IAEjCpG,EAAQoG,CAAC,EAAKkP,EAAQE,EAASpP,CAAC,EAIjC,OAAOpG,CAER,CAEA,aAAcyV,EAAIC,EAAI,EAAGC,EAAK,CAE7B,MAAM3V,EAAS,KAAK,aACdsV,EAAS,KAAK,aACdlD,EAAS,KAAK,UAEdwD,EAAUxD,EAAS,EACnByD,EAAUzD,EAAS,EAEnB0D,EAAKH,EAAKD,EAEV1C,GAAM,EAAI0C,GAAOI,EACjBC,EAAK/C,EAAIA,EACTgD,EAAMD,EAAK/C,EAEXiD,EAAUR,EAAKI,EACfK,EAAUD,EAAUJ,EAEpBM,EAAK,GAAMH,EAAM,EAAID,EACrBK,EAAKJ,EAAMD,EACXM,EAAK,EAAIF,EACTG,EAAKF,EAAKL,EAAK/C,EAIrB,QAAU5M,EAAI,EAAGA,IAAMgM,EAAQhM,IAAO,CAErC,MAAMmQ,EAAKjB,EAAQY,EAAU9P,EAAIgM,CAAM,EACjCoE,EAAKlB,EAAQY,EAAU9P,EAAIwP,CAAO,EAAKE,EACvCW,EAAKnB,EAAQW,EAAU7P,EAAIgM,CAAM,EACjCsE,EAAKpB,EAAQW,EAAU7P,CAAC,EAAK0P,EAEnC9V,EAAQoG,GAAMiQ,EAAKE,EAAKD,EAAKE,EAAKL,EAAKM,EAAKL,EAAKM,CAElD,CAEA,OAAO1W,CAER,CAED,CAEA,MAAM2W,GAAc,IAAIxD,EAAAA,WAExB,MAAMyD,WAA6C5B,EAA2B,CAE7E,aAAcS,EAAIC,EAAI,EAAGC,EAAK,CAE7B,MAAM3V,EAAS,MAAM,aAAcyV,EAAIC,EAAI,EAAGC,CAAE,EAEhD,OAAAgB,GAAY,UAAW3W,CAAM,EAAG,UAAS,EAAG,QAASA,CAAM,EAEpDA,CAER,CAED,CASA,MAAMuS,EAAkB,CAWvB,OAAQ,EACR,MAAO,EACP,UAAW,EACX,WAAY,EACZ,UAAW,EACX,eAAgB,EAChB,aAAc,CAGf,EAEMqC,EAAwB,CAC7B,KAAM,UACN,KAAM,WACN,KAAM,WACN,KAAM,YACN,KAAM,YACN,KAAM,YACP,EAEMiC,GAAgB,CACrB,KAAMC,EAAAA,cACN,KAAMC,EAAAA,aACN,KAAMC,EAAAA,2BACN,KAAMC,EAAAA,0BACN,KAAMC,EAAAA,0BACN,KAAMC,EAAAA,wBACP,EAEMC,GAAkB,CACvB,MAAOC,EAAAA,oBACP,MAAOC,EAAAA,uBACP,MAAOC,EAAAA,cACR,EAEMC,GAAmB,CACxB,OAAU,EACV,KAAQ,EACR,KAAQ,EACR,KAAQ,EACR,KAAQ,EACR,KAAQ,EACR,KAAQ,EACT,EAEM/C,GAAa,CAClB,SAAU,WACV,OAAQ,SACR,QAAS,UACT,WAAY,KACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,QAAS,QACT,UAAW,aACX,SAAU,WACX,EAEMgD,EAAkB,CACvB,MAAO,QACP,YAAa,WACb,SAAU,aACV,QAAS,uBACV,EAEMC,GAAgB,CACrB,YAAa,OAEb,OAAQC,EAAAA,kBACR,KAAMC,EAAAA,mBACP,EAEMC,GAAc,CACnB,OAAQ,SACR,KAAM,OACN,MAAO,OACR,EASA,SAASC,GAAuBC,EAAQ,CAEvC,OAAKA,EAAO,kBAAwB,SAEnCA,EAAO,gBAAsB,IAAIC,uBAAsB,CACtD,MAAO,SACP,SAAU,EACV,UAAW,EACX,UAAW,EACX,YAAa,GACb,UAAW,GACX,KAAMC,EAAAA,SACT,CAAG,GAIKF,EAAO,eAEf,CAEA,SAASG,EAAgCC,EAAiBrc,EAAQsc,EAAY,CAI7E,UAAYnc,KAAQmc,EAAU,WAExBD,EAAiBlc,CAAI,IAAO,SAEhCH,EAAO,SAAS,eAAiBA,EAAO,SAAS,gBAAkB,CAAA,EACnEA,EAAO,SAAS,eAAgBG,CAAI,EAAKmc,EAAU,WAAYnc,CAAI,EAMtE,CAQA,SAASsU,EAAwBzU,EAAQuc,EAAU,CAE7CA,EAAQ,SAAW,SAElB,OAAOA,EAAQ,QAAW,SAE9B,OAAO,OAAQvc,EAAO,SAAUuc,EAAQ,MAAM,EAI9C,QAAQ,KAAM,sDAAwDA,EAAQ,MAAM,EAMvF,CAWA,SAASC,GAAiB/W,EAAUgX,EAASnM,EAAS,CAErD,IAAIoM,EAAmB,GACnBC,EAAiB,GACjBC,EAAgB,GAEpB,QAAUtS,EAAI,EAAGuS,EAAKJ,EAAQ,OAAQnS,EAAIuS,EAAIvS,IAAO,CAEpD,MAAM+D,EAASoO,EAASnS,CAAC,EAMzB,GAJK+D,EAAO,WAAa,SAAYqO,EAAmB,IACnDrO,EAAO,SAAW,SAAYsO,EAAiB,IAC/CtO,EAAO,UAAY,SAAYuO,EAAgB,IAE/CF,GAAoBC,GAAkBC,EAAgB,KAE5D,CAEA,GAAK,CAAEF,GAAoB,CAAEC,GAAkB,CAAEC,EAAgB,OAAO,QAAQ,QAASnX,CAAQ,EAEjG,MAAMqX,EAA2B,CAAA,EAC3BC,EAAyB,CAAA,EACzBC,EAAwB,CAAA,EAE9B,QAAU1S,EAAI,EAAGuS,EAAKJ,EAAQ,OAAQnS,EAAIuS,EAAIvS,IAAO,CAEpD,MAAM+D,EAASoO,EAASnS,CAAC,EAEzB,GAAKoS,EAAmB,CAEvB,MAAMO,EAAkB5O,EAAO,WAAa,OACzCiC,EAAO,cAAe,WAAYjC,EAAO,QAAQ,EACjD5I,EAAS,WAAW,SAEvBqX,EAAyB,KAAMG,CAAe,CAE/C,CAEA,GAAKN,EAAiB,CAErB,MAAMM,EAAkB5O,EAAO,SAAW,OACvCiC,EAAO,cAAe,WAAYjC,EAAO,MAAM,EAC/C5I,EAAS,WAAW,OAEvBsX,EAAuB,KAAME,CAAe,CAE7C,CAEA,GAAKL,EAAgB,CAEpB,MAAMK,EAAkB5O,EAAO,UAAY,OACxCiC,EAAO,cAAe,WAAYjC,EAAO,OAAO,EAChD5I,EAAS,WAAW,MAEvBuX,EAAsB,KAAMC,CAAe,CAE5C,CAED,CAEA,OAAO,QAAQ,IAAK,CACnB,QAAQ,IAAKH,CAAwB,EACrC,QAAQ,IAAKC,CAAsB,EACnC,QAAQ,IAAKC,CAAqB,CACpC,GAAK,KAAM,SAAWE,EAAY,CAEhC,MAAMC,EAAiBD,EAAW,CAAC,EAC7BE,EAAeF,EAAW,CAAC,EAC3BG,EAAcH,EAAW,CAAC,EAEhC,OAAKR,IAAmBjX,EAAS,gBAAgB,SAAW0X,GACvDR,IAAiBlX,EAAS,gBAAgB,OAAS2X,GACnDR,IAAgBnX,EAAS,gBAAgB,MAAQ4X,GACtD5X,EAAS,qBAAuB,GAEzBA,CAER,CAAC,CAEF,CAQA,SAAS6X,GAAoBjQ,EAAMkJ,EAAU,CAI5C,GAFAlJ,EAAK,mBAAkB,EAElBkJ,EAAQ,UAAY,OAExB,QAAUjM,EAAI,EAAGuS,EAAKtG,EAAQ,QAAQ,OAAQjM,EAAIuS,EAAIvS,IAErD+C,EAAK,sBAAuB/C,CAAC,EAAKiM,EAAQ,QAASjM,CAAC,EAOtD,GAAKiM,EAAQ,QAAU,MAAM,QAASA,EAAQ,OAAO,aAAgB,CAEpE,MAAMgH,EAAchH,EAAQ,OAAO,YAEnC,GAAKlJ,EAAK,sBAAsB,SAAWkQ,EAAY,OAAS,CAE/DlQ,EAAK,sBAAwB,CAAA,EAE7B,QAAU/C,EAAI,EAAGuS,EAAKU,EAAY,OAAQjT,EAAIuS,EAAIvS,IAEjD+C,EAAK,sBAAuBkQ,EAAajT,CAAC,CAAE,EAAKA,CAInD,MAEC,QAAQ,KAAM,sEAAsE,CAItF,CAED,CAEA,SAASkT,GAAoBC,EAAe,CAE3C,IAAIC,EAEJ,MAAMC,EAAiBF,EAAa,YAAcA,EAAa,WAAY5K,EAAW,0BAA0B,EAchH,GAZK8K,EAEJD,EAAc,SAAWC,EAAe,WACpC,IAAMA,EAAe,QACrB,IAAMC,GAAqBD,EAAe,UAAU,EAIxDD,EAAcD,EAAa,QAAU,IAAMG,GAAqBH,EAAa,UAAU,EAAK,IAAMA,EAAa,KAI3GA,EAAa,UAAY,OAE7B,QAAUnT,EAAI,EAAGuS,EAAKY,EAAa,QAAQ,OAAQnT,EAAIuS,EAAIvS,IAE1DoT,GAAe,IAAME,GAAqBH,EAAa,QAASnT,CAAC,CAAE,EAMrE,OAAOoT,CAER,CAEA,SAASE,GAAqBjH,EAAa,CAE1C,IAAIkH,EAAgB,GAEpB,MAAMC,EAAO,OAAO,KAAMnH,CAAU,EAAG,KAAI,EAE3C,QAAUrM,EAAI,EAAGuS,EAAKiB,EAAK,OAAQxT,EAAIuS,EAAIvS,IAE1CuT,GAAiBC,EAAMxT,GAAM,IAAMqM,EAAYmH,EAAMxT,CAAC,CAAE,EAAK,IAI9D,OAAOuT,CAER,CAEA,SAASE,GAA6BC,EAAc,CAKnD,OAASA,EAAW,CAEnB,KAAK,UACJ,MAAO,GAAI,IAEZ,KAAK,WACJ,MAAO,GAAI,IAEZ,KAAK,WACJ,MAAO,GAAI,MAEZ,KAAK,YACJ,MAAO,GAAI,MAEZ,QACC,MAAM,IAAI,MAAO,mEAAmE,CAEvF,CAEA,CAEA,SAASC,GAAqBC,EAAM,CAEnC,OAAKA,EAAI,OAAQ,gBAAgB,EAAK,GAAKA,EAAI,OAAQ,oBAAoB,IAAO,EAAW,aACxFA,EAAI,OAAQ,eAAe,EAAK,GAAKA,EAAI,OAAQ,oBAAoB,IAAO,EAAW,aACvFA,EAAI,OAAQ,eAAe,EAAK,GAAKA,EAAI,OAAQ,oBAAoB,IAAO,EAAW,aAErF,WAER,CAEA,MAAMC,GAAkB,IAAIlH,EAAAA,QAI5B,MAAMlE,EAAW,CAEhB,YAAaP,EAAO,GAAIpM,EAAU,CAAA,EAAK,CAEtC,KAAK,KAAOoM,EACZ,KAAK,WAAa,CAAA,EAClB,KAAK,QAAU,CAAA,EACf,KAAK,QAAUpM,EAGf,KAAK,MAAQ,IAAIqN,GAGjB,KAAK,aAAe,IAAI,IAGxB,KAAK,eAAiB,CAAA,EAGtB,KAAK,UAAY,CAAA,EAGjB,KAAK,UAAY,CAAE,KAAM,CAAA,EAAI,KAAM,CAAA,CAAE,EACrC,KAAK,YAAc,CAAE,KAAM,CAAA,EAAI,KAAM,CAAA,CAAE,EACvC,KAAK,WAAa,CAAE,KAAM,CAAA,EAAI,KAAM,CAAA,CAAE,EAEtC,KAAK,YAAc,CAAA,EACnB,KAAK,aAAe,CAAA,EAGpB,KAAK,cAAgB,CAAA,EAKrB,IAAI3L,EAAW,GACXsW,EAAgB,GAChBC,EAAY,GACZC,EAAiB,GAErB,GAAK,OAAO,UAAc,IAAc,CAEvC,MAAM1W,EAAY,UAAU,UAE5BE,EAAW,iCAAiC,KAAMF,CAAS,IAAO,GAClE,MAAM2W,EAAc3W,EAAU,MAAO,gBAAgB,EACrDwW,EAAgBtW,GAAYyW,EAAc,SAAUA,EAAa,CAAC,EAAI,EAAE,EAAK,GAE7EF,EAAYzW,EAAU,QAAS,SAAS,EAAK,GAC7C0W,EAAiBD,EAAYzW,EAAU,MAAO,qBAAqB,EAAI,CAAC,EAAK,EAE9E,CAEK,OAAO,kBAAsB,KAAiBE,GAAYsW,EAAgB,IAAUC,GAAaC,EAAiB,GAEtH,KAAK,cAAgB,IAAIE,EAAAA,cAAe,KAAK,QAAQ,OAAO,EAI5D,KAAK,cAAgB,IAAIC,EAAAA,kBAAmB,KAAK,QAAQ,OAAO,EAIjE,KAAK,cAAc,eAAgB,KAAK,QAAQ,WAAW,EAC3D,KAAK,cAAc,iBAAkB,KAAK,QAAQ,aAAa,EAE/D,KAAK,WAAa,IAAIvM,EAAAA,WAAY,KAAK,QAAQ,OAAO,EACtD,KAAK,WAAW,gBAAiB,aAAa,EAEzC,KAAK,QAAQ,cAAgB,mBAEjC,KAAK,WAAW,mBAAoB,EAAI,CAI1C,CAEA,cAAeO,EAAa,CAE3B,KAAK,WAAaA,CAEnB,CAEA,WAAYC,EAAU,CAErB,KAAK,QAAUA,CAEhB,CAEA,MAAOjB,EAAQE,EAAU,CAExB,MAAMrB,EAAS,KACTkC,EAAO,KAAK,KACZC,EAAa,KAAK,WAGxB,KAAK,MAAM,UAAS,EACpB,KAAK,UAAY,CAAA,EAGjB,KAAK,WAAY,SAAWiM,EAAM,CAEjC,OAAOA,EAAI,WAAaA,EAAI,UAAS,CAEtC,CAAC,EAED,QAAQ,IAAK,KAAK,WAAY,SAAWA,EAAM,CAE9C,OAAOA,EAAI,YAAcA,EAAI,WAAU,CAExC,CAAC,CAAE,EAAG,KAAM,UAAY,CAEvB,OAAO,QAAQ,IAAK,CAEnBpO,EAAO,gBAAiB,OAAO,EAC/BA,EAAO,gBAAiB,WAAW,EACnCA,EAAO,gBAAiB,QAAQ,CAEpC,CAAI,CAEF,CAAC,EAAG,KAAM,SAAWqO,EAAe,CAEnC,MAAMza,EAAS,CACd,MAAOya,EAAc,CAAC,EAAInM,EAAK,OAAS,CAAC,EACzC,OAAQmM,EAAc,CAAC,EACvB,WAAYA,EAAc,CAAC,EAC3B,QAASA,EAAc,CAAC,EACxB,MAAOnM,EAAK,MACZ,OAAQlC,EACR,SAAU,CAAA,CACd,EAEG,OAAA8L,EAAgC3J,EAAYvO,EAAQsO,CAAI,EAExDiC,EAAwBvQ,EAAQsO,CAAI,EAE7B,QAAQ,IAAKlC,EAAO,WAAY,SAAWoO,EAAM,CAEvD,OAAOA,EAAI,WAAaA,EAAI,UAAWxa,CAAM,CAE9C,CAAC,CAAE,EAAG,KAAM,UAAY,CAEvB,UAAYgD,KAAShD,EAAO,OAE3BgD,EAAM,kBAAiB,EAIxBuK,EAAQvN,CAAM,CAEf,CAAC,CAEF,CAAC,EAAG,MAAOyN,CAAO,CAEnB,CAOA,WAAY,CAEX,MAAM+B,EAAW,KAAK,KAAK,OAAS,CAAA,EAC9BkL,EAAW,KAAK,KAAK,OAAS,CAAA,EAC9BC,EAAW,KAAK,KAAK,QAAU,CAAA,EAIrC,QAAUC,EAAY,EAAGC,EAAaH,EAAS,OAAQE,EAAYC,EAAYD,IAAe,CAE7F,MAAME,EAASJ,EAAUE,CAAS,EAAG,OAErC,QAAUxU,EAAI,EAAGuS,EAAKmC,EAAO,OAAQ1U,EAAIuS,EAAIvS,IAE5CoJ,EAAUsL,EAAQ1U,EAAG,EAAG,OAAS,EAInC,CAIA,QAAUqJ,EAAY,EAAGC,EAAaF,EAAS,OAAQC,EAAYC,EAAYD,IAAe,CAE7F,MAAME,EAAUH,EAAUC,CAAS,EAE9BE,EAAQ,OAAS,SAErB,KAAK,YAAa,KAAK,UAAWA,EAAQ,IAAI,EAKzCA,EAAQ,OAAS,SAErBgL,EAAUhL,EAAQ,IAAI,EAAG,cAAgB,KAMtCA,EAAQ,SAAW,QAEvB,KAAK,YAAa,KAAK,YAAaA,EAAQ,MAAM,CAIpD,CAED,CAeA,YAAaoI,EAAO9a,EAAQ,CAEtBA,IAAU,SAEV8a,EAAM,KAAM9a,CAAK,IAAO,SAE5B8a,EAAM,KAAM9a,CAAK,EAAK8a,EAAM,KAAM9a,CAAK,EAAK,GAI7C8a,EAAM,KAAM9a,KAEb,CAWA,YAAa8a,EAAO9a,EAAOnB,EAAS,CAEnC,GAAKic,EAAM,KAAM9a,CAAK,GAAM,EAAI,OAAOnB,EAEvC,MAAMif,EAAMjf,EAAO,MAAK,EAIlBkf,EAAiB,CAAEC,EAAUC,IAAW,CAE7C,MAAMC,EAAW,KAAK,aAAa,IAAKF,CAAQ,EAC3CE,GAAY,MAEhB,KAAK,aAAa,IAAKD,EAAOC,CAAQ,EAIvC,SAAY,CAAE/U,EAAG7D,CAAK,IAAM0Y,EAAS,SAAS,UAE7CD,EAAgBzY,EAAO2Y,EAAM,SAAU9U,CAAC,CAAE,CAI5C,EAEA,OAAA4U,EAAgBlf,EAAQif,CAAG,EAE3BA,EAAI,MAAQ,aAAiBhD,EAAM,KAAM9a,CAAK,IAEvC8d,CAER,CAEA,WAAY9c,EAAO,CAElB,MAAMsQ,EAAa,OAAO,OAAQ,KAAK,OAAO,EAC9CA,EAAW,KAAM,IAAI,EAErB,QAAUnI,EAAI,EAAGA,EAAImI,EAAW,OAAQnI,IAAO,CAE9C,MAAMpG,EAAS/B,EAAMsQ,EAAYnI,CAAC,CAAE,EAEpC,GAAKpG,EAAS,OAAOA,CAEtB,CAEA,OAAO,IAER,CAEA,WAAY/B,EAAO,CAElB,MAAMsQ,EAAa,OAAO,OAAQ,KAAK,OAAO,EAC9CA,EAAW,QAAS,IAAI,EAExB,MAAMsC,EAAU,CAAA,EAEhB,QAAU,EAAI,EAAG,EAAItC,EAAW,OAAQ,IAAO,CAE9C,MAAMvO,EAAS/B,EAAMsQ,EAAY,CAAC,CAAE,EAE/BvO,GAAS6Q,EAAQ,KAAM7Q,CAAM,CAEnC,CAEA,OAAO6Q,CAER,CAUA,cAAevO,EAAMrF,EAAQ,CAE5B,MAAM4S,EAAWvN,EAAO,IAAMrF,EAC9B,IAAI6S,EAAa,KAAK,MAAM,IAAKD,CAAQ,EAEzC,GAAK,CAAEC,EAAa,CAEnB,OAASxN,EAAI,CAEZ,IAAK,QACJwN,EAAa,KAAK,UAAW7S,CAAK,EAClC,MAED,IAAK,OACJ6S,EAAa,KAAK,WAAY,SAAW0K,EAAM,CAE9C,OAAOA,EAAI,UAAYA,EAAI,SAAUvd,CAAK,CAE3C,CAAC,EACD,MAED,IAAK,OACJ6S,EAAa,KAAK,WAAY,SAAW0K,EAAM,CAE9C,OAAOA,EAAI,UAAYA,EAAI,SAAUvd,CAAK,CAE3C,CAAC,EACD,MAED,IAAK,WACJ6S,EAAa,KAAK,aAAc7S,CAAK,EACrC,MAED,IAAK,aACJ6S,EAAa,KAAK,WAAY,SAAW0K,EAAM,CAE9C,OAAOA,EAAI,gBAAkBA,EAAI,eAAgBvd,CAAK,CAEvD,CAAC,EACD,MAED,IAAK,SACJ6S,EAAa,KAAK,WAAY7S,CAAK,EACnC,MAED,IAAK,WACJ6S,EAAa,KAAK,WAAY,SAAW0K,EAAM,CAE9C,OAAOA,EAAI,cAAgBA,EAAI,aAAcvd,CAAK,CAEnD,CAAC,EACD,MAED,IAAK,UACJ6S,EAAa,KAAK,WAAY,SAAW0K,EAAM,CAE9C,OAAOA,EAAI,aAAeA,EAAI,YAAavd,CAAK,CAEjD,CAAC,EACD,MAED,IAAK,OACJ6S,EAAa,KAAK,SAAU7S,CAAK,EACjC,MAED,IAAK,YACJ6S,EAAa,KAAK,WAAY,SAAW0K,EAAM,CAE9C,OAAOA,EAAI,eAAiBA,EAAI,cAAevd,CAAK,CAErD,CAAC,EACD,MAED,IAAK,SACJ6S,EAAa,KAAK,WAAY7S,CAAK,EACnC,MAED,QAOC,GANA6S,EAAa,KAAK,WAAY,SAAW0K,EAAM,CAE9C,OAAOA,GAAO,MAAQA,EAAI,eAAiBA,EAAI,cAAelY,EAAMrF,CAAK,CAE1E,CAAC,EAEI,CAAE6S,EAEN,MAAM,IAAI,MAAO,iBAAmBxN,CAAI,EAIzC,KAEL,CAEG,KAAK,MAAM,IAAKuN,EAAUC,CAAU,CAErC,CAEA,OAAOA,CAER,CASA,gBAAiBxN,EAAO,CAEvB,IAAImY,EAAe,KAAK,MAAM,IAAKnY,CAAI,EAEvC,GAAK,CAAEmY,EAAe,CAErB,MAAMrO,EAAS,KACTgP,EAAO,KAAK,KAAM9Y,GAASA,IAAS,OAAS,KAAO,IAAK,GAAM,CAAA,EAErEmY,EAAe,QAAQ,IAAKW,EAAK,IAAK,SAAWC,EAAKpe,EAAQ,CAE7D,OAAOmP,EAAO,cAAe9J,EAAMrF,CAAK,CAEzC,EAAG,EAEH,KAAK,MAAM,IAAKqF,EAAMmY,CAAY,CAEnC,CAEA,OAAOA,CAER,CASA,WAAYa,EAAc,CAEzB,MAAMC,EAAY,KAAK,KAAK,QAASD,CAAW,EAC1CjR,EAAS,KAAK,WAEpB,GAAKkR,EAAU,MAAQA,EAAU,OAAS,cAEzC,MAAM,IAAI,MAAO,qBAAuBA,EAAU,KAAO,gCAAgC,EAK1F,GAAKA,EAAU,MAAQ,QAAaD,IAAgB,EAEnD,OAAO,QAAQ,QAAS,KAAK,WAAY3M,EAAW,eAAe,EAAG,IAAI,EAI3E,MAAMzM,EAAU,KAAK,QAErB,OAAO,IAAI,QAAS,SAAWmN,EAASC,EAAS,CAEhDjF,EAAO,KAAMwD,cAAY,WAAY0N,EAAU,IAAKrZ,EAAQ,IAAI,EAAImN,EAAS,OAAW,UAAY,CAEnGC,EAAQ,IAAI,MAAO,4CAA8CiM,EAAU,IAAM,KAAM,CAExF,CAAC,CAEF,CAAC,CAEF,CASA,eAAgBpH,EAAkB,CAEjC,MAAMqH,EAAgB,KAAK,KAAK,YAAarH,CAAe,EAE5D,OAAO,KAAK,cAAe,SAAUqH,EAAc,QAAS,KAAM,SAAWzJ,EAAS,CAErF,MAAMI,EAAaqJ,EAAc,YAAc,EACzCtJ,EAAasJ,EAAc,YAAc,EAC/C,OAAOzJ,EAAO,MAAOG,EAAYA,EAAaC,CAAU,CAEzD,CAAC,CAEF,CASA,aAAcsJ,EAAgB,CAE7B,MAAMrP,EAAS,KACTkC,EAAO,KAAK,KAEZoG,EAAc,KAAK,KAAK,UAAW+G,CAAa,EAEtD,GAAK/G,EAAY,aAAe,QAAaA,EAAY,SAAW,OAAY,CAE/E,MAAMgH,EAAWlE,GAAkB9C,EAAY,IAAI,EAC7CiH,EAAa/G,EAAuBF,EAAY,aAAa,EAC7DI,EAAaJ,EAAY,aAAe,GAExC3D,EAAQ,IAAI4K,EAAYjH,EAAY,MAAQgH,CAAQ,EAC1D,OAAO,QAAQ,QAAS,IAAIE,EAAAA,gBAAiB7K,EAAO2K,EAAU5G,EAAY,CAE3E,CAEA,MAAM+G,EAAqB,CAAA,EAE3B,OAAKnH,EAAY,aAAe,OAE/BmH,EAAmB,KAAM,KAAK,cAAe,aAAcnH,EAAY,WAAY,EAInFmH,EAAmB,KAAM,IAAI,EAIzBnH,EAAY,SAAW,SAE3BmH,EAAmB,KAAM,KAAK,cAAe,aAAcnH,EAAY,OAAO,QAAQ,WAAY,EAClGmH,EAAmB,KAAM,KAAK,cAAe,aAAcnH,EAAY,OAAO,OAAO,WAAY,GAI3F,QAAQ,IAAKmH,CAAkB,EAAG,KAAM,SAAWC,EAAc,CAEvE,MAAMjK,EAAaiK,EAAa,CAAC,EAE3BJ,EAAWlE,GAAkB9C,EAAY,IAAI,EAC7CiH,EAAa/G,EAAuBF,EAAY,aAAa,EAG7DqH,EAAeJ,EAAW,kBAC1BK,EAAYD,EAAeL,EAC3BxJ,EAAawC,EAAY,YAAc,EACvCuH,EAAavH,EAAY,aAAe,OAAYpG,EAAK,YAAaoG,EAAY,YAAa,WAAa,OAC5GI,EAAaJ,EAAY,aAAe,GAC9C,IAAI3D,EAAOmL,EAGX,GAAKD,GAAcA,IAAeD,EAAY,CAI7C,MAAMG,EAAU,KAAK,MAAOjK,EAAa+J,CAAU,EAC7CG,EAAa,qBAAuB1H,EAAY,WAAa,IAAMA,EAAY,cAAgB,IAAMyH,EAAU,IAAMzH,EAAY,MACvI,IAAI2H,EAAKjQ,EAAO,MAAM,IAAKgQ,CAAU,EAE9BC,IAENtL,EAAQ,IAAI4K,EAAY9J,EAAYsK,EAAUF,EAAYvH,EAAY,MAAQuH,EAAaF,CAAY,EAGvGM,EAAK,IAAIC,EAAAA,kBAAmBvL,EAAOkL,EAAaF,CAAY,EAE5D3P,EAAO,MAAM,IAAKgQ,EAAYC,CAAE,GAIjCH,EAAkB,IAAIK,EAAAA,2BAA4BF,EAAIX,EAAYxJ,EAAa+J,EAAeF,EAAcjH,CAAU,CAEvH,MAEMjD,IAAe,KAEnBd,EAAQ,IAAI4K,EAAYjH,EAAY,MAAQgH,CAAQ,EAIpD3K,EAAQ,IAAI4K,EAAY9J,EAAYK,EAAYwC,EAAY,MAAQgH,CAAQ,EAI7EQ,EAAkB,IAAIN,EAAAA,gBAAiB7K,EAAO2K,EAAU5G,CAAU,EAKnE,GAAKJ,EAAY,SAAW,OAAY,CAEvC,MAAM8H,EAAkBhF,GAAiB,OACnCiF,EAAoB7H,EAAuBF,EAAY,OAAO,QAAQ,aAAa,EAEnFgI,EAAoBhI,EAAY,OAAO,QAAQ,YAAc,EAC7DiI,EAAmBjI,EAAY,OAAO,OAAO,YAAc,EAE3DkI,EAAgB,IAAIH,EAAmBX,EAAa,CAAC,EAAIY,EAAmBhI,EAAY,OAAO,MAAQ8H,CAAe,EACtHK,EAAe,IAAIlB,EAAYG,EAAa,CAAC,EAAIa,EAAkBjI,EAAY,OAAO,MAAQgH,CAAQ,EAEvG7J,IAAe,OAGnBqK,EAAkB,IAAIN,kBAAiBM,EAAgB,MAAM,MAAK,EAAIA,EAAgB,SAAUA,EAAgB,UAAU,GAK3HA,EAAgB,WAAa,GAE7B,QAAU9V,EAAI,EAAGuS,EAAKiE,EAAc,OAAQxW,EAAIuS,EAAIvS,IAAO,CAE1D,MAAMnJ,EAAQ2f,EAAexW,CAAC,EAM9B,GAJA8V,EAAgB,KAAMjf,EAAO4f,EAAczW,EAAIsV,CAAQ,CAAE,EACpDA,GAAY,GAAIQ,EAAgB,KAAMjf,EAAO4f,EAAczW,EAAIsV,EAAW,EAAG,EAC7EA,GAAY,GAAIQ,EAAgB,KAAMjf,EAAO4f,EAAczW,EAAIsV,EAAW,EAAG,EAC7EA,GAAY,GAAIQ,EAAgB,KAAMjf,EAAO4f,EAAczW,EAAIsV,EAAW,EAAG,EAC7EA,GAAY,EAAI,MAAM,IAAI,MAAO,mEAAmE,CAE1G,CAEAQ,EAAgB,WAAapH,CAE9B,CAEA,OAAOoH,CAER,CAAC,CAEF,CASA,YAAazK,EAAe,CAE3B,MAAMnD,EAAO,KAAK,KACZpM,EAAU,KAAK,QAEf4a,EADaxO,EAAK,SAAUmD,CAAY,EACf,OACzBsL,EAAYzO,EAAK,OAAQwO,CAAW,EAE1C,IAAIzS,EAAS,KAAK,cAElB,GAAK0S,EAAU,IAAM,CAEpB,MAAMnL,EAAU1P,EAAQ,QAAQ,WAAY6a,EAAU,GAAG,EACpDnL,IAAY,OAAOvH,EAASuH,EAElC,CAEA,OAAO,KAAK,iBAAkBH,EAAcqL,EAAazS,CAAM,CAEhE,CAEA,iBAAkBoH,EAAcqL,EAAazS,EAAS,CAErD,MAAM+B,EAAS,KACTkC,EAAO,KAAK,KAEZoD,EAAapD,EAAK,SAAUmD,CAAY,EACxCsL,EAAYzO,EAAK,OAAQwO,CAAW,EAEpCjN,GAAakN,EAAU,KAAOA,EAAU,YAAe,IAAMrL,EAAW,QAE9E,GAAK,KAAK,aAAc7B,GAGvB,OAAO,KAAK,aAAcA,CAAQ,EAInC,MAAMmN,EAAU,KAAK,gBAAiBF,EAAazS,GAAS,KAAM,SAAW3I,EAAU,CAEtFA,EAAQ,MAAQ,GAEhBA,EAAQ,KAAOgQ,EAAW,MAAQqL,EAAU,MAAQ,GAE/Crb,EAAQ,OAAS,IAAM,OAAOqb,EAAU,KAAQ,UAAYA,EAAU,IAAI,WAAY,aAAa,IAAO,KAE9Grb,EAAQ,KAAOqb,EAAU,KAK1B,MAAME,GADW3O,EAAK,UAAY,CAAA,GACRoD,EAAW,OAAO,GAAM,CAAA,EAElD,OAAAhQ,EAAQ,UAAYmV,GAAeoG,EAAQ,SAAS,GAAMlG,EAAAA,aAC1DrV,EAAQ,UAAYmV,GAAeoG,EAAQ,SAAS,GAAM9F,EAAAA,yBAC1DzV,EAAQ,MAAQ0V,GAAiB6F,EAAQ,KAAK,GAAM1F,EAAAA,eACpD7V,EAAQ,MAAQ0V,GAAiB6F,EAAQ,KAAK,GAAM1F,EAAAA,eACpD7V,EAAQ,gBAAkB,CAAEA,EAAQ,qBAAuBA,EAAQ,YAAcoV,EAAAA,eAAiBpV,EAAQ,YAAcqV,EAAAA,aAExH3K,EAAO,aAAa,IAAK1K,EAAS,CAAE,SAAU+P,EAAc,EAErD/P,CAER,CAAC,EAAG,MAAO,UAAY,CAEtB,OAAO,IAER,CAAC,EAED,YAAK,aAAcmO,CAAQ,EAAKmN,EAEzBA,CAER,CAEA,gBAAiBF,EAAazS,EAAS,CAEtC,MAAM+B,EAAS,KACTkC,EAAO,KAAK,KACZpM,EAAU,KAAK,QAErB,GAAK,KAAK,YAAa4a,CAAW,IAAO,OAExC,OAAO,KAAK,YAAaA,CAAW,EAAG,KAAQpb,GAAaA,EAAQ,OAAO,EAI5E,MAAMqb,EAAYzO,EAAK,OAAQwO,CAAW,EAEpCI,EAAM,KAAK,KAAO,KAAK,UAE7B,IAAIC,EAAYJ,EAAU,KAAO,GAC7BK,EAAc,GAElB,GAAKL,EAAU,aAAe,OAI7BI,EAAY/Q,EAAO,cAAe,aAAc2Q,EAAU,UAAU,EAAG,KAAM,SAAWlL,EAAa,CAEpGuL,EAAc,GACd,MAAMC,EAAO,IAAI,KAAM,CAAExL,CAAU,EAAI,CAAE,KAAMkL,EAAU,SAAU,EACnE,OAAAI,EAAYD,EAAI,gBAAiBG,CAAI,EAC9BF,CAER,CAAC,UAEUJ,EAAU,MAAQ,OAE7B,MAAM,IAAI,MAAO,2BAA6BD,EAAc,gCAAgC,EAI7F,MAAME,EAAU,QAAQ,QAASG,CAAS,EAAG,KAAM,SAAWA,EAAY,CAEzE,OAAO,IAAI,QAAS,SAAW9N,EAASC,EAAS,CAEhD,IAAI/B,EAAS8B,EAERhF,EAAO,sBAAwB,KAEnCkD,EAAS,SAAW+P,EAAc,CAEjC,MAAM5b,EAAU,IAAI6b,EAAAA,QAASD,CAAW,EACxC5b,EAAQ,YAAc,GAEtB2N,EAAS3N,CAAO,CAEjB,GAID2I,EAAO,KAAMwD,cAAY,WAAYsP,EAAWjb,EAAQ,MAAQqL,EAAQ,OAAW+B,CAAM,CAE1F,CAAC,CAEF,CAAC,EAAG,KAAM,SAAW5N,EAAU,CAI9B,OAAK0b,IAAgB,IAEpBF,EAAI,gBAAiBC,CAAS,EAI/B5M,EAAwB7O,EAASqb,CAAS,EAE1Crb,EAAQ,SAAS,SAAWqb,EAAU,UAAYhD,GAAqBgD,EAAU,GAAG,EAE7Erb,CAER,CAAC,EAAG,MAAO,SAAW9E,EAAQ,CAE7B,cAAQ,MAAO,0CAA4CugB,CAAS,EAC9DvgB,CAEP,CAAC,EAED,YAAK,YAAakgB,CAAW,EAAKE,EAC3BA,CAER,CAYA,cAAerM,EAAgB6M,EAASC,EAAQC,EAAa,CAE5D,MAAMtR,EAAS,KAEf,OAAO,KAAK,cAAe,UAAWqR,EAAO,OAAQ,KAAM,SAAW/b,EAAU,CAE/E,GAAK,CAAEA,EAAU,OAAO,KASxB,GAPK+b,EAAO,WAAa,QAAaA,EAAO,SAAW,IAEvD/b,EAAUA,EAAQ,MAAK,EACvBA,EAAQ,QAAU+b,EAAO,UAIrBrR,EAAO,WAAYuC,EAAW,qBAAqB,EAAK,CAE5D,MAAMoG,EAAY0I,EAAO,aAAe,OAAYA,EAAO,WAAY9O,EAAW,qBAAqB,EAAK,OAE5G,GAAKoG,EAAY,CAEhB,MAAM4I,EAAgBvR,EAAO,aAAa,IAAK1K,CAAO,EACtDA,EAAU0K,EAAO,WAAYuC,EAAW,qBAAqB,EAAG,cAAejN,EAASqT,CAAS,EACjG3I,EAAO,aAAa,IAAK1K,EAASic,CAAa,CAEhD,CAED,CAEA,OAAKD,IAAe,SAEnBhc,EAAQ,WAAagc,GAItB/M,EAAgB6M,CAAO,EAAK9b,EAErBA,CAER,CAAC,CAEF,CAYA,oBAAqByH,EAAO,CAE3B,MAAM5H,EAAW4H,EAAK,SACtB,IAAIpB,EAAWoB,EAAK,SAEpB,MAAMyU,EAAwBrc,EAAS,WAAW,UAAY,OACxDsc,EAAkBtc,EAAS,WAAW,QAAU,OAChDuc,EAAiBvc,EAAS,WAAW,SAAW,OAEtD,GAAK4H,EAAK,SAAW,CAEpB,MAAM0G,EAAW,kBAAoB9H,EAAS,KAE9C,IAAIgW,EAAiB,KAAK,MAAM,IAAKlO,CAAQ,EAEtCkO,IAENA,EAAiB,IAAIC,EAAAA,eACrBC,EAAAA,SAAS,UAAU,KAAK,KAAMF,EAAgBhW,CAAQ,EACtDgW,EAAe,MAAM,KAAMhW,EAAS,KAAK,EACzCgW,EAAe,IAAMhW,EAAS,IAC9BgW,EAAe,gBAAkB,GAEjC,KAAK,MAAM,IAAKlO,EAAUkO,CAAc,GAIzChW,EAAWgW,CAEZ,SAAY5U,EAAK,OAAS,CAEzB,MAAM0G,EAAW,qBAAuB9H,EAAS,KAEjD,IAAImW,EAAe,KAAK,MAAM,IAAKrO,CAAQ,EAEpCqO,IAENA,EAAe,IAAIC,EAAAA,kBACnBF,EAAAA,SAAS,UAAU,KAAK,KAAMC,EAAcnW,CAAQ,EACpDmW,EAAa,MAAM,KAAMnW,EAAS,KAAK,EACvCmW,EAAa,IAAMnW,EAAS,IAE5B,KAAK,MAAM,IAAK8H,EAAUqO,CAAY,GAIvCnW,EAAWmW,CAEZ,CAGA,GAAKN,GAAyBC,GAAmBC,EAAiB,CAEjE,IAAIjO,EAAW,kBAAoB9H,EAAS,KAAO,IAE9C6V,IAAwB/N,GAAY,wBACpCgO,IAAkBhO,GAAY,kBAC9BiO,IAAiBjO,GAAY,iBAElC,IAAIuO,EAAiB,KAAK,MAAM,IAAKvO,CAAQ,EAEtCuO,IAENA,EAAiBrW,EAAS,MAAK,EAE1B8V,IAAkBO,EAAe,aAAe,IAChDN,IAAiBM,EAAe,YAAc,IAE9CR,IAGCQ,EAAe,cAAcA,EAAe,YAAY,GAAK,IAC7DA,EAAe,uBAAuBA,EAAe,qBAAqB,GAAK,KAIrF,KAAK,MAAM,IAAKvO,EAAUuO,CAAc,EAExC,KAAK,aAAa,IAAKA,EAAgB,KAAK,aAAa,IAAKrW,EAAU,GAIzEA,EAAWqW,CAEZ,CAEAjV,EAAK,SAAWpB,CAEjB,CAEA,iBAAuC,CAEtC,OAAOiQ,EAAAA,oBAER,CASA,aAAc/G,EAAgB,CAE7B,MAAM7E,EAAS,KACTkC,EAAO,KAAK,KACZC,EAAa,KAAK,WAClBqC,EAActC,EAAK,UAAW2C,CAAa,EAEjD,IAAIoN,EACJ,MAAM1N,EAAiB,CAAA,EACjB2N,EAAqB1N,EAAY,YAAc,CAAA,EAE/CC,EAAU,CAAA,EAEhB,GAAKyN,EAAoB3P,EAAW,qBAAwB,CAE3D,MAAM4P,EAAehQ,EAAYI,EAAW,mBAAmB,EAC/D0P,EAAeE,EAAa,gBAAe,EAC3C1N,EAAQ,KAAM0N,EAAa,aAAc5N,EAAgBC,EAAaxE,EAAQ,CAE/E,KAAO,CAKN,MAAM0E,EAAoBF,EAAY,sBAAwB,CAAA,EAK9D,GAHAD,EAAe,MAAQ,IAAIV,EAAAA,MAAO,EAAK,EAAK,CAAG,EAC/CU,EAAe,QAAU,EAEpB,MAAM,QAASG,EAAkB,eAAe,EAAK,CAEzD,MAAMC,EAAQD,EAAkB,gBAEhCH,EAAe,MAAM,OAAQI,EAAO,CAAC,EAAIA,EAAO,GAAKA,EAAO,CAAC,EAAIb,EAAAA,oBAAoB,EACrFS,EAAe,QAAUI,EAAO,CAAC,CAElC,CAEKD,EAAkB,mBAAqB,QAE3CD,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,MAAOG,EAAkB,iBAAkBE,EAAAA,eAAgB,EAIhHL,EAAe,UAAYG,EAAkB,iBAAmB,OAAYA,EAAkB,eAAiB,EAC/GH,EAAe,UAAYG,EAAkB,kBAAoB,OAAYA,EAAkB,gBAAkB,EAE5GA,EAAkB,2BAA6B,SAEnDD,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,eAAgBG,EAAkB,yBAA0B,EAChHD,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,eAAgBG,EAAkB,yBAA0B,GAIjHuN,EAAe,KAAK,WAAY,SAAW7D,EAAM,CAEhD,OAAOA,EAAI,iBAAmBA,EAAI,gBAAiBvJ,CAAa,CAEjE,CAAC,EAEDJ,EAAQ,KAAM,QAAQ,IAAK,KAAK,WAAY,SAAW2J,EAAM,CAE5D,OAAOA,EAAI,sBAAwBA,EAAI,qBAAsBvJ,EAAeN,CAAc,CAE3F,CAAC,CAAE,CAAE,CAEN,CAEKC,EAAY,cAAgB,KAEhCD,EAAe,KAAO6N,EAAAA,YAIvB,MAAMC,EAAY7N,EAAY,WAAaiH,GAAY,OAqBvD,GAnBK4G,IAAc5G,GAAY,OAE9BlH,EAAe,YAAc,GAG7BA,EAAe,WAAa,KAI5BA,EAAe,YAAc,GAExB8N,IAAc5G,GAAY,OAE9BlH,EAAe,UAAYC,EAAY,cAAgB,OAAYA,EAAY,YAAc,KAM1FA,EAAY,gBAAkB,QAAayN,IAAiB3N,EAAAA,oBAEhEG,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,YAAaC,EAAY,cAAe,EAE5FD,EAAe,YAAc,IAAIW,UAAS,EAAG,CAAC,EAEzCV,EAAY,cAAc,QAAU,QAAY,CAEpD,MAAMS,EAAQT,EAAY,cAAc,MAExCD,EAAe,YAAY,IAAKU,EAAOA,CAAK,CAE7C,CAgBD,GAZKT,EAAY,mBAAqB,QAAayN,IAAiB3N,EAAAA,oBAEnEG,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,QAASC,EAAY,iBAAkB,EAEtFA,EAAY,iBAAiB,WAAa,SAE9CD,EAAe,eAAiBC,EAAY,iBAAiB,WAM1DA,EAAY,iBAAmB,QAAayN,IAAiB3N,EAAAA,kBAAoB,CAErF,MAAMgO,EAAiB9N,EAAY,eACnCD,EAAe,SAAW,IAAIV,EAAAA,MAAK,EAAG,OAAQyO,EAAgB,GAAKA,EAAgB,CAAC,EAAIA,EAAgB,CAAC,EAAIxO,EAAAA,oBAAoB,CAElI,CAEA,OAAKU,EAAY,kBAAoB,QAAayN,IAAiB3N,EAAAA,mBAElEG,EAAQ,KAAMzE,EAAO,cAAeuE,EAAgB,cAAeC,EAAY,gBAAiBI,EAAAA,eAAgB,EAI1G,QAAQ,IAAKH,CAAO,EAAG,KAAM,UAAY,CAE/C,MAAM9I,EAAW,IAAIsW,EAAc1N,CAAc,EAEjD,OAAKC,EAAY,OAAO7I,EAAS,KAAO6I,EAAY,MAEpDL,EAAwBxI,EAAU6I,CAAW,EAE7CxE,EAAO,aAAa,IAAKrE,EAAU,CAAE,UAAWkJ,EAAe,EAE1DL,EAAY,YAAasH,EAAgC3J,EAAYxG,EAAU6I,CAAW,EAExF7I,CAER,CAAC,CAEF,CASA,iBAAkB4W,EAAe,CAEhC,MAAMC,EAAgBC,EAAAA,gBAAgB,iBAAkBF,GAAgB,EAAE,EAE1E,OAAKC,KAAiB,KAAK,cAEnBA,EAAgB,KAAQ,EAAG,KAAK,cAAeA,CAAa,GAInE,KAAK,cAAeA,CAAa,EAAK,EAE/BA,EAIT,CAWA,eAAgBE,EAAa,CAE5B,MAAM1S,EAAS,KACTmC,EAAa,KAAK,WAClBwJ,EAAQ,KAAK,eAEnB,SAASgH,EAAsBzM,EAAY,CAE1C,OAAO/D,EAAYI,EAAW,0BAA0B,EACtD,gBAAiB2D,EAAWlG,CAAM,EAClC,KAAM,SAAW7K,EAAW,CAE5B,OAAOyd,GAAwBzd,EAAU+Q,EAAWlG,CAAM,CAE3D,CAAC,CAEH,CAEA,MAAMyE,EAAU,CAAA,EAEhB,QAAUzK,EAAI,EAAGuS,EAAKmG,EAAW,OAAQ1Y,EAAIuS,EAAIvS,IAAO,CAEvD,MAAMkM,EAAYwM,EAAY1Y,CAAC,EACzByJ,EAAWyJ,GAAoBhH,CAAS,EAGxC2M,EAASlH,EAAOlI,CAAQ,EAE9B,GAAKoP,EAGJpO,EAAQ,KAAMoO,EAAO,OAAO,MAEtB,CAEN,IAAIC,EAEC5M,EAAU,YAAcA,EAAU,WAAY3D,EAAW,4BAG7DuQ,EAAkBH,EAAsBzM,CAAS,EAKjD4M,EAAkBF,GAAwB,IAAIG,EAAAA,eAAkB7M,EAAWlG,CAAM,EAKlF2L,EAAOlI,CAAQ,EAAK,CAAE,UAAWyC,EAAW,QAAS4M,CAAe,EAEpErO,EAAQ,KAAMqO,CAAe,CAE9B,CAED,CAEA,OAAO,QAAQ,IAAKrO,CAAO,CAE5B,CASA,SAAUuO,EAAY,CAErB,MAAMhT,EAAS,KACTkC,EAAO,KAAK,KACZC,EAAa,KAAK,WAElB8D,EAAU/D,EAAK,OAAQ8Q,CAAS,EAChCN,EAAazM,EAAQ,WAErBxB,EAAU,CAAA,EAEhB,QAAUzK,EAAI,EAAGuS,EAAKmG,EAAW,OAAQ1Y,EAAIuS,EAAIvS,IAAO,CAEvD,MAAM2B,EAAW+W,EAAY1Y,CAAC,EAAG,WAAa,OAC3C0R,GAAuB,KAAK,KAAK,EACjC,KAAK,cAAe,WAAYgH,EAAY1Y,CAAC,EAAG,QAAQ,EAE3DyK,EAAQ,KAAM9I,CAAQ,CAEvB,CAEA,OAAA8I,EAAQ,KAAMzE,EAAO,eAAgB0S,CAAU,CAAE,EAE1C,QAAQ,IAAKjO,CAAO,EAAG,KAAM,SAAW9Q,EAAU,CAExD,MAAMsf,EAAYtf,EAAQ,MAAO,EAAGA,EAAQ,OAAS,CAAC,EAChDuB,EAAavB,EAASA,EAAQ,OAAS,CAAC,EAExC6S,EAAS,CAAA,EAEf,QAAUxM,EAAI,EAAGuS,EAAKrX,EAAW,OAAQ8E,EAAIuS,EAAIvS,IAAO,CAEvD,MAAM7E,EAAWD,EAAY8E,CAAC,EACxBkM,EAAYwM,EAAY1Y,CAAC,EAI/B,IAAI+C,EAEJ,MAAMpB,EAAWsX,EAAWjZ,CAAC,EAE7B,GAAKkM,EAAU,OAASC,EAAgB,WACtCD,EAAU,OAASC,EAAgB,gBACnCD,EAAU,OAASC,EAAgB,cACnCD,EAAU,OAAS,OAGpBnJ,EAAOkJ,EAAQ,gBAAkB,GAC9B,IAAIiN,EAAAA,YAAa/d,EAAUwG,CAAQ,EACnC,IAAIwX,EAAAA,KAAMhe,EAAUwG,CAAQ,EAE1BoB,EAAK,gBAAkB,IAG3BA,EAAK,qBAAoB,EAIrBmJ,EAAU,OAASC,EAAgB,eAEvCpJ,EAAK,SAAWqC,GAAqBrC,EAAK,SAAUyC,EAAAA,qBAAqB,EAE9D0G,EAAU,OAASC,EAAgB,eAE9CpJ,EAAK,SAAWqC,GAAqBrC,EAAK,SAAUwC,EAAAA,mBAAmB,WAI7D2G,EAAU,OAASC,EAAgB,MAE9CpJ,EAAO,IAAIqW,EAAAA,aAAcje,EAAUwG,CAAQ,UAEhCuK,EAAU,OAASC,EAAgB,WAE9CpJ,EAAO,IAAIsW,EAAAA,KAAMle,EAAUwG,CAAQ,UAExBuK,EAAU,OAASC,EAAgB,UAE9CpJ,EAAO,IAAIuW,EAAAA,SAAUne,EAAUwG,CAAQ,UAE5BuK,EAAU,OAASC,EAAgB,OAE9CpJ,EAAO,IAAIwW,EAAAA,OAAQpe,EAAUwG,CAAQ,MAIrC,OAAM,IAAI,MAAO,iDAAmDuK,EAAU,IAAI,EAI9E,OAAO,KAAMnJ,EAAK,SAAS,eAAe,EAAG,OAAS,GAE1DiQ,GAAoBjQ,EAAMkJ,CAAO,EAIlClJ,EAAK,KAAOiD,EAAO,iBAAkBiG,EAAQ,MAAU,QAAU+M,CAAW,EAE5E7O,EAAwBpH,EAAMkJ,CAAO,EAEhCC,EAAU,YAAa4F,EAAgC3J,EAAYpF,EAAMmJ,CAAS,EAEvFlG,EAAO,oBAAqBjD,CAAI,EAEhCyJ,EAAO,KAAMzJ,CAAI,CAElB,CAEA,QAAU/C,EAAI,EAAGuS,EAAK/F,EAAO,OAAQxM,EAAIuS,EAAIvS,IAE5CgG,EAAO,aAAa,IAAKwG,EAAQxM,CAAC,EAAI,CACrC,OAAQgZ,EACR,WAAYhZ,CACjB,CAAK,EAIF,GAAKwM,EAAO,SAAW,EAEtB,OAAKP,EAAQ,YAAa6F,EAAgC3J,EAAYqE,EAAQ,CAAC,EAAIP,CAAO,EAEnFO,EAAQ,CAAC,EAIjB,MAAMgN,EAAQ,IAAIC,QAEbxN,EAAQ,YAAa6F,EAAgC3J,EAAYqR,EAAOvN,CAAO,EAEpFjG,EAAO,aAAa,IAAKwT,EAAO,CAAE,OAAQR,EAAW,EAErD,QAAUhZ,EAAI,EAAGuS,EAAK/F,EAAO,OAAQxM,EAAIuS,EAAIvS,IAE5CwZ,EAAM,IAAKhN,EAAQxM,EAAG,EAIvB,OAAOwZ,CAER,CAAC,CAEF,CASA,WAAYE,EAAc,CAEzB,IAAIjZ,EACJ,MAAMkZ,EAAY,KAAK,KAAK,QAASD,CAAW,EAC1CE,EAASD,EAAWA,EAAU,IAAI,EAExC,GAAK,CAAEC,EAAS,CAEf,QAAQ,KAAM,8CAA8C,EAC5D,MAED,CAEA,OAAKD,EAAU,OAAS,cAEvBlZ,EAAS,IAAIoZ,EAAAA,kBAAmBC,EAAAA,UAAU,SAAUF,EAAO,MAAQA,EAAO,aAAe,EAAGA,EAAO,OAAS,EAAGA,EAAO,MAAQ,GAAG,EAEtHD,EAAU,OAAS,iBAE9BlZ,EAAS,IAAIsZ,EAAAA,mBAAoB,CAAEH,EAAO,KAAMA,EAAO,KAAMA,EAAO,KAAM,CAAEA,EAAO,KAAMA,EAAO,MAAOA,EAAO,IAAI,GAI9GD,EAAU,OAAOlZ,EAAO,KAAO,KAAK,iBAAkBkZ,EAAU,IAAI,GAEzExP,EAAwB1J,EAAQkZ,CAAS,EAElC,QAAQ,QAASlZ,CAAM,CAE/B,CASA,SAAU+T,EAAY,CAErB,MAAMwF,EAAU,KAAK,KAAK,MAAOxF,CAAS,EAEpC/J,EAAU,CAAA,EAEhB,QAAU,EAAI,EAAG8H,EAAKyH,EAAQ,OAAO,OAAQ,EAAIzH,EAAI,IAEpD9H,EAAQ,KAAM,KAAK,iBAAkBuP,EAAQ,OAAQ,CAAC,EAAI,EAI3D,OAAKA,EAAQ,sBAAwB,OAEpCvP,EAAQ,KAAM,KAAK,cAAe,WAAYuP,EAAQ,oBAAqB,EAI3EvP,EAAQ,KAAM,IAAI,EAIZ,QAAQ,IAAKA,CAAO,EAAG,KAAM,SAAW9Q,EAAU,CAExD,MAAMsgB,EAAsBtgB,EAAQ,IAAG,EACjCugB,EAAavgB,EAKbwgB,EAAQ,CAAA,EACRC,EAAe,CAAA,EAErB,QAAUpa,EAAI,EAAGuS,EAAK2H,EAAW,OAAQla,EAAIuS,EAAIvS,IAAO,CAEvD,MAAMqa,EAAYH,EAAYla,CAAC,EAE/B,GAAKqa,EAAY,CAEhBF,EAAM,KAAME,CAAS,EAErB,MAAMpc,EAAM,IAAI0O,UAEXsN,IAAwB,MAE5Bhc,EAAI,UAAWgc,EAAoB,MAAOja,EAAI,EAAE,EAIjDoa,EAAa,KAAMnc,CAAG,CAEvB,MAEC,QAAQ,KAAM,mDAAoD+b,EAAQ,OAAQha,CAAC,CAAE,CAIvF,CAEA,OAAO,IAAIsa,EAAAA,SAAUH,EAAOC,CAAY,CAEzC,CAAC,CAEF,CASA,cAAeG,EAAiB,CAE/B,MAAMrS,EAAO,KAAK,KACZlC,EAAS,KAETwU,EAAetS,EAAK,WAAYqS,CAAc,EAC9CE,EAAgBD,EAAa,KAAOA,EAAa,KAAO,aAAeD,EAEvEG,EAAe,CAAA,EACfC,EAAwB,CAAA,EACxBC,EAAyB,CAAA,EACzBC,EAAkB,CAAA,EAClBC,EAAiB,CAAA,EAEvB,QAAU9a,EAAI,EAAGuS,EAAKiI,EAAa,SAAS,OAAQxa,EAAIuS,EAAIvS,IAAO,CAElE,MAAM+a,EAAUP,EAAa,SAAUxa,CAAC,EAClC6W,EAAU2D,EAAa,SAAUO,EAAQ,OAAO,EAChDhX,EAASgX,EAAQ,OACjBllB,EAAOkO,EAAO,KACdiX,EAAQR,EAAa,aAAe,OAAYA,EAAa,WAAY3D,EAAQ,OAAUA,EAAQ,MACnGoE,EAAST,EAAa,aAAe,OAAYA,EAAa,WAAY3D,EAAQ,QAAWA,EAAQ,OAEtG9S,EAAO,OAAS,SAErB2W,EAAa,KAAM,KAAK,cAAe,OAAQ7kB,CAAI,CAAE,EACrD8kB,EAAsB,KAAM,KAAK,cAAe,WAAYK,CAAK,CAAE,EACnEJ,EAAuB,KAAM,KAAK,cAAe,WAAYK,CAAM,CAAE,EACrEJ,EAAgB,KAAMhE,CAAO,EAC7BiE,EAAe,KAAM/W,CAAM,EAE5B,CAEA,OAAO,QAAQ,IAAK,CAEnB,QAAQ,IAAK2W,CAAY,EACzB,QAAQ,IAAKC,CAAqB,EAClC,QAAQ,IAAKC,CAAsB,EACnC,QAAQ,IAAKC,CAAe,EAC5B,QAAQ,IAAKC,CAAc,CAE9B,GAAM,KAAM,SAAWzG,EAAe,CAEnC,MAAM6G,EAAQ7G,EAAc,CAAC,EACvB8G,EAAiB9G,EAAc,CAAC,EAChC+G,EAAkB/G,EAAc,CAAC,EACjCgH,EAAWhH,EAAc,CAAC,EAC1BlC,EAAUkC,EAAc,CAAC,EAEzBiH,EAAS,CAAA,EAEf,QAAUtb,EAAI,EAAGuS,EAAK2I,EAAM,OAAQlb,EAAIuS,EAAIvS,IAAO,CAElD,MAAMub,EAAOL,EAAOlb,CAAC,EACfwb,EAAgBL,EAAgBnb,CAAC,EACjCyb,EAAiBL,EAAiBpb,CAAC,EACnC6W,EAAUwE,EAAUrb,CAAC,EACrB+D,EAASoO,EAASnS,CAAC,EAEzB,GAAKub,IAAS,OAAY,SAErBA,EAAK,cAETA,EAAK,aAAY,EAIlB,MAAMG,EAAgB1V,EAAO,uBAAwBuV,EAAMC,EAAeC,EAAgB5E,EAAS9S,CAAM,EAEzG,GAAK2X,EAEJ,QAAUC,GAAI,EAAGA,GAAID,EAAc,OAAQC,KAE1CL,EAAO,KAAMI,EAAeC,GAAG,CAMlC,CAEA,OAAO,IAAIC,EAAAA,cAAenB,EAAe,OAAWa,CAAM,CAE3D,CAAC,CAEF,CAEA,eAAgBjS,EAAY,CAE3B,MAAMnB,EAAO,KAAK,KACZlC,EAAS,KACTuD,EAAUrB,EAAK,MAAOmB,CAAS,EAErC,OAAKE,EAAQ,OAAS,OAAmB,KAElCvD,EAAO,cAAe,OAAQuD,EAAQ,MAAO,KAAM,SAAWxG,EAAO,CAE3E,MAAMwY,EAAOvV,EAAO,YAAaA,EAAO,UAAWuD,EAAQ,KAAMxG,CAAI,EAGrE,OAAKwG,EAAQ,UAAY,QAExBgS,EAAK,SAAU,SAAW,EAAI,CAE7B,GAAO,EAAE,OAET,QAAUvb,EAAI,EAAGuS,EAAKhJ,EAAQ,QAAQ,OAAQvJ,EAAIuS,EAAIvS,IAErD,EAAE,sBAAuBA,CAAC,EAAKuJ,EAAQ,QAASvJ,CAAC,CAInD,CAAC,EAIKub,CAER,CAAC,CAEF,CASA,SAAUlS,EAAY,CAErB,MAAMnB,EAAO,KAAK,KACZlC,EAAS,KAETuD,EAAUrB,EAAK,MAAOmB,CAAS,EAE/BwS,EAAc7V,EAAO,iBAAkBqD,CAAS,EAEhDyS,EAAe,CAAA,EACfC,EAAcxS,EAAQ,UAAY,CAAA,EAExC,QAAUvJ,EAAI,EAAGuS,EAAKwJ,EAAY,OAAQ/b,EAAIuS,EAAIvS,IAEjD8b,EAAa,KAAM9V,EAAO,cAAe,OAAQ+V,EAAa/b,CAAC,EAAI,EAIpE,MAAMgc,EAAkBzS,EAAQ,OAAS,OACtC,QAAQ,QAAS,IAAI,EACrBvD,EAAO,cAAe,OAAQuD,EAAQ,IAAI,EAE7C,OAAO,QAAQ,IAAK,CACnBsS,EACA,QAAQ,IAAKC,CAAY,EACzBE,CACH,GAAM,KAAM,SAAWriB,EAAU,CAE9B,MAAM4hB,EAAO5hB,EAAS,CAAC,EACjBsiB,EAAWtiB,EAAS,CAAC,EACrBuiB,EAAWviB,EAAS,CAAC,EAEtBuiB,IAAa,MAIjBX,EAAK,SAAU,SAAWxY,EAAO,CAEzBA,EAAK,eAEZA,EAAK,KAAMmZ,EAAUrI,EAAe,CAErC,CAAC,EAIF,QAAU7T,EAAI,EAAGuS,EAAK0J,EAAS,OAAQjc,EAAIuS,EAAIvS,IAE9Cub,EAAK,IAAKU,EAAUjc,EAAG,EAIxB,OAAOub,CAER,CAAC,CAEF,CAIA,iBAAkBlS,EAAY,CAE7B,MAAMnB,EAAO,KAAK,KACZC,EAAa,KAAK,WAClBnC,EAAS,KAKf,GAAK,KAAK,UAAWqD,CAAS,IAAO,OAEpC,OAAO,KAAK,UAAWA,CAAS,EAIjC,MAAME,EAAUrB,EAAK,MAAOmB,CAAS,EAG/B8S,EAAW5S,EAAQ,KAAOvD,EAAO,iBAAkBuD,EAAQ,IAAI,EAAK,GAEpEkB,EAAU,CAAA,EAEV2R,EAAcpW,EAAO,WAAY,SAAWoO,EAAM,CAEvD,OAAOA,EAAI,gBAAkBA,EAAI,eAAgB/K,CAAS,CAE3D,CAAC,EAED,OAAK+S,GAEJ3R,EAAQ,KAAM2R,CAAW,EAIrB7S,EAAQ,SAAW,QAEvBkB,EAAQ,KAAMzE,EAAO,cAAe,SAAUuD,EAAQ,MAAM,EAAG,KAAM,SAAW9I,EAAS,CAExF,OAAOuF,EAAO,YAAaA,EAAO,YAAauD,EAAQ,OAAQ9I,CAAM,CAEtE,EAAG,EAIJuF,EAAO,WAAY,SAAWoO,EAAM,CAEnC,OAAOA,EAAI,sBAAwBA,EAAI,qBAAsB/K,CAAS,CAEvE,CAAC,EAAG,QAAS,SAAWuN,EAAU,CAEjCnM,EAAQ,KAAMmM,CAAO,CAEtB,CAAC,EAED,KAAK,UAAWvN,CAAS,EAAK,QAAQ,IAAKoB,CAAO,EAAG,KAAM,SAAW7O,EAAU,CAE/E,IAAI2f,EAqBJ,GAlBKhS,EAAQ,SAAW,GAEvBgS,EAAO,IAAIc,EAAAA,KAEAzgB,EAAQ,OAAS,EAE5B2f,EAAO,IAAI9B,EAAAA,MAEA7d,EAAQ,SAAW,EAE9B2f,EAAO3f,EAAS,CAAC,EAIjB2f,EAAO,IAAIlO,EAAAA,SAIPkO,IAAS3f,EAAS,GAEtB,QAAUoE,EAAI,EAAGuS,EAAK3W,EAAQ,OAAQoE,EAAIuS,EAAIvS,IAE7Cub,EAAK,IAAK3f,EAASoE,EAAG,EAiBxB,GAXKuJ,EAAQ,OAEZgS,EAAK,SAAS,KAAOhS,EAAQ,KAC7BgS,EAAK,KAAOY,GAIbhS,EAAwBoR,EAAMhS,CAAO,EAEhCA,EAAQ,YAAauI,EAAgC3J,EAAYoT,EAAMhS,CAAO,EAE9EA,EAAQ,SAAW,OAAY,CAEnC,MAAM+S,EAAS,IAAI3P,UACnB2P,EAAO,UAAW/S,EAAQ,MAAM,EAChCgS,EAAK,aAAce,CAAM,CAE1B,MAEM/S,EAAQ,cAAgB,QAE5BgS,EAAK,SAAS,UAAWhS,EAAQ,WAAW,EAIxCA,EAAQ,WAAa,QAEzBgS,EAAK,WAAW,UAAWhS,EAAQ,QAAQ,EAIvCA,EAAQ,QAAU,QAEtBgS,EAAK,MAAM,UAAWhS,EAAQ,KAAK,EAMrC,GAAK,CAAEvD,EAAO,aAAa,IAAKuV,CAAI,EAEnCvV,EAAO,aAAa,IAAKuV,EAAM,CAAA,CAAE,UAEtBhS,EAAQ,OAAS,QAAavD,EAAO,UAAU,KAAMuD,EAAQ,IAAI,EAAK,EAAI,CAErF,MAAMgT,EAAUvW,EAAO,aAAa,IAAKuV,CAAI,EAC7CvV,EAAO,aAAa,IAAKuV,EAAM,CAAE,GAAGgB,CAAO,CAAE,CAE9C,CAEA,OAAAvW,EAAO,aAAa,IAAKuV,CAAI,EAAG,MAAQlS,EAEjCkS,CAER,CAAC,EAEM,KAAK,UAAWlS,CAAS,CAEjC,CASA,UAAWmT,EAAa,CAEvB,MAAMrU,EAAa,KAAK,WAClBsU,EAAW,KAAK,KAAK,OAAQD,CAAU,EACvCxW,EAAS,KAITpJ,EAAQ,IAAI6c,QACbgD,EAAS,OAAO7f,EAAM,KAAOoJ,EAAO,iBAAkByW,EAAS,IAAI,GAExEtS,EAAwBvN,EAAO6f,CAAQ,EAElCA,EAAS,YAAa3K,EAAgC3J,EAAYvL,EAAO6f,CAAQ,EAEtF,MAAMC,EAAUD,EAAS,OAAS,CAAA,EAE5BhS,EAAU,CAAA,EAEhB,QAAUzK,EAAI,EAAGuS,EAAKmK,EAAQ,OAAQ1c,EAAIuS,EAAIvS,IAE7CyK,EAAQ,KAAMzE,EAAO,cAAe,OAAQ0W,EAAS1c,CAAC,EAAI,EAI3D,OAAO,QAAQ,IAAKyK,CAAO,EAAG,KAAM,SAAWyQ,EAAQ,CAEtD,QAAUlb,EAAI,EAAGuS,EAAK2I,EAAM,OAAQlb,EAAIuS,EAAIvS,IAE3CpD,EAAM,IAAKse,EAAOlb,EAAG,EAMtB,MAAM2c,EAAuBpB,GAAU,CAEtC,MAAMqB,EAAsB,IAAI,IAEhC,SAAY,CAAE1iB,EAAKC,CAAK,IAAM6L,EAAO,cAE/B9L,aAAe2d,EAAAA,UAAY3d,aAAeid,YAE9CyF,EAAoB,IAAK1iB,EAAKC,CAAK,EAMrC,OAAAohB,EAAK,SAAYA,GAAU,CAE1B,MAAMxG,EAAW/O,EAAO,aAAa,IAAKuV,CAAI,EAEzCxG,GAAY,MAEhB6H,EAAoB,IAAKrB,EAAMxG,CAAQ,CAIzC,CAAC,EAEM6H,CAER,EAEA,OAAA5W,EAAO,aAAe2W,EAAoB/f,CAAK,EAExCA,CAER,CAAC,CAEF,CAEA,uBAAwB2e,EAAMC,EAAeC,EAAgB5E,EAAS9S,EAAS,CAE9E,MAAMuX,EAAS,CAAA,EAETuB,EAAatB,EAAK,KAAOA,EAAK,KAAOA,EAAK,KAC1CtI,EAAc,CAAA,EAEf5B,EAAiBtN,EAAO,IAAI,IAAOsN,EAAgB,QAEvDkK,EAAK,SAAU,SAAW7lB,EAAS,CAE7BA,EAAO,uBAEXud,EAAY,KAAMvd,EAAO,KAAOA,EAAO,KAAOA,EAAO,IAAI,CAI3D,CAAC,EAIDud,EAAY,KAAM4J,CAAU,EAI7B,IAAIC,EAEJ,OAASzL,EAAiBtN,EAAO,IAAI,EAAE,CAEtC,KAAKsN,EAAgB,QAEpByL,EAAqBC,EAAAA,oBACrB,MAED,KAAK1L,EAAgB,SAEpByL,EAAqBE,EAAAA,wBACrB,MAED,KAAK3L,EAAgB,YACrB,KAAKA,EAAgB,MAEpByL,EAAqBG,EAAAA,oBACrB,MAED,QAEC,OAASxB,EAAe,SAAQ,CAE/B,IAAK,GACJqB,EAAqBC,EAAAA,oBACrB,MACD,IAAK,GACL,IAAK,GACL,QACCD,EAAqBG,EAAAA,oBACrB,KAEN,CAEI,KAEJ,CAEE,MAAMC,EAAgBrG,EAAQ,gBAAkB,OAAYvF,GAAeuF,EAAQ,aAAa,EAAKtF,EAAAA,kBAG/F4L,EAAc,KAAK,sBAAuB1B,CAAc,EAE9D,QAAU2B,EAAI,EAAGC,EAAKpK,EAAY,OAAQmK,EAAIC,EAAID,IAAO,CAExD,MAAME,EAAQ,IAAIR,EACjB7J,EAAamK,CAAC,EAAK,IAAM/L,EAAiBtN,EAAO,IAAI,EACrDyX,EAAc,MACd2B,EACAD,CACJ,EAGQrG,EAAQ,gBAAkB,eAE9B,KAAK,mCAAoCyG,CAAK,EAI/ChC,EAAO,KAAMgC,CAAK,CAEnB,CAEA,OAAOhC,CAER,CAEA,sBAAuBhP,EAAW,CAEjC,IAAI6Q,EAAc7Q,EAAS,MAE3B,GAAKA,EAAS,WAAa,CAE1B,MAAMrB,EAAQwI,GAA6B0J,EAAY,WAAW,EAC5DI,EAAS,IAAI,aAAcJ,EAAY,MAAM,EAEnD,QAAUC,EAAI,EAAGC,EAAKF,EAAY,OAAQC,EAAIC,EAAID,IAEjDG,EAAQH,CAAC,EAAKD,EAAaC,CAAC,EAAKnS,EAIlCkS,EAAcI,CAEf,CAEA,OAAOJ,CAER,CAEA,mCAAoCG,EAAQ,CAE3CA,EAAM,kBAAoB,SAAkD1jB,EAAS,CAMpF,MAAM4jB,EAAoB,gBAAgBR,EAAAA,wBAA4BxM,GAAuC5B,GAE7G,OAAO,IAAI4O,EAAiB,KAAK,MAAO,KAAK,OAAQ,KAAK,aAAY,EAAK,EAAG5jB,CAAM,CAErF,EAGA0jB,EAAM,kBAAkB,0CAA4C,EAErE,CAED,CASA,SAASG,GAAetiB,EAAUgY,EAAcnN,EAAS,CAExD,MAAMqG,EAAa8G,EAAa,WAE1BrQ,EAAM,IAAI4a,OAEhB,GAAKrR,EAAW,WAAa,OAAY,CAExC,MAAMC,EAAWtG,EAAO,KAAK,UAAWqG,EAAW,QAAQ,EAErD5S,EAAM6S,EAAS,IACf5S,EAAM4S,EAAS,IAIrB,GAAK7S,IAAQ,QAAaC,IAAQ,QAOjC,GALAoJ,EAAI,IACH,IAAI+J,EAAAA,QAASpT,EAAK,CAAC,EAAIA,EAAK,CAAC,EAAIA,EAAK,EAAG,EACzC,IAAIoT,EAAAA,QAASnT,EAAK,CAAC,EAAIA,EAAK,CAAC,EAAIA,EAAK,CAAC,CAAE,CAC7C,EAEQ4S,EAAS,WAAa,CAE1B,MAAMqR,EAAWlK,GAA6BjF,EAAuBlC,EAAS,aAAa,CAAE,EAC7FxJ,EAAI,IAAI,eAAgB6a,CAAQ,EAChC7a,EAAI,IAAI,eAAgB6a,CAAQ,CAEjC,MAEM,CAEN,QAAQ,KAAM,qEAAqE,EAEnF,MAED,CAED,KAEC,QAID,MAAMxL,EAAUgB,EAAa,QAE7B,GAAKhB,IAAY,OAAY,CAE5B,MAAMyL,EAAkB,IAAI/Q,UACtBgR,EAAS,IAAIhR,UAEnB,QAAU7M,EAAI,EAAGuS,EAAKJ,EAAQ,OAAQnS,EAAIuS,EAAIvS,IAAO,CAEpD,MAAM+D,EAASoO,EAASnS,CAAC,EAEzB,GAAK+D,EAAO,WAAa,OAAY,CAEpC,MAAMuI,EAAWtG,EAAO,KAAK,UAAWjC,EAAO,QAAQ,EACjDtK,EAAM6S,EAAS,IACf5S,EAAM4S,EAAS,IAIrB,GAAK7S,IAAQ,QAAaC,IAAQ,OAAY,CAQ7C,GALAmkB,EAAO,KAAM,KAAK,IAAK,KAAK,IAAKpkB,EAAK,CAAC,CAAE,EAAI,KAAK,IAAKC,EAAK,CAAC,CAAE,CAAE,CAAE,EACnEmkB,EAAO,KAAM,KAAK,IAAK,KAAK,IAAKpkB,EAAK,CAAC,CAAE,EAAI,KAAK,IAAKC,EAAK,CAAC,CAAE,CAAE,CAAE,EACnEmkB,EAAO,KAAM,KAAK,IAAK,KAAK,IAAKpkB,EAAK,CAAC,CAAE,EAAI,KAAK,IAAKC,EAAK,CAAC,CAAE,CAAE,CAAE,EAG9D4S,EAAS,WAAa,CAE1B,MAAMqR,EAAWlK,GAA6BjF,EAAuBlC,EAAS,aAAa,CAAE,EAC7FuR,EAAO,eAAgBF,CAAQ,CAEhC,CAMAC,EAAgB,IAAKC,CAAM,CAE5B,MAEC,QAAQ,KAAM,qEAAqE,CAIrF,CAED,CAGA/a,EAAI,eAAgB8a,CAAe,CAEpC,CAEAziB,EAAS,YAAc2H,EAEvB,MAAMgb,EAAS,IAAIC,SAEnBjb,EAAI,UAAWgb,EAAO,MAAM,EAC5BA,EAAO,OAAShb,EAAI,IAAI,WAAYA,EAAI,GAAG,EAAK,EAEhD3H,EAAS,eAAiB2iB,CAE3B,CAUA,SAASlF,GAAwBzd,EAAUgY,EAAcnN,EAAS,CAEjE,MAAMqG,EAAa8G,EAAa,WAE1B1I,EAAU,CAAA,EAEhB,SAASuT,EAAyB3I,EAAenI,EAAgB,CAEhE,OAAOlH,EAAO,cAAe,WAAYqP,CAAa,EACpD,KAAM,SAAW/I,EAAW,CAE5BnR,EAAS,aAAc+R,EAAeZ,CAAQ,CAE/C,CAAC,CAEH,CAEA,UAAY2R,KAAqB5R,EAAa,CAE7C,MAAM+B,EAAqBC,GAAY4P,CAAiB,GAAMA,EAAkB,YAAW,EAGtF7P,KAAsBjT,EAAS,YAEpCsP,EAAQ,KAAMuT,EAAyB3R,EAAY4R,CAAiB,EAAI7P,EAAoB,CAE7F,CAEA,GAAK+E,EAAa,UAAY,QAAa,CAAEhY,EAAS,MAAQ,CAE7D,MAAMmR,EAAWtG,EAAO,cAAe,WAAYmN,EAAa,OAAO,EAAG,KAAM,SAAW7G,EAAW,CAErGnR,EAAS,SAAUmR,CAAQ,CAE5B,CAAC,EAED7B,EAAQ,KAAM6B,CAAQ,CAEvB,CAEA,OAAK4R,EAAAA,gBAAgB,oBAAsBpU,wBAAwB,YAAauC,GAE/E,QAAQ,KAAM,qEAAqE6R,EAAAA,gBAAgB,iBAAiB,kBAAkB,EAIvI/T,EAAwBhP,EAAUgY,CAAY,EAE9CsK,GAAetiB,EAAUgY,EAAcnN,CAAM,EAEtC,QAAQ,IAAKyE,CAAO,EAAG,KAAM,UAAY,CAE/C,OAAO0I,EAAa,UAAY,OAC7BjB,GAAiB/W,EAAUgY,EAAa,QAASnN,CAAM,EACvD7K,CAEJ,CAAC,CAEF,CC3vJA,MAAMgjB,GAAa,IAAI,QAkCvB,MAAMC,WAAoBtY,EAAAA,MAAO,CAOhC,YAAaC,EAAU,CAEtB,MAAOA,CAAO,EAEd,KAAK,YAAc,GACnB,KAAK,cAAgB,CAAA,EACrB,KAAK,cAAgB,KACrB,KAAK,eAAiB,KAEtB,KAAK,YAAc,EACnB,KAAK,WAAa,CAAA,EAClB,KAAK,iBAAmB,EACxB,KAAK,gBAAkB,GAEvB,KAAK,oBAAsB,CAC1B,SAAU,WACV,OAAQ,SACR,MAAO,QACP,GAAI,WACP,EACE,KAAK,sBAAwB,CAC5B,SAAU,eACV,OAAQ,eACR,MAAO,eACP,GAAI,cACP,CAEC,CAQA,eAAgBkC,EAAO,CAEtB,YAAK,YAAcA,EAEZ,IAER,CAQA,iBAAkB9I,EAAS,CAE1B,YAAK,cAAgBA,EAEd,IAER,CASA,eAAgBkf,EAAc,CAE7B,YAAK,YAAcA,EAEZ,IAER,CAWA,KAAMnX,EAAKC,EAAQC,EAAYC,EAAU,CAExC,MAAMpD,EAAS,IAAI2D,aAAY,KAAK,OAAO,EAE3C3D,EAAO,QAAS,KAAK,IAAI,EACzBA,EAAO,gBAAiB,aAAa,EACrCA,EAAO,iBAAkB,KAAK,aAAa,EAC3CA,EAAO,mBAAoB,KAAK,eAAe,EAE/CA,EAAO,KAAMiD,EAAOyE,GAAY,CAE/B,KAAK,MAAOA,EAAQxE,EAAQE,CAAO,CAEpC,EAAGD,EAAYC,CAAO,CAEvB,CASA,MAAOsE,EAAQxE,EAAQE,EAAU,IAAI,CAAC,EAAI,CAEzC,KAAK,gBAAiBsE,EAAQxE,EAAQ,KAAM,KAAMyD,EAAAA,eAAgBvD,CAAO,EAAG,MAAOA,CAAO,CAE3F,CAIA,gBAAiBsE,EAAQzU,EAAUonB,EAAcC,EAAgBC,EAAmB1U,uBAAsBzC,EAAU,IAAM,CAAC,EAAI,CAE9H,MAAMoX,EAAa,CAClB,aAAcH,GAAgB,KAAK,oBACnC,eAAgBC,GAAkB,KAAK,sBACvC,aAAc,CAAC,CAAED,EACjB,iBAAkBE,CACrB,EAEE,OAAO,KAAK,eAAgB7S,EAAQ8S,CAAU,EAAG,KAAMvnB,CAAQ,EAAG,MAAOmQ,CAAO,CAEjF,CAEA,eAAgBsE,EAAQ8S,EAAa,CAEpC,MAAMC,EAAU,KAAK,UAAWD,CAAU,EAI1C,GAAKN,GAAW,IAAKxS,GAAW,CAE/B,MAAMgT,EAAaR,GAAW,IAAKxS,CAAM,EAEzC,GAAKgT,EAAW,MAAQD,EAEvB,OAAOC,EAAW,QAEZ,GAAKhT,EAAO,aAAe,EAMjC,MAAM,IAAI,MAET,+GAGL,CAIE,CAIA,IAAIiT,EACJ,MAAMC,EAAS,KAAK,mBACdC,EAAWnT,EAAO,WAIlBoT,EAAkB,KAAK,WAAYF,EAAQC,CAAQ,EACvD,KAAQE,IAERJ,EAASI,EAEF,IAAI,QAAS,CAAE/V,EAASC,IAAY,CAE1C0V,EAAO,WAAYC,CAAM,EAAK,CAAE,QAAA5V,EAAS,OAAAC,CAAM,EAE/C0V,EAAO,YAAa,CAAE,KAAM,SAAU,GAAIC,EAAQ,WAAAJ,EAAY,OAAA9S,GAAU,CAAEA,CAAM,CAAE,CAInF,CAAC,EAED,EACA,KAAQsT,GAAa,KAAK,gBAAiBA,EAAQ,SAAU,EAI/D,OAAAF,EACE,MAAO,IAAM,EAAI,EACjB,KAAM,IAAM,CAEPH,GAAUC,GAEd,KAAK,aAAcD,EAAQC,CAAM,CAMnC,CAAC,EAGFV,GAAW,IAAKxS,EAAQ,CAEvB,IAAK+S,EACL,QAASK,CAEZ,CAAG,EAEMA,CAER,CAEA,gBAAiBG,EAAe,CAE/B,MAAM/jB,EAAW,IAAI4d,iBAEhBmG,EAAa,OAEjB/jB,EAAS,SAAU,IAAIqa,EAAAA,gBAAiB0J,EAAa,MAAM,MAAO,EAAG,EAItE,QAAUlf,EAAI,EAAGA,EAAIkf,EAAa,WAAW,OAAQlf,IAAO,CAE3D,MAAMpG,EAASslB,EAAa,WAAYlf,CAAC,EACnCnK,EAAO+D,EAAO,KACd+Q,EAAQ/Q,EAAO,MACf0b,EAAW1b,EAAO,SAElB6U,EAAY,IAAI+G,kBAAiB7K,EAAO2K,CAAQ,EAEjDzf,IAAS,UAEb,KAAK,wBAAyB4Y,EAAW7U,EAAO,gBAAgB,EAEhE6U,EAAU,WAAe,EAAA9D,aAAiB,eAI3CxP,EAAS,aAActF,EAAM4Y,CAAS,CAEvC,CAEA,OAAOtT,CAER,CAEA,wBAAyBsT,EAAW0Q,EAAkB,CAOrD,GAAKA,IAAoBvU,EAAAA,eAAiB,OAE1C,MAAMwU,EAAS,IAAIvV,QAEnB,QAAU,EAAI,EAAG0I,EAAK9D,EAAU,MAAO,EAAI8D,EAAI,IAE9C6M,EAAO,oBAAqB3Q,EAAW,CAAC,EACxCyP,kBAAgB,oBAAqBkB,EAAQxU,gBAAc,EAC3D6D,EAAU,OAAQ,EAAG2Q,EAAO,EAAGA,EAAO,EAAGA,EAAO,CAAC,CAInD,CAEA,aAAclY,EAAKmY,EAAe,CAEjC,MAAMpb,EAAS,IAAI2D,aAAY,KAAK,OAAO,EAC3C,OAAA3D,EAAO,QAAS,KAAK,WAAW,EAChCA,EAAO,gBAAiBob,CAAY,EACpCpb,EAAO,mBAAoB,KAAK,eAAe,EAExC,IAAI,QAAS,CAAEgF,EAASC,IAAY,CAE1CjF,EAAO,KAAMiD,EAAK+B,EAAS,OAAWC,CAAM,CAE7C,CAAC,CAEF,CAEA,SAAU,CAET,YAAK,aAAY,EAEV,IAER,CAEA,cAAe,CAEd,GAAK,KAAK,eAAiB,OAAO,KAAK,eAEvC,MAAMoW,EAAQ,OAAO,aAAgB,UAAY,KAAK,cAAc,OAAS,KACvEC,EAAmB,CAAA,EAEzB,OAAKD,EAEJC,EAAiB,KAAM,KAAK,aAAc,mBAAoB,MAAM,CAAE,GAItEA,EAAiB,KAAM,KAAK,aAAc,wBAAyB,MAAM,CAAE,EAC3EA,EAAiB,KAAM,KAAK,aAAc,qBAAsB,aAAa,CAAE,GAIhF,KAAK,eAAiB,QAAQ,IAAKA,CAAgB,EACjD,KAAQC,GAAe,CAEvB,MAAMC,EAAYD,EAAW,CAAC,EAEvBF,IAEN,KAAK,cAAc,WAAaE,EAAW,CAAC,GAI7C,MAAME,EAAKC,GAAY,SAAQ,EAEzBC,EAAO,CACZ,sBACAH,EACA,GACA,eACAC,EAAG,UAAWA,EAAG,QAAS,GAAG,EAAK,EAAGA,EAAG,YAAa,GAAG,CAAE,CAC/D,EAAM,KAAM;AAAA,CAAI,EAEZ,KAAK,gBAAkB,IAAI,gBAAiB,IAAI,KAAM,CAAEE,CAAI,EAAI,CAEjE,CAAC,EAEK,KAAK,cAEb,CAEA,WAAYf,EAAQC,EAAW,CAE9B,OAAO,KAAK,eAAe,KAAM,IAAM,CAEtC,GAAK,KAAK,WAAW,OAAS,KAAK,YAAc,CAEhD,MAAMF,EAAS,IAAI,OAAQ,KAAK,eAAe,EAE/CA,EAAO,WAAa,CAAA,EACpBA,EAAO,WAAa,CAAA,EACpBA,EAAO,UAAY,EAEnBA,EAAO,YAAa,CAAE,KAAM,OAAQ,cAAe,KAAK,cAAe,EAEvEA,EAAO,UAAY,SAAWjX,EAAI,CAEjC,MAAMsX,EAAUtX,EAAE,KAElB,OAASsX,EAAQ,KAAI,CAEpB,IAAK,SACJL,EAAO,WAAYK,EAAQ,EAAE,EAAG,QAASA,CAAO,EAChD,MAED,IAAK,QACJL,EAAO,WAAYK,EAAQ,EAAE,EAAG,OAAQA,CAAO,EAC/C,MAED,QACC,QAAQ,MAAO,2CAA6CA,EAAQ,KAAO,GAAG,CAErF,CAEI,EAEA,KAAK,WAAW,KAAML,CAAM,CAE7B,MAEC,KAAK,WAAW,KAAM,SAAWhmB,EAAGC,EAAI,CAEvC,OAAOD,EAAE,UAAYC,EAAE,UAAY,GAAM,CAE1C,CAAC,EAIF,MAAM+lB,EAAS,KAAK,WAAY,KAAK,WAAW,OAAS,CAAC,EAC1D,OAAAA,EAAO,WAAYC,CAAM,EAAKC,EAC9BF,EAAO,WAAaE,EACbF,CAER,CAAC,CAEF,CAEA,aAAcA,EAAQC,EAAS,CAE9BD,EAAO,WAAaA,EAAO,WAAYC,CAAM,EAC7C,OAAOD,EAAO,WAAYC,CAAM,EAChC,OAAOD,EAAO,WAAYC,CAAM,CAEjC,CAEA,OAAQ,CAEP,QAAQ,IAAK,cAAe,KAAK,WAAW,IAAOD,GAAYA,EAAO,UAAW,CAElF,CAEA,SAAU,CAET,QAAU5e,EAAI,EAAGA,EAAI,KAAK,WAAW,OAAQ,EAAGA,EAE/C,KAAK,WAAYA,CAAC,EAAG,UAAS,EAI/B,YAAK,WAAW,OAAS,EAEpB,KAAK,kBAAoB,IAE7B,IAAI,gBAAiB,KAAK,eAAe,EAInC,IAER,CAED,CAIA,SAAS2f,IAAc,CAEtB,IAAIE,EACAC,EAEJ,UAAY,SAAWnY,EAAI,CAE1B,MAAMsX,EAAUtX,EAAE,KAElB,OAASsX,EAAQ,KAAI,CAEpB,IAAK,OACJY,EAAgBZ,EAAQ,cACxBa,EAAiB,IAAI,QAAS,SAAW7W,EAAsB,CAE9D4W,EAAc,eAAiB,SAAWE,EAAQ,CAGjD9W,EAAS,CAAE,MAAO8W,EAAO,CAE1B,EAEA,mBAAoBF,CAAa,CAElC,CAAC,EACD,MAED,IAAK,SACJ,MAAMlU,EAASsT,EAAQ,OACjBR,EAAaQ,EAAQ,WAC3Ba,EAAe,KAAQE,GAAY,CAElC,MAAMD,EAAQC,EAAO,MACfpU,EAAU,IAAImU,EAAM,QAE1B,GAAI,CAEH,MAAM5kB,EAAW8kB,EAAgBF,EAAOnU,EAAS,IAAI,UAAWD,CAAM,EAAI8S,CAAU,EAE9EyB,EAAU/kB,EAAS,WAAW,IAAOgS,GAAUA,EAAK,MAAM,MAAM,EAEjEhS,EAAS,OAAQ+kB,EAAQ,KAAM/kB,EAAS,MAAM,MAAM,MAAM,EAE/D,KAAK,YAAa,CAAE,KAAM,SAAU,GAAI8jB,EAAQ,GAAI,SAAA9jB,CAAQ,EAAI+kB,CAAO,CAExE,OAAU1pB,EAAQ,CAEjB,QAAQ,MAAOA,CAAK,EAEpB,KAAK,YAAa,CAAE,KAAM,QAAS,GAAIyoB,EAAQ,GAAI,MAAOzoB,EAAM,OAAO,CAAE,CAE1E,QAAC,CAEAupB,EAAM,QAASnU,CAAO,CAEvB,CAED,CAAC,EACD,KAEJ,CAEC,EAEA,SAASqU,EAAgBF,EAAOnU,EAASjB,EAAO8T,EAAa,CAE5D,MAAMH,EAAeG,EAAW,aAC1BF,EAAiBE,EAAW,eAElC,IAAI0B,EACAC,EAEJ,MAAMC,EAAezU,EAAQ,uBAAwBjB,CAAK,EAE1D,GAAK0V,IAAiBN,EAAM,gBAE3BI,EAAgB,IAAIJ,EAAM,KAC1BK,EAAiBxU,EAAQ,kBAAmBjB,EAAOA,EAAM,WAAYwV,CAAa,UAEvEE,IAAiBN,EAAM,YAElCI,EAAgB,IAAIJ,EAAM,WAC1BK,EAAiBxU,EAAQ,wBAAyBjB,EAAOA,EAAM,WAAYwV,CAAa,MAIxF,OAAM,IAAI,MAAO,8CAA8C,EAIhE,GAAK,CAAEC,EAAe,GAAE,GAAMD,EAAc,MAAQ,EAEnD,MAAM,IAAI,MAAO,uCAAyCC,EAAe,UAAS,CAAE,EAIrF,MAAMjlB,EAAW,CAAE,MAAO,KAAM,WAAY,CAAA,CAAE,EAG9C,UAAY+R,KAAiBoR,EAAe,CAE3C,MAAMgC,EAAgB,KAAM/B,EAAgBrR,CAAa,CAAE,EAE3D,IAAIuB,EACA8R,EAMJ,GAAK9B,EAAW,aAEf8B,EAAcjC,EAAcpR,CAAa,EACzCuB,EAAY7C,EAAQ,uBAAwBuU,EAAeI,CAAW,MAEhE,CAIN,GAFAA,EAAc3U,EAAQ,eAAgBuU,EAAeJ,EAAOzB,EAAcpR,CAAa,EAAI,EAEtFqT,IAAgB,GAAM,SAE3B9R,EAAY7C,EAAQ,aAAcuU,EAAeI,CAAW,CAE7D,CAEA,MAAMC,EAAkBC,EAAiBV,EAAOnU,EAASuU,EAAejT,EAAeoT,EAAe7R,CAAS,EAE1GvB,IAAkB,UAEtBsT,EAAgB,iBAAmB/B,EAAW,kBAI/CtjB,EAAS,WAAW,KAAMqlB,CAAe,CAE1C,CAGA,OAAKH,IAAiBN,EAAM,kBAE3B5kB,EAAS,MAAQulB,EAAaX,EAAOnU,EAASuU,CAAa,GAI5DJ,EAAM,QAASI,CAAa,EAErBhlB,CAER,CAEA,SAASulB,EAAaX,EAAOnU,EAASuU,EAAgB,CAGrD,MAAMQ,EADWR,EAAc,UAAS,EACV,EACxBpU,EAAa4U,EAAa,EAE1BC,EAAMb,EAAM,QAAShU,CAAU,EACrCH,EAAQ,wBAAyBuU,EAAepU,EAAY6U,CAAG,EAC/D,MAAM/pB,EAAQ,IAAI,YAAakpB,EAAM,QAAQ,OAAQa,EAAKD,CAAU,EAAG,MAAK,EAC5E,OAAAZ,EAAM,MAAOa,CAAG,EAET,CAAE,MAAO/pB,EAAO,SAAU,CAAC,CAEnC,CAEA,SAAS4pB,EAAiBV,EAAOnU,EAASuU,EAAejT,EAAeoT,EAAe7R,EAAY,CAElG,MAAMoS,EAAgBpS,EAAU,eAAc,EAExCqS,EADYX,EAAc,WAAU,EACZU,EACxB9U,EAAa+U,EAAYR,EAAc,kBACvCS,EAAWC,EAAkBjB,EAAOO,CAAa,EAEjDM,EAAMb,EAAM,QAAShU,CAAU,EACrCH,EAAQ,kCAAmCuU,EAAe1R,EAAWsS,EAAUhV,EAAY6U,CAAG,EAC9F,MAAMjW,EAAQ,IAAI2V,EAAeP,EAAM,QAAQ,OAAQa,EAAKE,CAAS,EAAG,MAAK,EAC7E,OAAAf,EAAM,MAAOa,CAAG,EAET,CACN,KAAM1T,EACN,MAAOvC,EACP,SAAUkW,CACb,CAEC,CAEA,SAASG,EAAkBjB,EAAOO,EAAgB,CAEjD,OAASA,EAAa,CAErB,KAAK,aAAc,OAAOP,EAAM,WAChC,KAAK,UAAW,OAAOA,EAAM,QAC7B,KAAK,WAAY,OAAOA,EAAM,SAC9B,KAAK,WAAY,OAAOA,EAAM,SAC9B,KAAK,WAAY,OAAOA,EAAM,SAC9B,KAAK,YAAa,OAAOA,EAAM,UAC/B,KAAK,YAAa,OAAOA,EAAM,SAElC,CAEC,CAED,CCjnBO,MAAMkB,WAAwBzrB,CAAW,CA2C5C,YAAYsG,EAA2B,CACnC,MAAA,EA3CJrG,EAAA,YAAO,mBAGCA,EAAA,eAcAA,EAAA,mBAGAA,EAAA,mBAAkC,MAGlCA,EAAA,wBAAmB,KAGnBA,EAAA,yBAAoB,KAGpBA,EAAA,kBAAa,KAEbA,EAAA,iBAAkC,MAGlCA,EAAA,oBACAA,EAAA,kBAWJ,KAAK,OAAS,CACV,YAAa,GACb,iBAAkB,UAClB,aAAc,GACd,eAAgB,GAChB,gBAAiB,CACb,UAAW,GACX,UAAW,EACX,gBAAiB,CAAA,EAErB,MAAO,IAAIiI,EAAM,QAAQ,EAAG,EAAG,CAAC,EAChC,SAAU,IAAIA,EAAM,QAAQ,EAAG,EAAG,CAAC,EACnC,SAAU,IAAIA,EAAM,MAAM,EAAG,EAAG,CAAC,EACjC,UAAW,KACX,iBAAkB,KAClB,GAAG5B,CAAA,EAIP,KAAK,WAAa,IAAI+J,GAGtB,KAAK,iBAAA,EAGL,KAAK,YAAc,IAAItO,EACnB,IAAM,IAAImG,EAAM,QACfC,GAAQA,EAAI,IAAI,EAAG,EAAG,CAAC,CAAA,EAG5B,KAAK,UAAY,IAAIpG,EACjB,IAAM,IAAImG,EAAM,MACfwjB,GAAUA,EAAM,IAAI,EAAG,EAAG,CAAC,CAAA,CAEpC,CAKgB,OAAc,QAC1BxqB,EAAA,MAAM,QAAN,MAAAA,EAAA,UACJ,CAKgB,UAAiB,QAC7BA,EAAA,MAAM,WAAN,MAAAA,EAAA,UACJ,CAEA,MAAsB,OAAuB,QACzCA,EAAA,MAAM,QAAN,MAAAA,EAAA,UACJ,CAEgB,OAAOqF,EAAyB,QAC5CrF,EAAA,MAAM,SAAN,MAAAA,EAAA,UAAeqF,GACf,UAAWolB,KAAS,KAAK,OAAO,OAAA,EAC5BA,EAAM,OAAOplB,CAAS,CAE9B,CAEgB,UAAiB,CAC7B,MAAM,SAAA,CACV,CAEgB,WAAkB,QAC9BrF,EAAA,MAAM,YAAN,MAAAA,EAAA,UACJ,CAEgB,SAAgB,QAC5BA,EAAA,MAAM,UAAN,MAAAA,EAAA,WACA,KAAK,OAAO,MAAA,EACZ,KAAK,aAAa,MAAA,EAClB,KAAK,cAAc,MAAA,EACf,KAAK,cACL,KAAK,YAAY,QAAA,EACjB,KAAK,YAAc,KAE3B,CASQ,kBAAyB,CAC7B,GAAI,KAAK,OAAO,YACZ,GAAI,CACA,KAAK,YAAc,IAAI0nB,GACvB,KAAK,YAAY,eAAe,KAAK,OAAO,gBAAgB,EAC5D,KAAK,WAAW,eAAe,KAAK,WAAW,CACnD,OAAS5nB,EAAO,CACZ,QAAQ,KAAK,6CAA8CA,CAAK,EAChE,KAAK,OAAO,YAAc,EAC9B,CAER,CAKQ,cAAcoD,EAA6B,CAC1C,KAAK,OAAO,cAEjBA,EAAO,MAAM,SAAUuC,GAAU,CAC7B,GAAIA,aAAiBuB,EAAM,KAAM,CAM7B,GAJAvB,EAAM,WAAa,GACnBA,EAAM,cAAgB,GAGlB,KAAK,OAAO,iBACZA,EAAM,SAAW,KAAK,OAAO,yBAGxBA,EAAM,oBAAoBuB,EAAM,qBAAsB,CAC3D,MAAMiE,EAAWxF,EAAM,SACjBilB,EAAa,KAAK,OAAO,gBAG3BA,EAAW,YAAc,SACzBzf,EAAS,UAAYyf,EAAW,WAEhCA,EAAW,YAAc,SACzBzf,EAAS,UAAYyf,EAAW,WAEhCA,EAAW,kBAAoB,SAC/Bzf,EAAS,gBAAkByf,EAAW,iBAI1Czf,EAAS,MAAM,OAAO,OAAQ,EAE9BA,EAAS,YAAc,EAC3B,CAGIxF,EAAM,WAEDA,EAAM,SAAS,aAChBA,EAAM,SAAS,mBAAA,EAEdA,EAAM,SAAS,gBAChBA,EAAM,SAAS,sBAAA,EAG3B,CACJ,CAAC,CACL,CAOQ,gBAAgBklB,EAA0B,CAE9C,MAAMpW,EAAQ,KAAK,YAAY,QAAA,EACzBnH,EAAW,KAAK,YAAY,QAAA,EAC5Bwd,EAAW,KAAK,UAAU,QAAA,EAEhCrW,EAAM,KAAK,KAAK,OAAO,KAAK,EAC5BnH,EAAS,KAAK,KAAK,OAAO,QAAQ,EAClCwd,EAAS,KAAK,KAAK,OAAO,QAAQ,EAElCD,EAAM,MAAM,KAAKpW,CAAK,EACtBoW,EAAM,SAAS,KAAKvd,CAAQ,EAC5Bud,EAAM,SAAS,KAAKC,CAAQ,EAG5B,KAAK,YAAY,QAAQrW,CAAK,EAC9B,KAAK,YAAY,QAAQnH,CAAQ,EACjC,KAAK,UAAU,QAAQwd,CAAQ,CACnC,CAUQ,qBAAqBD,EAAuBE,EAAmCra,EAAa,CAChG,MAAMia,EAAQ,IAAIzjB,EAAM,eAAe2jB,CAAK,EACtCG,EAAqD,CAAA,EAG3D,OAAAD,EAAW,QAASE,GAAS,CACzB,MAAMC,EAASP,EAAM,WAAWM,CAAI,EACpCD,EAAQC,EAAK,IAAI,EAAIC,CACzB,CAAC,EAGD,KAAK,OAAO,IAAIxa,EAAKia,CAAK,EAEnB,CACH,MAAAA,EACA,QAAAK,EACA,KAAM,CAAC/G,EAAuBkH,EAAO,KAAS,CAC1C,MAAMD,EAASF,EAAQ/G,CAAa,EAChCiH,IACIC,GACAD,EAAO,QAAQhkB,EAAM,WAAY,GAAQ,EAE7CgkB,EAAO,KAAA,EAEf,EACA,KAAOjH,GAA0B,CAC7B,MAAMiH,EAASF,EAAQ/G,CAAa,EAChCiH,GACAA,EAAO,KAAA,CAEf,EACA,OAAQ,CAACjH,EAAuBrhB,EAAW,KAAQ,CAC/C,MAAMsoB,EAASF,EAAQ/G,CAAa,EAChCiH,GACAA,EAAO,MAAA,EAAQ,OAAOtoB,CAAQ,EAAE,KAAA,CAExC,EACA,QAAS,CAACqhB,EAAuBrhB,EAAW,KAAQ,CAChD,MAAMsoB,EAASF,EAAQ/G,CAAa,EAChCiH,GACAA,EAAO,QAAQtoB,CAAQ,CAE/B,EACA,UAAW,CAACwoB,EAAuBC,EAAqBzoB,EAAW,IAAQ,CACvE,MAAM0oB,EAAaN,EAAQI,CAAa,EAClCG,EAAWP,EAAQK,CAAW,EAChCC,GAAcC,IACdD,EAAW,QAAQ1oB,CAAQ,EAC3B2oB,EAAS,MAAA,EAAQ,OAAO3oB,CAAQ,EAAE,KAAA,EAE1C,CAAA,CAER,CAMA,MAAM,UACF8N,EACApL,EAQI,GACkB,CACtB,MAAM+c,EAAS,KAAK,aAAa,IAAI3R,CAAG,EACxC,GAAI2R,EAAQ,CACR,MAAMmJ,EAAe,KAAK,WAAWnJ,CAAM,EAC3C,GAAI/c,EAAQ,SAAU,CAElB,MAAMmmB,EAAM,KAAK,YAAY,QAAA,EAC7BA,EAAI,KAAKnmB,EAAQ,QAAQ,EACzBkmB,EAAa,MAAM,SAAS,KAAKC,CAAG,EAEpC,KAAK,YAAY,QAAQA,CAAG,CAChC,CACA,GAAInmB,EAAQ,MAAO,CAEf,MAAMmP,EAAQ,KAAK,YAAY,QAAA,EAC/BA,EAAM,KAAKnP,EAAQ,KAAK,EACxBkmB,EAAa,MAAM,MAAM,KAAK/W,CAAK,EAEnC,KAAK,YAAY,QAAQA,CAAK,CAClC,CACA,GAAInP,EAAQ,SAAU,CAElB,MAAMomB,EAAM,KAAK,UAAU,QAAA,EAC3BA,EAAI,KAAKpmB,EAAQ,QAAQ,EACzBkmB,EAAa,MAAM,SAAS,KAAKE,CAAG,EAEpC,KAAK,UAAU,QAAQA,CAAG,CAC9B,CACA,OAAKpmB,EAAQ,YAAc,KAAK,OAAO,iBACnC,KAAK,UAAUkmB,EAAa,KAAK,EAE9BA,CACX,CAGA,MAAMG,EAAU,KAAK,cAAc,IAAIjb,CAAG,EAC1C,GAAIib,EACA,OAAOA,EAIX,MAAMC,EAAc,IAAI,QAAuB,CAACnZ,EAASC,IAAW,CAChE,KAAK,WAAW,KACZhC,EACCW,GAAc,CAEX,MAAMjO,EAAwB,CAC1B,MAAOiO,EAAK,MACZ,WAAYA,EAAK,YAAc,CAAA,EAC/B,QAASA,EAAK,SAAW,CAAA,EACzB,OAAQA,EAAK,OACb,UAAWA,EAAK,WAAa,CAAA,EAC7B,SAAUA,EAAK,UAAY,CAAA,CAAC,EAQhC,GAJA,KAAK,cAAcjO,CAAM,EAGzB,KAAK,gBAAgBA,EAAO,KAAK,EAC7BkC,EAAQ,SAAU,CAElB,MAAMmmB,EAAM,KAAK,YAAY,QAAA,EAC7BA,EAAI,KAAKnmB,EAAQ,QAAQ,EACzBlC,EAAO,MAAM,SAAS,KAAKqoB,CAAG,EAE9B,KAAK,YAAY,QAAQA,CAAG,CAChC,CACA,GAAInmB,EAAQ,MAAO,CAEf,MAAMmP,EAAQ,KAAK,YAAY,QAAA,EAC/BA,EAAM,KAAKnP,EAAQ,KAAK,EACxBlC,EAAO,MAAM,MAAM,KAAKqR,CAAK,EAE7B,KAAK,YAAY,QAAQA,CAAK,CAClC,CACA,GAAInP,EAAQ,SAAU,CAElB,MAAMomB,EAAM,KAAK,UAAU,QAAA,EAC3BA,EAAI,KAAKpmB,EAAQ,QAAQ,EACzBlC,EAAO,MAAM,SAAS,KAAKsoB,CAAG,EAE9B,KAAK,UAAU,QAAQA,CAAG,CAC9B,CAYA,GATIpmB,EAAQ,UACRlC,EAAO,MAAM,SAAUuC,GAAU,CACzBA,aAAiBuB,EAAM,OACvBvB,EAAM,SAAWL,EAAQ,SAEjC,CAAC,EAIDlC,EAAO,WAAW,OAAS,EAAG,CAC9B,MAAMyoB,EAAsB,KAAK,qBAAqBzoB,EAAO,MAAOA,EAAO,WAAYsN,CAAG,EAC1FtN,EAAO,MAAQyoB,EAAoB,MACnCzoB,EAAO,QAAUyoB,EAAoB,QAGpCzoB,EAAe,cAAgByoB,EAAoB,KACnDzoB,EAAe,cAAgByoB,EAAoB,KACnDzoB,EAAe,gBAAkByoB,EAAoB,OACrDzoB,EAAe,iBAAmByoB,EAAoB,QACtDzoB,EAAe,mBAAqByoB,EAAoB,SAC7D,CAGKvmB,EAAQ,YAAc,KAAK,OAAO,eACnC,KAAK,UAAUlC,EAAO,KAAK,EAE3B,QAAQ,IAAI,6BAA6B,EAI7C,KAAK,aAAa,IAAIsN,EAAKtN,CAAM,EACjC,KAAK,cAAc,OAAOsN,CAAG,EAC7B+B,EAAQrP,CAAM,CAClB,EACC0oB,GAA4B,CACzB,MAAMC,EAA6B,CAC/B,OAAQD,EAAS,OACjB,MAAOA,EAAS,MAChB,WAAYA,EAAS,MAAQ,EAAKA,EAAS,OAASA,EAAS,MAAS,IAAM,EAC5E,IAAApb,CAAA,EAGApL,EAAQ,YACRA,EAAQ,WAAWymB,CAAY,CAEvC,EACC/rB,GAAmB,CAChB,QAAQ,MAAM,gCAAgC0Q,CAAG,GAAI1Q,CAAK,EAC1D,KAAK,cAAc,OAAO0Q,CAAG,EAEzBpL,EAAQ,SACRA,EAAQ,QAAQtF,CAAK,EAGzB0S,EAAO1S,CAAK,CAChB,CAAA,CAER,CAAC,EAGD,YAAK,cAAc,IAAI0Q,EAAKkb,CAAW,EAEhCA,CACX,CAQQ,WAAWvN,EAAwC,CACvD,MAAO,CACH,MAAOA,EAAS,MAAM,MAAA,EACtB,WAAY,CAAC,GAAGA,EAAS,UAAU,EACnC,QAAS,CAAC,GAAGA,EAAS,OAAO,EAC7B,UAAW,CAAC,GAAGA,EAAS,SAAS,EACjC,OAAQA,EAAS,OACjB,SAAU,CAAC,GAAGA,EAAS,QAAA,CAAQ,CAEvC,CAQA,YAAY3N,EAAasb,EAA2B,GAAY,CAC5D,MAAMnB,EAAQ,KAAK,aAAa,IAAIna,CAAG,EACnCma,GAASmB,GACT,KAAK,aAAanB,EAAM,KAAK,EAIjC,MAAMF,EAAQ,KAAK,OAAO,IAAIja,CAAG,EAC7Bia,IACAA,EAAM,cAAA,EACN,KAAK,OAAO,OAAOja,CAAG,GAI1B,KAAK,aAAa,OAAOA,CAAG,CAChC,CAQA,SAASA,EAAwC,CAC7C,OAAO,KAAK,aAAa,IAAIA,CAAG,CACpC,CAOA,cAAwD,CACpD,OAAO,MAAM,KAAK,KAAK,aAAa,QAAA,CAAS,EAAE,IAAI,CAAC,CAACA,EAAKma,CAAK,KAAO,CAAC,IAAAna,EAAK,MAAAma,GAAO,CACvF,CAEA,WAAWoB,EAAsB,GAAa,CAC1C,SAAW,CAACvb,EAAKma,CAAK,IAAK,KAAK,aAAa,UAAW,CACpD,KAAK,aAAaA,EAAM,KAAK,EAC7B,MAAMF,EAAQ,KAAK,OAAO,IAAIja,CAAG,EAC7Bia,IACAA,EAAM,cAAA,EACFsB,GACA,KAAK,OAAO,OAAOvb,CAAG,EAGlC,CAGIub,IACA,KAAK,aAAa,MAAA,EAClB,KAAK,cAAc,MAAA,EACnB,KAAK,OAAO,MAAA,EAEpB,CAOA,oBAA6B,CACzB,OAAO,KAAK,aAAa,IAC7B,CAQA,eAAevb,EAAsB,CACjC,MAAMma,EAAQ,KAAK,aAAa,IAAIna,CAAG,EACvC,OAAKma,EAGE,KAAK,MAAM,SAAS,SAASA,EAAM,KAAK,EAH5B,EAIvB,CAQA,gBAAgBna,EAAsB,CAClC,MAAMma,EAAQ,KAAK,aAAa,IAAIna,CAAG,EACvC,OAAKma,GAKD,KAAK,MAAM,SAAS,SAASA,EAAM,KAAK,GAI5C,KAAK,UAAUA,EAAM,KAAK,EACnB,KATH,QAAQ,KAAK,gCAAgCna,CAAG,EAAE,EAC3C,GASf,CAQA,qBAAqBA,EAAsB,CACvC,MAAMma,EAAQ,KAAK,aAAa,IAAIna,CAAG,EACvC,GAAI,CAACma,EACD,eAAQ,KAAK,iCAAiCna,CAAG,EAAE,EAC5C,GAEX,KAAK,aAAama,EAAM,KAAK,EAC7B,MAAMF,EAAQ,KAAK,OAAO,IAAIja,CAAG,EACjC,OAAIia,GACAA,EAAM,cAAA,EAEH,EACX,CAOA,aAAaniB,EAA2C,CACpD,OAAO,OAAO,KAAK,OAAQA,CAAS,GAChCA,EAAU,cAAgB,QAAaA,EAAU,mBACjD,KAAK,iBAAA,CAEb,CAOA,WAA6B,CACzB,MAAO,CAAE,GAAG,KAAK,MAAA,CACrB,CACJ,CCjlBO,MAAM0jB,WAA0BltB,CAAW,CA0B9C,YAAYmtB,EAAmD,CAC3D,MAAA,EA1BIltB,EAAA,sBAMC,KAEDA,EAAA,qBAA6C,CACjD,WAAY,GACZ,aAAc,EACd,aAAc,EACd,YAAa,EACb,YAAa,EACb,cAAe,EACf,QAAS,GACT,YAAa,GACb,QAAS,EACT,YAAa,EAAA,GAGTA,EAAA,2BAAkD,MAClDA,EAAA,qBAAsC,MACtCA,EAAA,gBAAiC,MAIrC,KAAK,KAAO,oBAERktB,IACI,MAAM,QAAQA,CAAO,EACrBA,EAAQ,QAAQxjB,GAAU,KAAK,aAAaA,CAAM,CAAC,EAEnD,KAAK,aAAawjB,CAAO,EAGrC,CAMO,uBAAuBxjB,EAAmC,CAC7D,KAAK,oBAAsBA,CAC/B,CAOQ,YAAY+H,EAAqC,CACrD,OAAO,IAAI,QAAQ,CAAC+B,EAASC,IAAW,CACrB,IAAIxL,EAAM,cAAA,EAClB,KACHwJ,EACC5L,GAAY,CACTA,EAAQ,MAAQoC,EAAM,eACtBpC,EAAQ,MAAQoC,EAAM,eACtBpC,EAAQ,OAASoC,EAAM,WACvBuL,EAAQ3N,CAAO,CACnB,EACA,OACC9E,GAAU,CACP,QAAQ,MAAM,8BAA+BA,CAAK,EAClD0S,EAAO1S,CAAK,CAChB,CAAA,CAER,CAAC,CACL,CAOQ,uBAAuBosB,EAA2E,cAAoC,CAC1I,MAAMC,EAAiB,SAAS,cAAc,QAAQ,EACtDA,EAAe,MAAQ,IACvBA,EAAe,OAAS,IACxB,MAAMC,EAAMD,EAAe,WAAW,IAAI,EAE1C,IAAIE,EACJ,OAAQH,EAAA,CACJ,IAAK,cACDG,EAAWD,EAAI,qBAAqB,EAAGD,EAAe,OAAQ,EAAG,CAAC,EAClE,MACJ,IAAK,cACDE,EAAWD,EAAI,qBAAqB,EAAG,EAAG,EAAGD,EAAe,MAAM,EAClE,MACJ,IAAK,cACDE,EAAWD,EAAI,qBAAqB,EAAG,EAAGD,EAAe,MAAO,CAAC,EACjE,MACJ,IAAK,cACDE,EAAWD,EAAI,qBAAqBD,EAAe,MAAO,EAAG,EAAG,CAAC,EACjE,MACJ,QACIE,EAAWD,EAAI,qBAAqB,EAAGD,EAAe,OAAQ,EAAG,CAAC,CAAA,CAI1EE,EAAS,aAAa,EAAG,kBAAkB,EAC3CA,EAAS,aAAa,EAAG,wBAAwB,EAEjDD,EAAI,UAAYC,EAChBD,EAAI,SAAS,EAAG,EAAGD,EAAe,MAAOA,EAAe,MAAM,EAE9D,MAAMG,EAAW,IAAItlB,EAAM,cAAcmlB,CAAc,EACvD,OAAAG,EAAS,MAAQtlB,EAAM,eACvBslB,EAAS,MAAQtlB,EAAM,eAEhBslB,CACX,CAOQ,aAAa9b,EAA4C,CAC7D,OAAO,IAAI,QAAS+B,GAAY,CACb,IAAIvL,EAAM,cAAA,EAClB,KACHwJ,EACC5L,GAAY,CACTA,EAAQ,MAAQoC,EAAM,eACtBpC,EAAQ,MAAQoC,EAAM,eACtBpC,EAAQ,OAASoC,EAAM,UACvBuL,EAAQ3N,CAAO,CACnB,EACA,OACC9E,GAAU,CACP,QAAQ,MAAM,mCAAoCA,CAAK,EAEvDyS,EAAQ,IAAI,CAChB,CAAA,CAER,CAAC,CACL,CAKA,MAAc,oBAAoC,yBAC9C,GAAI,GAAC,KAAK,qBAAuB,CAAC,KAAK,UAEvC,GAAI,CAKA,GAHA,KAAK,cAAgB,MAAM,KAAK,YAAY,KAAK,oBAAoB,UAAU,EAG3E,KAAK,oBAAoB,YAEzB,GAAI,CACA,KAAK,SAAW,MAAM,KAAK,aAAa,KAAK,oBAAoB,WAAW,EACvE,KAAK,SAON,QAAQ,IAAI,mCAAmC,EAL3C,KAAK,oBAAoB,sBACzB,QAAQ,KAAK,+CAA+C,EAC5D,KAAK,SAAW,KAAK,uBAAuB,KAAK,oBAAoB,iBAAiB,EAKlG,OAASzS,EAAO,CAER,KAAK,oBAAoB,sBACzB,QAAQ,KAAK,iDAAkDA,CAAK,EACpE,KAAK,SAAW,KAAK,uBAAuB,KAAK,oBAAoB,iBAAiB,EAE9F,MACO,KAAK,oBAAoB,sBAEhC,KAAK,SAAW,KAAK,uBAAuB,KAAK,oBAAoB,iBAAiB,GAI1F,MAAMmL,EAAW,IAAIjE,EAAM,qBAAqB,CAC5C,MAAO,UACP,YAAa,GACb,IAAK,KAAK,cACV,SAAU,KAAK,UAAY,OAC3B,QAAS,EACT,WAAY,GACZ,SAAUA,EAAM,gBAAA,CACnB,EAGD,UAAWulB,KAAa,KAAK,oBAAoB,QAAS,CACtD,IAAI9nB,EACA4H,EAEJ,OAAQkgB,EAAU,KAAA,CACd,IAAK,QACD9nB,EAAW,IAAIuC,EAAM,gBACjBhH,EAAAusB,EAAU,OAAV,YAAAvsB,EAAiB,KAAM,IACvBwJ,EAAA+iB,EAAU,OAAV,YAAA/iB,EAAiB,KAAM,IACvBE,EAAA6iB,EAAU,OAAV,YAAA7iB,EAAiB,KAAM,CAAA,EAE3B2C,EAAO,IAAIrF,EAAM,KAAKvC,EAAUwG,CAAQ,EACpCshB,EAAU,UACVlgB,EAAK,SAAS,IAAI,GAAGkgB,EAAU,QAAQ,EAE3C,MAEJ,IAAK,WACD9nB,EAAW,IAAIuC,EAAM,mBACjByC,EAAA8iB,EAAU,OAAV,YAAA9iB,EAAiB,KAAM,KACvBG,EAAA2iB,EAAU,OAAV,YAAA3iB,EAAiB,KAAM,KACvBD,EAAA4iB,EAAU,OAAV,YAAA5iB,EAAiB,KAAM,IACvB6iB,EAAAD,EAAU,OAAV,YAAAC,EAAiB,KAAM,EAAA,EAE3BngB,EAAO,IAAIrF,EAAM,KAAKvC,EAAUwG,CAAQ,EACxC,MAEJ,IAAK,MACDxG,EAAW,IAAIuC,EAAM,cACjBylB,EAAAF,EAAU,OAAV,YAAAE,EAAiB,KAAM,IACvBC,EAAAH,EAAU,OAAV,YAAAG,EAAiB,KAAM,IACvBC,EAAAJ,EAAU,OAAV,YAAAI,EAAiB,KAAM,CAAA,EAE3BtgB,EAAO,IAAIrF,EAAM,KAAKvC,EAAUwG,CAAQ,EACxC,MAEJ,QACI,QAAQ,KAAK,gDAAgDshB,EAAU,IAAI,EAAE,EAC7E,QAAA,CAeR,GAXIA,EAAU,UACVlgB,EAAK,SAAS,IAAI,GAAGkgB,EAAU,QAAQ,EAI3ClgB,EAAK,KAAOkgB,EAAU,KAGtB,KAAK,UAAUlgB,CAAI,EAGf,KAAK,WAAW,IAAIkgB,EAAU,IAAI,EAAG,CACrC,MAAMK,EAAY,KAAK,WAAW,IAAIL,EAAU,IAAI,EACpDK,EAAU,KAAOvgB,EACjB,KAAK,oBAAoBugB,CAAS,CACtC,CAEA,QAAQ,IAAI,uCAAuCL,EAAU,IAAI,EAAE,CACvE,CAGA,GAAI,KAAK,oBAAoB,OACzB,UAAWM,KAAe,KAAK,oBAAoB,OAAQ,CACvD,IAAIlZ,EAEJ,OAAQkZ,EAAY,KAAA,CAChB,IAAK,UACDlZ,EAAQ,IAAI3M,EAAM,aACd6lB,EAAY,OAAS,QACrBA,EAAY,WAAa,EAAA,EAE7B,MAEJ,IAAK,cACDlZ,EAAQ,IAAI3M,EAAM,iBACd6lB,EAAY,OAAS,SACrBA,EAAY,WAAa,CAAA,EAEzBA,EAAY,UACZlZ,EAAM,SAAS,IAAI,GAAGkZ,EAAY,SAAS,EAE3ClZ,EAAM,SAAS,IAAI,EAAG,GAAI,CAAC,EAE/BA,EAAM,WAAa,GACnB,MAEJ,IAAK,QACDA,EAAQ,IAAI3M,EAAM,WACd6lB,EAAY,OAAS,SACrBA,EAAY,WAAa,EACzB,IACA,CAAA,EAEAA,EAAY,SACZlZ,EAAM,SAAS,IAAI,GAAGkZ,EAAY,QAAQ,EAE1ClZ,EAAM,SAAS,IAAI,EAAG,EAAG,CAAC,EAE9BA,EAAM,WAAa,GACnB,MAEJ,IAAK,OAeD,GAdAA,EAAQ,IAAI3M,EAAM,UACd6lB,EAAY,OAAS,SACrBA,EAAY,WAAa,EACzB,IACA,KAAK,GAAK,EACV,GACA,CAAA,EAEAA,EAAY,SACZlZ,EAAM,SAAS,IAAI,GAAGkZ,EAAY,QAAQ,EAE1ClZ,EAAM,SAAS,IAAI,EAAG,GAAI,CAAC,EAG3BkZ,EAAY,UAAW,CAEvB,MAAMnf,EAAe,IAAI1G,EAAM,SAC/B0G,EAAa,SAAS,IAAI,GAAGmf,EAAY,SAAS,EAClD,KAAK,UAAUnf,CAAY,EAC1BiG,EAA0B,OAASjG,CACxC,CACAiG,EAAM,WAAa,GACnB,MAEJ,QACI,QAAQ,KAAK,+CAA+CkZ,EAAY,IAAI,EAAE,EAC9E,QAAA,CAGRlZ,EAAM,KAAO,GAAGkZ,EAAY,IAAI,QAChC,KAAK,UAAUlZ,CAAK,EACpB,QAAQ,IAAI,sCAAsCkZ,EAAY,IAAI,EAAE,CACxE,CAIA,KAAK,MAAM,OAAS,QACpB,KAAK,gBAAA,CAEb,OAAS/sB,EAAO,CACZ,QAAQ,MAAM,sDAAuDA,CAAK,CAC9E,CACJ,CAKQ,iBAAwB,CAC5B,MAAMgtB,EAAQ,SAAS,cAAc,KAAK,EAC1CA,EAAM,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA,UAMlBA,EAAM,MAAM,SAAW,WACvBA,EAAM,MAAM,IAAM,IAClBA,EAAM,MAAM,MAAQ,OACpBA,EAAM,MAAM,OAAS,MACrBA,EAAM,MAAM,cAAgB,OAC5B,SAAS,KAAK,YAAYA,CAAK,CACnC,CAMO,aAAarkB,EAAiC,CACjD,MAAMskB,EAAa,CAAE,GAAG,KAAK,cAAe,GAAGtkB,CAAA,EAG/C,GAAI,KAAK,WAAW,IAAIskB,EAAW,UAAU,EAAG,CAC5C,QAAQ,KAAK,6CAA6CA,EAAW,UAAU,kBAAkB,EACjG,MACJ,CAEA,KAAK,WAAW,IAAIA,EAAW,WAAY,CACvC,KAAM,KACN,OAAQA,EACR,OAAQ,IAAI/lB,EAAM,QAAQ,EAAG,CAAC,EAC9B,MAAO,IAAIA,EAAM,QAAQ,EAAG,CAAC,EAC7B,SAAU,CAAA,CACb,CACL,CAMO,gBAAgBmf,EAA0B,CAC7C,MAAMyG,EAAY,KAAK,WAAW,IAAIzG,CAAU,EAC5CyG,IAEIA,EAAU,MAAQA,EAAU,KAAK,UACjC,KAAK,gBAAgBA,EAAU,KAAK,QAAQ,EAEhD,KAAK,WAAW,OAAOzG,CAAU,EAEzC,CAOO,gBAAgBA,EAAoB1d,EAA0C,CACjF,MAAMmkB,EAAY,KAAK,WAAW,IAAIzG,CAAU,EAC5CyG,GACA,OAAO,OAAOA,EAAU,OAAQnkB,CAAM,CAE9C,CAMO,gBAAgB0d,EAA0B,CAC7C,MAAMyG,EAAY,KAAK,WAAW,IAAIzG,CAAU,EAC5CyG,IACAA,EAAU,OAAO,QAAU,GAEnC,CAMO,iBAAiBzG,EAA0B,CAC9C,MAAMyG,EAAY,KAAK,WAAW,IAAIzG,CAAU,EAC5CyG,IACAA,EAAU,OAAO,QAAU,GAEnC,CAMO,mBAAmBzG,EAAmD,CACzE,MAAMyG,EAAY,KAAK,WAAW,IAAIzG,CAAU,EAChD,OAAOyG,EAAYA,EAAU,OAAS,MAC1C,CAMQ,gBAAgB3hB,EAAmD,CACnE,MAAM,QAAQA,CAAQ,EACtBA,EAAS,QAAQ1D,GAAO,KAAK,sBAAsBA,CAAG,CAAC,EAEvD,KAAK,sBAAsB0D,CAAQ,CAE3C,CAMQ,sBAAsBA,EAAgC,CAC1D,GAAKA,EAAiB,IAAK,CACvB,MAAMrG,EAAWqG,EAAiB,IAClCrG,EAAQ,OAAO,IAAI,EAAG,CAAC,EACvBA,EAAQ,OAAO,IAAI,EAAG,CAAC,CAC3B,CACJ,CAKgB,OAAc,QAC1B5E,EAAA,MAAM,QAAN,MAAAA,EAAA,WAGA,KAAK,qBAAqB,KAAK,IAAM,CAEjC,KAAK,WAAW,QAAQ,CAAC4sB,EAAWzG,IAAe,CAE/C,GAAI,CAACyG,EAAU,KAAM,CACjB,MAAM5tB,EAAS,KAAK,MAAM,gBAAgBmnB,CAAU,EAChDnnB,GAAUA,aAAkBgI,EAAM,MAClC4lB,EAAU,KAAO5tB,EAEjB,KAAK,oBAAoB4tB,CAAS,EAClC,QAAQ,IAAI,0CAA0CzG,CAAU,EAAE,GAElE,QAAQ,KAAK,8CAA8CA,CAAU,EAAE,CAE/E,CACJ,CAAC,CACL,CAAC,CACL,CAMQ,oBAAoByG,EAGnB,CACL,MAAM3hB,EAAW2hB,EAAU,KAAK,SAE1BI,EAAmBzlB,GAAwB,CAEzCqlB,EAAU,OAAO,cAAgB,SACjCrlB,EAAI,YAAcqlB,EAAU,OAAO,aAGnCA,EAAU,OAAO,UAAY,SAC7BrlB,EAAI,QAAUqlB,EAAU,OAAO,SAI/BA,EAAU,OAAO,cAAgB,SACjCrlB,EAAI,KAAOqlB,EAAU,OAAO,YAAc5lB,EAAM,WAAaA,EAAM,UAE3E,EAGI,MAAM,QAAQiE,CAAQ,EACtBA,EAAS,QAAQ+hB,CAAe,EAEhCA,EAAgB/hB,CAAQ,CAEhC,CAMgB,OAAO5F,EAAyB,QAC5CrF,EAAA,MAAM,SAAN,MAAAA,EAAA,UAAeqF,GAEf,KAAK,WAAW,QAAQunB,GAAa,CAE7B,CAACA,EAAU,OAAO,SAAW,CAACA,EAAU,OAG5CA,EAAU,OAAO,GAAKA,EAAU,OAAO,aAAgBvnB,EACvDunB,EAAU,OAAO,GAAKA,EAAU,OAAO,aAAgBvnB,EAGvDunB,EAAU,MAAM,GAAKA,EAAU,OAAO,YAAevnB,EACrDunB,EAAU,MAAM,GAAKA,EAAU,OAAO,YAAevnB,EAGrDunB,EAAU,UAAYA,EAAU,OAAO,cAAiBvnB,EAGxD,KAAK,iBAAiBunB,CAAS,EACnC,CAAC,CACL,CAMQ,iBAAiBA,EAKhB,CACL,MAAM3hB,EAAW2hB,EAAU,KAAK,SAChC,GAAI,CAAC3hB,EAAU,OAEf,MAAM+hB,EAAmBzlB,GAAwB,CAE7C,GAAKA,EAAY,IAAK,CAClB,MAAM3C,EAAW2C,EAAY,IAG7B3C,EAAQ,MAAQoC,EAAM,eACtBpC,EAAQ,MAAQoC,EAAM,eAGtBpC,EAAQ,OAAO,EAAIgoB,EAAU,OAAO,EACpChoB,EAAQ,OAAO,EAAIgoB,EAAU,OAAO,EAGpChoB,EAAQ,OAAO,EAAIgoB,EAAU,MAAM,EACnChoB,EAAQ,OAAO,EAAIgoB,EAAU,MAAM,EAGnChoB,EAAQ,YAAc,EAC1B,CACJ,EAGI,MAAM,QAAQqG,CAAQ,EACtBA,EAAS,QAAQ+hB,CAAe,EAEhCA,EAAgB/hB,CAAQ,CAEhC,CAKgB,SAAgB,QAC5BjL,EAAA,MAAM,UAAN,MAAAA,EAAA,WAGe,SAAS,iBAAiB,eAAe,EACjD,QAAQitB,GAAW,UAClBjtB,EAAAitB,EAAQ,cAAR,MAAAjtB,EAAqB,SAAS,aAC9BwJ,EAAAyjB,EAAQ,gBAAR,MAAAzjB,EAAuB,SAE/B,CAAC,EAGD,KAAK,WAAW,QAAQojB,GAAa,CAC7BA,EAAU,MAAQA,EAAU,KAAK,UACjC,KAAK,gBAAgBA,EAAU,KAAK,QAAQ,CAEpD,CAAC,EAGG,KAAK,eACL,KAAK,cAAc,QAAA,EAEnB,KAAK,UACL,KAAK,SAAS,QAAA,EAGlB,KAAK,WAAW,MAAA,CACpB,CACJ,CCxrBO,MAAMM,WAA0BlmB,EAAM,oBAAqB,CAK9D,YAAYyB,EAUT,CAEC,MAAM0kB,GAAgB1kB,GAAA,YAAAA,EAAQ,cAAe,GACvC2kB,EAAc,CAAC,EAAC3kB,GAAA,MAAAA,EAAQ,UACxBgD,GAAUhD,GAAA,YAAAA,EAAQ,UAAW,EAG7B4kB,GAAa5kB,GAAA,YAAAA,EAAQ,aAAc,EAAE0kB,GAAiBC,GAAe3hB,EAAU,GAErF,MAAM,CACF,MAAOhD,GAAA,YAAAA,EAAQ,MACf,YAAa0kB,EACb,QAAA1hB,EACA,IAAKhD,GAAA,YAAAA,EAAQ,QACb,UAAW,IACX,SAAUA,GAAA,YAAAA,EAAQ,SAClB,KAAMA,GAAA,MAAAA,EAAQ,YAAczB,EAAM,WAAaA,EAAM,UACrD,SAAUA,EAAM,iBAChB,WAAAqmB,CAAA,CACH,EAjCGtuB,EAAA,iBAA2B,IAAIiI,EAAM,QAAQ,EAAG,CAAC,GACjDjI,EAAA,gBAA0B,IAAIiI,EAAM,QAAQ,EAAG,CAAC,GAChDjI,EAAA,mBAAsB,IAkCtBouB,GAAiBC,GAAe3hB,EAAU,KAC1C,KAAK,WAAa,GAElB,KAAK,YAAc,IAInBhD,GAAA,MAAAA,EAAQ,UACR,KAAK,UAAU,KAAKA,EAAO,QAAQ,EAInCA,GAAA,MAAAA,EAAQ,SACR,KAAK,SAAS,KAAKA,EAAO,OAAO,EAIjC,KAAK,MACL,KAAK,IAAI,MAAQzB,EAAM,eACvB,KAAK,IAAI,MAAQA,EAAM,gBAGvB,KAAK,WACL,KAAK,SAAS,MAAQA,EAAM,eAC5B,KAAK,SAAS,MAAQA,EAAM,eAEpC,CAKA,IAAI,UAA0B,CAC1B,OAAO,KAAK,UAAU,MAAA,CAC1B,CAKA,IAAI,SAASvD,EAAsB,CAC/B,KAAK,UAAU,KAAKA,CAAK,EACzB,KAAK,kBAAA,CACT,CAKA,IAAI,SAAyB,CACzB,OAAO,KAAK,SAAS,MAAA,CACzB,CAKA,IAAI,QAAQA,EAAsB,CAC9B,KAAK,SAAS,KAAKA,CAAK,EACxB,KAAK,kBAAA,CACT,CAKA,IAAI,YAAqB,CACrB,OAAO,KAAK,WAChB,CAKA,IAAI,WAAWA,EAAe,CAC1B,KAAK,YAAcA,EACnB,KAAK,kBAAA,CACT,CAKQ,mBAA0B,CAC1B,KAAK,MACL,KAAK,IAAI,OAAO,KAAK,KAAK,SAAS,EACnC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,EAClC,KAAK,IAAI,YAAc,GAE/B,CAOO,SAAS6pB,EAAgBC,EAAsB,CAClD,KAAK,UAAU,GAAKD,EACpB,KAAK,UAAU,GAAKC,EACpB,KAAK,kBAAA,CACT,CAOO,QAAQC,EAAgBC,EAAsB,CACjD,KAAK,SAAS,GAAKD,EACnB,KAAK,SAAS,GAAKC,EACnB,KAAK,kBAAA,CACT,CAKO,SAAgB,CACnB,KAAK,UAAU,IAAI,EAAG,CAAC,EACvB,KAAK,SAAS,IAAI,EAAG,CAAC,EACtB,KAAK,YAAc,EACnB,KAAK,kBAAA,CACT,CAQO,eAAe/U,EAAwBnE,EAAuBqW,EAAyB,CACtFlS,GACA,KAAK,UAAU,KAAKA,CAAM,EAE1BnE,GACA,KAAK,SAAS,KAAKA,CAAK,EAExBqW,IAAa,SACb,KAAK,YAAcA,GAEvB,KAAK,kBAAA,CACT,CAKO,gBAAoF,CACvF,MAAO,CACH,OAAQ,KAAK,UAAU,MAAA,EACvB,MAAO,KAAK,SAAS,MAAA,EACrB,SAAU,KAAK,WAAA,CAEvB,CACJ,CClLO,MAAM8C,WAA2B1mB,EAAM,cAAe,CACzD,YAAY2mB,EAAqC,GAAI,CACjD,MAAMC,EAAYD,EAAW,YAAc,OACtCA,EAAW,qBAAqB3mB,EAAM,MAAQ2mB,EAAW,UAAY,IAAI3mB,EAAM,MAAM2mB,EAAW,SAAS,EAAK,UAE7GE,EAAiBF,EAAW,iBAAmB,OAAYA,EAAW,eAAiB,GAGvFG,EAAOH,EAAW,OAAS,OAAYA,EAAW,KAAO3mB,EAAM,UAErE,MAAM,CACF,SAAU,CACN,IAAK,CAAE,MAAO2mB,EAAW,KAAO,IAAA,EAChC,MAAO,CAAE,MAAOA,EAAW,OAAS,IAAA,EACpC,UAAW,CAAE,MAAOC,CAAA,EACpB,cAAe,CAAE,MAAOD,EAAW,gBAAkB,OAAYA,EAAW,cAAgB,CAAA,EAC5F,eAAgB,CAAE,MAAOE,CAAA,CAAe,EAE5C,KAAAC,EACA,aAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAgBd,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAA,CAgCnB,CACL,CAEA,IAAI,KAA4B,CAC5B,OAAO,KAAK,SAAS,IAAI,KAC7B,CAEA,IAAI,IAAIrqB,EAA6B,CACjC,KAAK,SAAS,IAAI,MAAQA,CAC9B,CAEA,IAAI,SAAgC,CAChC,OAAO,KAAK,SAAS,QAAQ,KACjC,CAEA,IAAI,QAAQA,EAA6B,CACrC,KAAK,SAAS,QAAQ,MAAQA,CAClC,CAEA,IAAI,WAAyB,CACzB,OAAO,KAAK,SAAS,UAAU,KACnC,CAEA,IAAI,UAAUA,EAAoB,CAC9B,KAAK,SAAS,UAAU,MAAQA,CACpC,CAEA,IAAI,eAAwB,CACxB,OAAO,KAAK,SAAS,cAAc,KACvC,CAEA,IAAI,cAAcA,EAAe,CAC7B,KAAK,SAAS,cAAc,MAAQA,CACxC,CAEA,IAAI,gBAAyB,CACzB,OAAO,KAAK,SAAS,eAAe,KACxC,CAEA,IAAI,eAAeA,EAAe,CAC9B,KAAK,SAAS,eAAe,MAAQA,CACzC,CAGA,QAAQqqB,EAAwB,CAC5B,KAAK,KAAOA,CAChB,CACJ,CCvHO,MAAMC,WAAqB/mB,EAAM,cAAe,CASnD,YAAYkc,EAAyC,CACjD,MAAM8K,EAAgB,CAClB,KAAMhnB,EAAM,WACZ,YAAa,GACb,WAAY,GACZ,SAAU,CACN,MAAO,CAAE,MAAO,CAAA,EAChB,gBAAiB,CAAE,MAAO,CAAA,EAC1B,cAAe,CAAE,MAAO,EAAA,EACxB,eAAgB,CAAE,MAAO,EAAA,EACzB,WAAY,CAAE,MAAO,IAAIA,EAAM,MAAM,KAAQ,CAAA,EAC7C,OAAQ,CAAE,MAAO,IAAIA,EAAM,MAAM,KAAQ,CAAA,EACzC,OAAQ,CAAE,MAAO,CAAA,EACjB,WAAY,CAAE,MAAO,CAAA,CAAI,EAE7B,aAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA4Bd,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA6DhB,GAAGkc,CAAA,EAGP,MAAM8K,CAAa,EAnHfjvB,EAAA,uBAA0B,GAC1BA,EAAA,qBAAwB,IACxBA,EAAA,aAAgB,GAChBA,EAAA,sBAAyB,IACzBA,EAAA,kBAA0B,IAAIiI,EAAM,MAAM,KAAQ,GAClDjI,EAAA,cAAiB,GACjBA,EAAA,kBAAqB,GAgHzB,OAAO,iBAAiB,KAAM,CAC1B,eAAgB,CACZ,IAAK,IAAM,KAAK,gBAChB,IAAM0E,GAAkB,CACpB,KAAK,gBAAkBA,EACnB,KAAK,SAAS,kBACd,KAAK,SAAS,gBAAgB,MAAQA,EAE9C,CAAA,EAEJ,aAAc,CACV,IAAK,IAAM,KAAK,cAChB,IAAMA,GAAkB,CACpB,KAAK,cAAgBA,EACjB,KAAK,SAAS,gBACd,KAAK,SAAS,cAAc,MAAQA,EAE5C,CAAA,EAEJ,KAAM,CACF,IAAK,IAAM,KAAK,MAChB,IAAMA,GAAkB,CACpB,KAAK,MAAQA,EACT,KAAK,SAAS,QACd,KAAK,SAAS,MAAM,MAAQA,EAEpC,CAAA,EAEJ,cAAe,CACX,IAAK,IAAM,KAAK,eAChB,IAAMA,GAAkB,CACpB,KAAK,eAAiBA,EAClB,KAAK,SAAS,iBACd,KAAK,SAAS,eAAe,MAAQA,EAE7C,CAAA,EAEJ,UAAW,CACP,IAAK,IAAM,KAAK,WAChB,IAAMA,GAAuB,CACzB,KAAK,WAAaA,EACd,KAAK,SAAS,aACd,KAAK,SAAS,WAAW,MAAQA,EAEzC,CAAA,EAEJ,MAAO,CACH,IAAK,IAAM,KAAK,OAChB,IAAMA,GAAkB,CACpB,KAAK,OAASA,EACV,KAAK,SAAS,SACd,KAAK,SAAS,OAAO,MAAQA,EAErC,CAAA,EAEJ,UAAW,CACP,IAAK,IAAM,KAAK,WAChB,IAAMA,GAAkB,CACpB,KAAK,WAAaA,EACd,KAAK,SAAS,aACd,KAAK,SAAS,WAAW,MAAQA,EAEzC,CAAA,CACJ,CACH,CACL,CAMA,IAAI,eAAewqB,EAAmB,CAClC,KAAK,gBAAkBA,EACnB,KAAK,SAAS,kBACd,KAAK,SAAS,gBAAgB,MAAQA,EAE9C,CAKA,IAAI,gBAAyB,CACzB,OAAO,KAAK,eAChB,CAMA,IAAI,aAAa1iB,EAAkB,CAC/B,KAAK,cAAgBA,EACjB,KAAK,SAAS,gBACd,KAAK,SAAS,cAAc,MAAQA,EAE5C,CAKA,IAAI,cAAuB,CACvB,OAAO,KAAK,aAChB,CAMA,IAAI,KAAK1C,EAAc,CACnB,KAAK,MAAQA,EACT,KAAK,SAAS,QACd,KAAK,SAAS,MAAM,MAAQA,EAEpC,CAKA,IAAI,MAAe,CACf,OAAO,KAAK,KAChB,CAMA,IAAI,MAAM6C,EAAoB,CACtB,KAAK,SAAS,SACd,KAAK,SAAS,OAAO,MAAQA,EAErC,CAKA,IAAI,OAAqB,OACrB,QAAO1L,EAAA,KAAK,SAAS,SAAd,YAAAA,EAAsB,QAAS,IAAIgH,EAAM,MAAM,KAAQ,CAClE,CAMA,IAAI,cAAcinB,EAAmB,CACjC,KAAK,eAAiBA,EAClB,KAAK,SAAS,iBACd,KAAK,SAAS,eAAe,MAAQA,EAE7C,CAKA,IAAI,eAAwB,CACxB,OAAO,KAAK,cAChB,CAMA,IAAI,UAAUviB,EAAoB,CAC9B,KAAK,WAAaA,EACd,KAAK,SAAS,aACd,KAAK,SAAS,WAAW,MAAQA,EAEzC,CAKA,IAAI,WAAyB,CACzB,OAAO,KAAK,UAChB,CAMA,IAAI,MAAMwiB,EAAe,CACrB,KAAK,OAASA,EACV,KAAK,SAAS,SACd,KAAK,SAAS,OAAO,MAAQA,EAErC,CAKA,IAAI,OAAgB,CAChB,OAAO,KAAK,MAChB,CAMA,IAAI,UAAUhC,EAAmB,CAC7B,KAAK,WAAaA,EACd,KAAK,SAAS,aACd,KAAK,SAAS,WAAW,MAAQA,EAEzC,CAKA,IAAI,WAAoB,CACpB,OAAO,KAAK,UAChB,CACJ,CCxUO,MAAMiC,WAAuBnnB,EAAM,cAAe,CAGrD,YAAYkc,EAAyC,CACjD,MAAM8K,EAAgB,CAClB,KAAMhnB,EAAM,WACZ,YAAa,GACb,UAAW,GACX,SAAU,CACN,KAAM,CAAE,MAAO,CAAA,CAAI,EAEvB,aAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA4Cd,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAehB,WAAY,CACR,YAAa,EAAA,EAEjB,GAAGkc,CAAA,EAGP,MAAM8K,CAAa,EA3EfjvB,EAAA,aAAgB,GA8EpB,OAAO,iBAAiB,KAAM,CAC1B,KAAM,CACF,IAAK,IAAM,KAAK,MAChB,IAAM0E,GAAkB,CACpB,KAAK,MAAQA,EACT,KAAK,SAAS,OACd,KAAK,SAAS,KAAK,MAAQA,EAEnC,CAAA,CACJ,CACH,CACL,CAMA,IAAI,KAAKoF,EAAc,CACnB,KAAK,MAAQA,EACT,KAAK,SAAS,OACd,KAAK,SAAS,KAAK,MAAQA,EAEnC,CAKA,IAAI,MAAe,CACf,OAAO,KAAK,KAChB,CACJ,CCzGO,SAASulB,EAAKC,EAAeC,EAAaC,EAAwB,CACrE,OAAOF,GAASC,EAAMD,GAASE,CACnC,CASO,SAASC,GAAWH,EAAgBC,EAAcC,EAAyB,CAC9E,MAAO,CACH,EAAGH,EAAKC,EAAM,EAAGC,EAAI,EAAGC,CAAM,EAC9B,EAAGH,EAAKC,EAAM,EAAGC,EAAI,EAAGC,CAAM,EAC9B,EAAGH,EAAKC,EAAM,EAAGC,EAAI,EAAGC,CAAM,CAAA,CAEtC,CASO,SAASE,GAAMhrB,EAAeV,EAAaC,EAAqB,CACnE,OAAO,KAAK,IAAI,KAAK,IAAIS,EAAOV,CAAG,EAAGC,CAAG,CAC7C,CAOO,SAAS0rB,GAASC,EAAyB,CAC9C,OAAOA,GAAW,KAAK,GAAK,IAChC,CAOO,SAASC,GAASC,EAAyB,CAC9C,OAAOA,GAAW,IAAM,KAAK,GACjC,CAQO,SAASC,GAAY/rB,EAAaC,EAAqB,CAC1D,OAAO,KAAK,OAAA,GAAYA,EAAMD,GAAOA,CACzC,CAQO,SAASgsB,GAAehsB,EAAaC,EAAqB,CAC7D,OAAO,KAAK,MAAM,KAAK,OAAA,GAAYA,EAAMD,EAAM,EAAE,EAAIA,CACzD,CAQO,SAASisB,GAAuB9C,EAA2E,cAAoC,CAClJ,MAAMxkB,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,MAAQ,IACfA,EAAO,OAAS,IAChB,MAAM0kB,EAAM1kB,EAAO,WAAW,IAAI,EAGlC0kB,EAAI,sBAAwB,GAC5BA,EAAI,sBAAwB,OAE5B,IAAIC,EACJ,OAAQH,EAAA,CACJ,IAAK,cACDG,EAAWD,EAAI,qBAAqB,EAAG1kB,EAAO,OAAQ,EAAG,CAAC,EAC1D,MACJ,IAAK,cACD2kB,EAAWD,EAAI,qBAAqB,EAAG,EAAG,EAAG1kB,EAAO,MAAM,EAC1D,MACJ,IAAK,cACD2kB,EAAWD,EAAI,qBAAqB,EAAG,EAAG1kB,EAAO,MAAO,CAAC,EACzD,MACJ,IAAK,cACD2kB,EAAWD,EAAI,qBAAqB1kB,EAAO,MAAO,EAAG,EAAG,CAAC,EACzD,MACJ,QACI2kB,EAAWD,EAAI,qBAAqB,EAAG1kB,EAAO,OAAQ,EAAG,CAAC,CAAA,CAIlE2kB,EAAS,aAAa,EAAG,kBAAkB,EAC3CA,EAAS,aAAa,IAAM,qBAAqB,EACjDA,EAAS,aAAa,GAAK,0BAA0B,EACrDA,EAAS,aAAa,IAAM,2BAA2B,EACvDA,EAAS,aAAa,EAAG,wBAAwB,EAEjDD,EAAI,UAAYC,EAChBD,EAAI,SAAS,EAAG,EAAG1kB,EAAO,MAAOA,EAAO,MAAM,EAE9C,MAAM4kB,EAAW,IAAItlB,EAAM,cAAcU,CAAM,EAC/C,OAAA4kB,EAAS,MAAQtlB,EAAM,eACvBslB,EAAS,MAAQtlB,EAAM,eACvBslB,EAAS,UAAYtlB,EAAM,aAC3BslB,EAAS,UAAYtlB,EAAM,aAEpBslB,CACX,CAQO,SAAS2C,GAAYze,EAAqC,CAC7D,OAAO,IAAI,QAAQ,CAAC+B,EAASC,IAAW,CACrB,IAAIxL,EAAM,cAAA,EAClB,KACHwJ,EACC5L,GAAY,CACTA,EAAQ,MAAQoC,EAAM,eACtBpC,EAAQ,MAAQoC,EAAM,eACtBpC,EAAQ,WAAa,GACrB2N,EAAQ3N,CAAO,CACnB,EACA,OACA4N,CAAA,CAER,CAAC,CACL,CCtHO,MAAM0c,WAA+BpwB,CAAW,CAiBnD,YAAYmtB,EAA6D,CACrE,MAAA,EAhBIltB,EAAA,6BAA6D,KAG7DA,EAAA,mBAAmD,KAGnDA,EAAA,sBAAuC,KAGvCA,EAAA,uBAAiC,MAQrC,KAAK,KAAO,yBAERktB,IACI,MAAM,QAAQA,CAAO,EACrBA,EAAQ,QAAQxjB,GAAU,CACtB,KAAK,QAAQ,IAAIA,EAAO,GAAIA,CAAM,EAClC,KAAK,WAAW,IAAIA,EAAO,GAAI,EAAI,CACvC,CAAC,GAED,KAAK,QAAQ,IAAIwjB,EAAQ,GAAIA,CAAO,EACpC,KAAK,WAAW,IAAIA,EAAQ,GAAI,EAAI,GAGhD,CAMO,OAAc,CAEjB,SAAW,CAAC7oB,EAAIqF,CAAM,IAAK,KAAK,QAC5B,KAAK,YAAYrF,EAAIqF,CAAM,CAEnC,CAOQ,YAAYrF,EAAYqF,EAAsC,CAElE,MAAMiD,EAAQ,SAASjD,EAAO,MAAM,QAAQ,IAAK,IAAI,CAAC,EAChD0mB,EAAmB,IAAInoB,EAAM,iBAC/B0E,EACAjD,EAAO,SAAA,EAIX0mB,EAAiB,SAAS,IACtB1mB,EAAO,SAAS,EAChBA,EAAO,SAAS,EAChBA,EAAO,SAAS,CAAA,EAIpB,MAAM4E,EAAS,IAAIrG,EAAM,SACzBqG,EAAO,SAAS,IACZ5E,EAAO,OAAO,EACdA,EAAO,OAAO,EACdA,EAAO,OAAO,CAAA,EAGd,KAAK,OACL,KAAK,MAAM,IAAI4E,CAAM,EAGzB8hB,EAAiB,OAAS9hB,EAG1B8hB,EAAiB,WAAa,GAG9BA,EAAiB,OAAO,QAAQ,MAAQ,KACxCA,EAAiB,OAAO,QAAQ,OAAS,KACzCA,EAAiB,OAAO,OAAO,KAAO,GACtCA,EAAiB,OAAO,OAAO,IAAM,IACrCA,EAAiB,OAAO,OAAO,KAAO,IACtCA,EAAiB,OAAO,OAAO,MAAQ,GACvCA,EAAiB,OAAO,OAAO,IAAM,GACrCA,EAAiB,OAAO,OAAO,OAAS,IAGxCA,EAAiB,SAAW,CACxB,GAAI1mB,EAAO,GACX,KAAMA,EAAO,IAAA,EAIb,KAAK,OAAS,KAAK,UAAUrF,CAAE,GAC/B,KAAK,MAAM,IAAI+rB,CAAgB,EAInC,KAAK,kBAAkB,IAAI/rB,EAAI+rB,CAAgB,CACnD,CAMO,SAAS1mB,EAAsC,CAElD,GAAI,KAAK,QAAQ,IAAIA,EAAO,EAAE,EAAG,CAC7B,QAAQ,KAAK,iBAAiBA,EAAO,EAAE,iBAAiB,EACxD,MACJ,CAGA,KAAK,QAAQ,IAAIA,EAAO,GAAIA,CAAM,EAClC,KAAK,WAAW,IAAIA,EAAO,GAAI,EAAI,EAGnC,KAAK,YAAYA,EAAO,GAAIA,CAAM,CACtC,CAMO,YAAYrF,EAAkB,CAEjC,GAAI,CAAC,KAAK,QAAQ,IAAIA,CAAE,EAAG,CACvB,QAAQ,KAAK,iBAAiBA,CAAE,iBAAiB,EACjD,MACJ,CAGA,MAAMuQ,EAAQ,KAAK,kBAAkB,IAAIvQ,CAAE,EAGvCuQ,GAASA,EAAM,SAEXA,EAAM,QAAUA,EAAM,OAAO,QAC7BA,EAAM,OAAO,OAAO,OAAOA,EAAM,MAAM,EAE3CA,EAAM,OAAO,OAAOA,CAAK,GAI7B,KAAK,kBAAkB,OAAOvQ,CAAE,EAChC,KAAK,QAAQ,OAAOA,CAAE,EACtB,KAAK,WAAW,OAAOA,CAAE,EAGrB,KAAK,kBAAoBA,IACzB,KAAK,gBAAkB,KAE/B,CAOO,aAAaA,EAAYqF,EAA+C,CAE3E,GAAI,CAAC,KAAK,QAAQ,IAAIrF,CAAE,EAAG,CACvB,QAAQ,KAAK,iBAAiBA,CAAE,iBAAiB,EACjD,MACJ,CAIA,MAAMkF,EAAY,CAAE,GADF,KAAK,QAAQ,IAAIlF,CAAE,EACH,GAAGqF,CAAA,EACrC,KAAK,QAAQ,IAAIrF,EAAIkF,CAAS,EAG9B,MAAMqL,EAAQ,KAAK,kBAAkB,IAAIvQ,CAAE,EAC3C,GAAIuQ,EAAO,CAEP,GAAIlL,EAAO,QAAU,OAAW,CAC5B,MAAMiD,EAAQ,SAASjD,EAAO,MAAM,QAAQ,IAAK,IAAI,CAAC,EACtDkL,EAAM,MAAM,IAAIjI,CAAY,CAChC,CAGIjD,EAAO,YAAc,SACrBkL,EAAM,UAAYlL,EAAO,WAIzBA,EAAO,WAAa,QACpBkL,EAAM,SAAS,IACXlL,EAAO,SAAS,GAAKkL,EAAM,SAAS,EACpClL,EAAO,SAAS,GAAKkL,EAAM,SAAS,EACpClL,EAAO,SAAS,GAAKkL,EAAM,SAAS,CAAA,EAKxClL,EAAO,SAAW,QAAakL,EAAM,QACrCA,EAAM,OAAO,SAAS,IAClBlL,EAAO,OAAO,GAAKkL,EAAM,OAAO,SAAS,EACzClL,EAAO,OAAO,GAAKkL,EAAM,OAAO,SAAS,EACzClL,EAAO,OAAO,GAAKkL,EAAM,OAAO,SAAS,CAAA,CAGrD,CACJ,CAMO,OAAOvQ,EAAkB,CAE5B,GAAI,CAAC,KAAK,QAAQ,IAAIA,CAAE,EAAG,CACvB,QAAQ,KAAK,iBAAiBA,CAAE,iBAAiB,EACjD,MACJ,CAEA,KAAK,WAAW,IAAIA,EAAI,EAAI,EAE5B,MAAMuQ,EAAQ,KAAK,kBAAkB,IAAIvQ,CAAE,EACvCuQ,GAAS,KAAK,OAAS,CAACA,EAAM,SAC9B,KAAK,MAAM,IAAIA,CAAK,EAEhBA,EAAM,QAAU,CAACA,EAAM,OAAO,QAAU,KAAK,OAC7C,KAAK,MAAM,IAAIA,EAAM,MAAM,EAGvC,CAMO,QAAQvQ,EAAkB,CAE7B,GAAI,CAAC,KAAK,QAAQ,IAAIA,CAAE,EAAG,CACvB,QAAQ,KAAK,iBAAiBA,CAAE,iBAAiB,EACjD,MACJ,CAEA,KAAK,WAAW,IAAIA,EAAI,EAAK,EAE7B,MAAMuQ,EAAQ,KAAK,kBAAkB,IAAIvQ,CAAE,EACvCuQ,GAASA,EAAM,SACfA,EAAM,OAAO,OAAOA,CAAK,EAErBA,EAAM,QAAUA,EAAM,OAAO,QAC7BA,EAAM,OAAO,OAAO,OAAOA,EAAM,MAAM,EAGnD,CAOO,UAAUvQ,EAAqB,CAClC,OAAO,KAAK,WAAW,IAAIA,CAAE,GAAK,EACtC,CAMO,eAAqD,CACxD,OAAO,IAAI,IAAI,KAAK,OAAO,CAC/B,CAOO,UAAUA,EAAgD,CAC7D,OAAO,KAAK,QAAQ,IAAIA,CAAE,CAC9B,CAMO,cAAoD,CACvD,OAAO,IAAI,IAAI,KAAK,iBAAiB,CACzC,CAOO,SAASA,EAAgD,CAC5D,OAAO,KAAK,kBAAkB,IAAIA,CAAE,CACxC,CAMO,YAAYA,EAAkB,CAEjC,GAAI,CAAC,KAAK,QAAQ,IAAIA,CAAE,EAAG,CACvB,QAAQ,KAAK,iBAAiBA,CAAE,iBAAiB,EACjD,MACJ,CAEA,KAAK,gBAAkBA,CAC3B,CAKO,eAAsB,CACzB,KAAK,gBAAkB,IAC3B,CAMO,oBAAoC,CACvC,OAAO,KAAK,eAChB,CAMO,wBAA6D,CAChE,GAAI,KAAK,gBACL,OAAO,KAAK,QAAQ,IAAI,KAAK,eAAe,CAGpD,CAMO,kBAAuD,CAC1D,GAAI,KAAK,gBACL,OAAO,KAAK,kBAAkB,IAAI,KAAK,eAAe,CAG9D,CAMO,YAAYA,EAAkB,CAC7B,KAAK,UAAUA,CAAE,EACjB,KAAK,QAAQA,CAAE,EAEf,KAAK,OAAOA,CAAE,CAEtB,CAKO,SAAgB,CAEnB,MAAM,KAAK,KAAK,kBAAkB,OAAA,CAAQ,EAAE,QAAQuQ,GAAS,CACrDA,EAAM,SAEFA,EAAM,QAAUA,EAAM,OAAO,QAC7BA,EAAM,OAAO,OAAO,OAAOA,EAAM,MAAM,EAE3CA,EAAM,OAAO,OAAOA,CAAK,EAEjC,CAAC,EAGD,KAAK,kBAAkB,MAAA,EACvB,KAAK,QAAQ,MAAA,EACb,KAAK,WAAW,MAAA,EAChB,KAAK,gBAAkB,IAC3B,CACJ,CClYO,MAAMyb,WAAyBtwB,CAAW,CAiB7C,YAAYmtB,EAAiD,CACzD,MAAA,EAhBIltB,EAAA,uBAAiD,KAGjDA,EAAA,mBAA6C,KAG7CA,EAAA,sBAAuC,KAGvCA,EAAA,uBAAiC,MASjCktB,IACI,MAAM,QAAQA,CAAO,EACrBA,EAAQ,QAAQxjB,GAAU,CACtB,KAAK,QAAQ,IAAIA,EAAO,GAAIA,CAAM,EAClC,KAAK,WAAW,IAAIA,EAAO,GAAI,EAAI,CACvC,CAAC,GAED,KAAK,QAAQ,IAAIwjB,EAAQ,GAAIA,CAAO,EACpC,KAAK,WAAW,IAAIA,EAAQ,GAAI,EAAI,GAGhD,CAMO,OAAc,CAEjB,SAAW,CAAC7oB,EAAIqF,CAAM,IAAK,KAAK,QAC5B,KAAK,YAAYrF,EAAIqF,CAAM,CAEnC,CAOQ,YAAYrF,EAAYqF,EAAgC,CAE5D,MAAMiD,EAAQ,SAASjD,EAAO,MAAM,QAAQ,IAAK,IAAI,CAAC,EAChD4mB,EAAa,IAAIroB,EAAM,WACzB0E,EACAjD,EAAO,UACPA,EAAO,SACPA,EAAO,KAAA,EAIX4mB,EAAW,SAAS,IAChB5mB,EAAO,SAAS,EAChBA,EAAO,SAAS,EAChBA,EAAO,SAAS,CAAA,EAIpB4mB,EAAW,SAAW,CAClB,GAAI5mB,EAAO,GACX,KAAMA,EAAO,IAAA,EAIb,KAAK,OAAS,KAAK,UAAUrF,CAAE,GAC/B,KAAK,MAAM,IAAIisB,CAAU,EAI7B,KAAK,YAAY,IAAIjsB,EAAIisB,CAAU,CACvC,CAMO,SAAS5mB,EAAgC,CAE5C,GAAI,KAAK,QAAQ,IAAIA,EAAO,EAAE,EAAG,CAC7B,QAAQ,KAAK,iBAAiBA,EAAO,EAAE,iBAAiB,EACxD,MACJ,CAGA,KAAK,QAAQ,IAAIA,EAAO,GAAIA,CAAM,EAClC,KAAK,WAAW,IAAIA,EAAO,GAAI,EAAI,EAGnC,KAAK,YAAYA,EAAO,GAAIA,CAAM,CACtC,CAMO,YAAYrF,EAAkB,CAEjC,GAAI,CAAC,KAAK,QAAQ,IAAIA,CAAE,EAAG,CACvB,QAAQ,KAAK,iBAAiBA,CAAE,iBAAiB,EACjD,MACJ,CAGA,MAAMuQ,EAAQ,KAAK,YAAY,IAAIvQ,CAAE,EAGjCuQ,GAASA,EAAM,QACfA,EAAM,OAAO,OAAOA,CAAK,EAI7B,KAAK,YAAY,OAAOvQ,CAAE,EAC1B,KAAK,QAAQ,OAAOA,CAAE,EACtB,KAAK,WAAW,OAAOA,CAAE,EAGrB,KAAK,kBAAoBA,IACzB,KAAK,gBAAkB,KAE/B,CAOO,aAAaA,EAAYqF,EAAyC,CAErE,GAAI,CAAC,KAAK,QAAQ,IAAIrF,CAAE,EAAG,CACvB,QAAQ,KAAK,iBAAiBA,CAAE,iBAAiB,EACjD,MACJ,CAIA,MAAMkF,EAAY,CAAE,GADF,KAAK,QAAQ,IAAIlF,CAAE,EACH,GAAGqF,CAAA,EACrC,KAAK,QAAQ,IAAIrF,EAAIkF,CAAS,EAG9B,MAAMqL,EAAQ,KAAK,YAAY,IAAIvQ,CAAE,EACrC,GAAIuQ,EAAO,CAEP,GAAIlL,EAAO,QAAU,OAAW,CAC5B,MAAMiD,EAAQ,SAASjD,EAAO,MAAM,QAAQ,IAAK,IAAI,CAAC,EACtDkL,EAAM,MAAM,IAAIjI,CAAY,CAChC,CAGIjD,EAAO,YAAc,SACrBkL,EAAM,UAAYlL,EAAO,WAIzBA,EAAO,WAAa,SACpBkL,EAAM,SAAWlL,EAAO,UAIxBA,EAAO,QAAU,SACjBkL,EAAM,MAAQlL,EAAO,OAIrBA,EAAO,WAAa,QACpBkL,EAAM,SAAS,IACXlL,EAAO,SAAS,GAAKkL,EAAM,SAAS,EACpClL,EAAO,SAAS,GAAKkL,EAAM,SAAS,EACpClL,EAAO,SAAS,GAAKkL,EAAM,SAAS,CAAA,CAGhD,CACJ,CAMO,OAAOvQ,EAAkB,CAE5B,GAAI,CAAC,KAAK,QAAQ,IAAIA,CAAE,EAAG,CACvB,QAAQ,KAAK,iBAAiBA,CAAE,iBAAiB,EACjD,MACJ,CAEA,KAAK,WAAW,IAAIA,EAAI,EAAI,EAE5B,MAAMuQ,EAAQ,KAAK,YAAY,IAAIvQ,CAAE,EACjCuQ,GAAS,KAAK,OAAS,CAACA,EAAM,QAC9B,KAAK,MAAM,IAAIA,CAAK,CAE5B,CAMO,QAAQvQ,EAAkB,CAE7B,GAAI,CAAC,KAAK,QAAQ,IAAIA,CAAE,EAAG,CACvB,QAAQ,KAAK,iBAAiBA,CAAE,iBAAiB,EACjD,MACJ,CAEA,KAAK,WAAW,IAAIA,EAAI,EAAK,EAE7B,MAAMuQ,EAAQ,KAAK,YAAY,IAAIvQ,CAAE,EACjCuQ,GAASA,EAAM,QACfA,EAAM,OAAO,OAAOA,CAAK,CAEjC,CAOO,UAAUvQ,EAAqB,CAClC,OAAO,KAAK,WAAW,IAAIA,CAAE,GAAK,EACtC,CAMO,eAA+C,CAClD,OAAO,IAAI,IAAI,KAAK,OAAO,CAC/B,CAOO,UAAUA,EAA0C,CACvD,OAAO,KAAK,QAAQ,IAAIA,CAAE,CAC9B,CAMO,cAA8C,CACjD,OAAO,IAAI,IAAI,KAAK,WAAW,CACnC,CAOO,SAASA,EAA0C,CACtD,OAAO,KAAK,YAAY,IAAIA,CAAE,CAClC,CAMO,YAAYA,EAAkB,CAEjC,GAAI,CAAC,KAAK,QAAQ,IAAIA,CAAE,EAAG,CACvB,QAAQ,KAAK,iBAAiBA,CAAE,iBAAiB,EACjD,MACJ,CAEA,KAAK,gBAAkBA,CAC3B,CAKO,eAAsB,CACzB,KAAK,gBAAkB,IAC3B,CAMO,oBAAoC,CACvC,OAAO,KAAK,eAChB,CAMO,wBAAuD,CAC1D,GAAI,KAAK,gBACL,OAAO,KAAK,QAAQ,IAAI,KAAK,eAAe,CAGpD,CAMO,kBAAiD,CACpD,GAAI,KAAK,gBACL,OAAO,KAAK,YAAY,IAAI,KAAK,eAAe,CAGxD,CAMO,YAAYA,EAAkB,CAC7B,KAAK,UAAUA,CAAE,EACjB,KAAK,QAAQA,CAAE,EAEf,KAAK,OAAOA,CAAE,CAEtB,CAKO,SAAgB,CAEnB,MAAM,KAAK,KAAK,YAAY,OAAA,CAAQ,EAAE,QAAQuQ,GAAS,CAC/CA,EAAM,QACNA,EAAM,OAAO,OAAOA,CAAK,CAEjC,CAAC,EAGD,KAAK,YAAY,MAAA,EACjB,KAAK,QAAQ,MAAA,EACb,KAAK,WAAW,MAAA,EAChB,KAAK,gBAAkB,IAC3B,CACJ","x_google_ignoreList":[17,18,19]}